{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-mouse-dragdrop.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC0E;AAC7E;AACyB;AACS;;AAEjF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,oCAAoC,EAAE,OAAO;AAC7C;AACA,+BAA+B,oDAAe;AAC9C,+BAA+B,4CAAO;AACtC,6BAA6B,oDAAe;AAC5C,4BAA4B,0DAAG;AAC/B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,kCAAkC,EAAE,IAAI,6DAAM;AACxE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,eAAe,EAAE;AAC3C;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,2DAA2D,WAAW;AACtE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C,2BAA2B,oDAAe;AAC1C;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,QAAQ,iDAAI,sBAAsB,gEAAS;AAC3C,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,sBAAsB,iDAAI;AAC1B;AACA,qBAAqB,gEAAS;AAC9B,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,oBAAoB,EAAE,IAAI,0DAAG;AAC5D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,4DAAK;AAClB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,gEAAS;AAC9B,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,qBAAqB,EAAE,IAAI,0DAAG;AAC7D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,6DAAM;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,mEAAmE,EAAE,IAAI,0DAAG;AAC3G,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,4DAAK;AAClB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,iDAAI,wCAAwC,gEAAS;AAC7D,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,iDAAI,wCAAwC,gEAAS;AAC7D,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,mCAAmC,+DAAiB;AACpD;AACA;AACA,yDAAyD,eAAe,QAAQ,SAAS,iBAAiB,cAAc,yBAAyB,sBAAsB,qBAAqB,iBAAiB,aAAa,mBAAmB,6BAA6B,kCAAkC,kBAAkB,MAAM,OAAO,WAAW,YAAY,aAAa,mBAAmB,6BAA6B,uCAAuC,+BAA+B,4BAA4B,kCAAkC,wBAAwB,eAAe,oCAAoC,kBAAkB,MAAM,OAAO,uCAAuC,+BAA+B,4BAA4B,kCAAkC,wBAAwB,eAAe;AACxzB,iBAAiB;AACjB;AACA;AACA,mEAAmE;AACnE,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,uDAAS,oBAAoB;AACpD,mBAAmB,OAAO,uDAAS,sBAAsB;AACzD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB,qBAAqB,sDAAS;AAC9B,mBAAmB,EAAE;AACrB,uBAAuB,sDAAS;AAChC,QAAQ,sDAAS,6BAA6B,gEAAS;AACvD,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,sDAAS,4BAA4B,gEAAS,UAAU,6DAAM;AAC1E,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,4BAA4B,EAAE;AAC5D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,kCAAkC,4CAAO;AACzC,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B;AACA,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC,kDAAK,yBAAyB,4DAAK,IAAI,0DAAG;AAC1E,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,sDAAS,0CAA0C,gEAAS;AAChF;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,6CAA6C,kDAAI;AACjD,uCAAuC,EAAE;AACzC,+CAA+C,sDAAQ;AACvD,uCAAuC,EAAE;AACzC;AACA;AACA,yEAAyE,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,0DAA0D,EAAE;AAC5D;AACA,6CAA6C,4DAAK;AAClD,2CAA2C,EAAE;AAC7C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,mCAAmC;AAClE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB,wBAAwB,iDAAI;AAC5B,mBAAmB,EAAE;AACrB,mCAAmC,6DAAM;AACzC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,eAAe,EAAE;AAC3C,uBAAuB,gEAAS;AAChC,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,cAAc,EAAE;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,4DAAK;AAC5B;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,iDAAI,mCAAmC,gEAAS;AAC5D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,iCAAiC,kDAAI;AACrC;AACA;AACA,iDAAiD,sDAAQ;AACzD;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA,+CAA+C,EAAE;AACjD,qEAAqE,EAAE;AACvE;AACA;AACA,4DAA4D,4DAAK;AACjE;AACA,mDAAmD,EAAE;AACrD,oDAAoD;AACpD;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,mCAAmC;AAClE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEyJ;;AAEzJ,4D","file":"default~circular-picker-circular-picker-demo-module~color-selector-color-selector-demo-module~conten~ec00beff.js","sourcesContent":["import { MatIconModule } from '@angular/material';\nimport { Injectable, Component, ElementRef, ViewChild, ViewEncapsulation, Directive, Input, NgModule } from '@angular/core';\nimport { Position, Rect } from '@deja-js/core';\nimport { BehaviorSubject, Subject, from, fromEvent, merge } from 'rxjs';\nimport { filter, tap, delay, takeWhile, first, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMouseDragDropService = /** @class */ (function () {\n    function DejaMouseDragDropService() {\n        var _this = this;\n        this._context = (/** @type {?} */ ({}));\n        this._isDragging = false;\n        this.dragCursor$ = new BehaviorSubject(undefined);\n        this.dropCursor$ = new Subject();\n        this.dragging$ = new BehaviorSubject(false);\n        this.dragging$.pipe(tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return _this._isDragging = value; })), filter((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return !value; })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._context = {}; }));\n    }\n    Object.defineProperty(DejaMouseDragDropService.prototype, \"isDragging\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isDragging;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaMouseDragDropService.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._context;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._context = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DejaMouseDragDropService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    DejaMouseDragDropService.ctorParameters = function () { return []; };\n    return DejaMouseDragDropService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMouseDragDropCursorComponent = /** @class */ (function () {\n    function DejaMouseDragDropCursorComponent(elementRef, dragDropService) {\n        var _this = this;\n        this.dragDropService = dragDropService;\n        this.position$ = new BehaviorSubject(undefined);\n        this.cursor$ = new BehaviorSubject(undefined);\n        this.isAlive = true;\n        /** @type {?} */\n        var element = (/** @type {?} */ (elementRef.nativeElement));\n        from(this.position$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} pos\n         * @return {?}\n         */\n        function (pos) {\n            element.style.left = pos ? pos.left + \"px\" : '-1000px';\n            element.style.top = pos ? pos.top + \"px\" : '-1000px';\n        }));\n        /** @type {?} */\n        var cursor$ = from(this.cursor$);\n        // Hide\n        cursor$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), filter((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) { return !dragCursor; })), tap((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) {\n            if (_this._currentCursor && _this.contentElement && _this.iconElement) {\n                _this.contentElement.style.opacity = '0';\n                _this.iconElement.style.opacity = '0';\n            }\n            _this._currentCursor = dragCursor;\n        })), delay(300))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.position$.next(null);\n            element.style.display = 'none';\n        }));\n        // Show\n        cursor$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), filter((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) { return !!dragCursor; })), tap((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) {\n            element.style.display = '';\n            if (_this.contentElement && _this.iconElement) {\n                _this.contentElement.style.opacity = '0';\n                _this.iconElement.style.opacity = '0';\n            }\n            _this._currentCursor = dragCursor;\n        })), filter((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) { return !dragCursor.className || dragCursor.className !== 'hidden'; })), tap((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) {\n            if (!!dragCursor.html) {\n                element.className = dragCursor.className;\n                if (_this.contentElement && _this.iconElement) {\n                    _this.contentElement.innerHTML = dragCursor.html;\n                    _this.contentElement.style.width = (dragCursor.width || 48) + \"px\";\n                    _this.contentElement.style.height = (dragCursor.height || 48) + \"px\";\n                }\n            }\n            else {\n                if (_this.iconElement) {\n                    _this.iconElement.style.opacity = '1';\n                }\n            }\n        })), delay(1))\n            .subscribe((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) {\n            if (!!dragCursor.html && _this.contentElement) {\n                _this.contentElement.style.opacity = '1';\n            }\n        }));\n        from(this.dragDropService.dragCursor$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} dragCursor\n         * @return {?}\n         */\n        function (dragCursor) {\n            if (!!dragCursor !== !!_this._dragCursor) {\n                _this._dragCursor = dragCursor;\n            }\n            if (_this._dropCursor && _this._dragCursor) {\n                dragCursor.className = _this._dropCursor.className || _this._dragCursor.className;\n                dragCursor.html = _this._dropCursor.html || _this._dragCursor.html;\n                dragCursor.width = _this._dropCursor.width || _this._dragCursor.width;\n                dragCursor.height = _this._dropCursor.height || _this._dragCursor.height;\n            }\n            if (!!dragCursor !== !!_this._currentCursor || (dragCursor && !!dragCursor.html !== !!_this._currentCursor.html)) {\n                // Update Content\n                _this.cursor$.next(dragCursor);\n            }\n            else if (dragCursor) {\n                // Update only Position\n                _this.position$.next(dragCursor.position);\n            }\n        }));\n        from(this.dragDropService.dropCursor$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} dropCursor\n         * @return {?}\n         */\n        function (dropCursor) {\n            _this._dropCursor = dropCursor;\n        }));\n    }\n    Object.defineProperty(DejaMouseDragDropCursorComponent.prototype, \"iconElement\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return (/** @type {?} */ (this.icon.nativeElement));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaMouseDragDropCursorComponent.prototype, \"contentElement\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return (/** @type {?} */ (this.content.nativeElement));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaMouseDragDropCursorComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    DejaMouseDragDropCursorComponent.decorators = [\n        { type: Component, args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'deja-mouse-dragdrop-cursor',\n                    template: \"<div id=\\\"block\\\" #block>\\n    <mat-icon #block>block</mat-icon>\\n</div>\\n<div #content id=\\\"content\\\"></div>\\n\",\n                    styles: [\"deja-mouse-dragdrop-cursor{position:fixed;width:0;height:0;overflow:visible;z-index:10000;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;align-items:center;justify-content:space-around}deja-mouse-dragdrop-cursor #block{position:absolute;top:0;left:0;width:3rem;height:3rem;display:flex;align-items:center;justify-content:space-around;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition-property:opacity;transition-timing-function:linear;transition-duration:.3s;cursor:default}deja-mouse-dragdrop-cursor #content{position:absolute;top:0;left:0;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition-property:opacity;transition-timing-function:linear;transition-duration:.3s;cursor:default}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaMouseDragDropCursorComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DejaMouseDragDropService }\n    ]; };\n    DejaMouseDragDropCursorComponent.propDecorators = {\n        icon: [{ type: ViewChild, args: ['block',] }],\n        content: [{ type: ViewChild, args: ['content',] }]\n    };\n    return DejaMouseDragDropCursorComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMouseDraggableDirective = /** @class */ (function () {\n    function DejaMouseDraggableDirective(elementRef, dragDropService) {\n        var _this = this;\n        this.isAlive = true;\n        /** @type {?} */\n        var element = (/** @type {?} */ (elementRef.nativeElement));\n        /** @type {?} */\n        var leave$ = fromEvent(element, 'mouseleave');\n        /** @type {?} */\n        var mouseUp$ = fromEvent(element.ownerDocument, 'mouseup');\n        fromEvent(element, 'mouseenter').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            fromEvent(element, 'mousedown').pipe(takeUntil(leave$), filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) { return event.buttons === 1; })))\n                .subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) {\n                /** @type {?} */\n                var moveUp$ = new Subject();\n                /** @type {?} */\n                var target;\n                /** @type {?} */\n                var match = (/**\n                 * @param {?} el\n                 * @return {?}\n                 */\n                function (el) {\n                    return el.tagName === _this.context.target.toUpperCase() || el.id === _this.context.target.substr(1) || el.hasAttribute(_this.context.target.substring(1, _this.context.target.length - 1));\n                });\n                /** @type {?} */\n                var startDrag = (/**\n                 * @return {?}\n                 */\n                function () {\n                    /** @type {?} */\n                    var kill$ = merge(mouseUp$, moveUp$).pipe(first(), tap((/**\n                     * @return {?}\n                     */\n                    function () {\n                        dragDropService.dragCursor$.next(undefined);\n                        dragDropService.dragging$.next(false);\n                    })));\n                    fromEvent(element.ownerDocument, 'mousemove').pipe(takeUntil(kill$))\n                        .subscribe((/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    function (ev) {\n                        if (target && ev.buttons === 1) {\n                            /** @type {?} */\n                            var bounds = new Rect(element.getBoundingClientRect());\n                            /** @type {?} */\n                            var position = new Position(ev.pageX, ev.pageY);\n                            /** @type {?} */\n                            var html = bounds.containsPoint(position) ? target.innerHTML : undefined;\n                            // Post cursor infos to service\n                            dragDropService.dragCursor$.next((/** @type {?} */ ({\n                                position: position,\n                                html: html,\n                                width: target.offsetWidth,\n                                height: target.offsetHeight,\n                                className: _this.context.className,\n                                originalEvent: ev,\n                            })));\n                        }\n                        else {\n                            moveUp$.next();\n                        }\n                        ev.preventDefault();\n                        return false;\n                    }));\n                    dragDropService.dragging$.next(true);\n                });\n                if (_this.context) {\n                    if (_this.context.target) {\n                        target = (/** @type {?} */ (event.target));\n                        while (target && !match(target)) {\n                            target = target.parentElement;\n                        }\n                    }\n                    else {\n                        target = element;\n                    }\n                    if (target && _this.context.dragStart) {\n                        /** @type {?} */\n                        var dragContext = _this.context.dragStart(target);\n                        if (dragContext) {\n                            if (dragContext.subscribe) {\n                                /** @type {?} */\n                                var context = (/** @type {?} */ (dragContext));\n                                // Observable\n                                context.pipe(first()).subscribe((/**\n                                 * @param {?} ddctx\n                                 * @return {?}\n                                 */\n                                function (ddctx) {\n                                    dragDropService.context = ddctx;\n                                    if (ddctx) {\n                                        startDrag();\n                                    }\n                                }));\n                                return;\n                            }\n                            else {\n                                dragDropService.context = dragContext;\n                                startDrag();\n                            }\n                        }\n                    }\n                }\n            }));\n        }));\n    }\n    Object.defineProperty(DejaMouseDraggableDirective.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._context;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._context = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaMouseDraggableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    DejaMouseDraggableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[deja-mouse-draggable]',\n                },] }\n    ];\n    /** @nocollapse */\n    DejaMouseDraggableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DejaMouseDragDropService }\n    ]; };\n    DejaMouseDraggableDirective.propDecorators = {\n        context: [{ type: Input, args: ['deja-mouse-draggable',] }]\n    };\n    return DejaMouseDraggableDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMouseDroppableDirective = /** @class */ (function () {\n    function DejaMouseDroppableDirective(elementRef, dragDropService) {\n        var _this = this;\n        this.isAlive = true;\n        /** @type {?} */\n        var element = (/** @type {?} */ (elementRef.nativeElement));\n        /** @type {?} */\n        var dragging$ = from(dragDropService.dragging$);\n        /** @type {?} */\n        var kill$ = dragging$.pipe(filter((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return !value; })));\n        dragging$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), filter((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return value; })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            kill$.pipe(first())\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                if (_this._dragContext) {\n                    if (_this.context && _this.context.drop) {\n                        _this.context.drop(_this._dragContext);\n                    }\n                    _this._dragContext = undefined;\n                }\n                dragDropService.dropCursor$.next(undefined);\n            }));\n            from(dragDropService.dragCursor$).pipe(takeUntil(kill$))\n                .subscribe((/**\n             * @param {?} dragCursor\n             * @return {?}\n             */\n            function (dragCursor) {\n                /** @type {?} */\n                var bounds = new Rect(element.getBoundingClientRect());\n                if (_this.context && dragCursor) {\n                    var _a = dragCursor.originalEvent, pageX = _a.pageX, pageY = _a.pageY;\n                    if (bounds.containsPoint(new Position(pageX, pageY))) {\n                        if (!_this._dragContext) {\n                            _this._dragContext = dragDropService.context;\n                            if (_this.context.dragEnter) {\n                                /** @type {?} */\n                                var dropContext = _this.context.dragEnter(_this._dragContext, dragCursor);\n                                if (dropContext) {\n                                    /** @type {?} */\n                                    var dropContextObs = (/** @type {?} */ (dropContext));\n                                    if (dropContextObs.subscribe) {\n                                        // Observable\n                                        dropContextObs.pipe(first())\n                                            .subscribe((/**\n                                         * @param {?} cursor\n                                         * @return {?}\n                                         */\n                                        function (cursor) {\n                                            dragDropService.dropCursor$.next(cursor);\n                                        }));\n                                        return;\n                                    }\n                                    else {\n                                        dragDropService.dropCursor$.next((/** @type {?} */ (dropContext)));\n                                    }\n                                }\n                            }\n                        }\n                        else if (_this.context.dragOver) {\n                            /** @type {?} */\n                            var overContext = _this.context.dragOver(_this._dragContext, dragCursor);\n                            if (overContext) {\n                                dragDropService.dropCursor$.next(overContext);\n                            }\n                        }\n                    }\n                    else if (_this._dragContext) {\n                        if (_this.context && _this.context.dragLeave) {\n                            _this.context.dragLeave(_this._dragContext);\n                        }\n                        _this._dragContext = undefined;\n                        dragDropService.dropCursor$.next(undefined);\n                    }\n                }\n            }));\n        }));\n    }\n    Object.defineProperty(DejaMouseDroppableDirective.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._context;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._context = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaMouseDroppableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    DejaMouseDroppableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[deja-mouse-droppable]',\n                },] }\n    ];\n    /** @nocollapse */\n    DejaMouseDroppableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DejaMouseDragDropService }\n    ]; };\n    DejaMouseDroppableDirective.propDecorators = {\n        context: [{ type: Input, args: ['deja-mouse-droppable',] }]\n    };\n    return DejaMouseDroppableDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMouseDragDropModule = /** @class */ (function () {\n    function DejaMouseDragDropModule() {\n    }\n    /**\n     * @return {?}\n     */\n    DejaMouseDragDropModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: DejaMouseDragDropModule,\n            providers: [DejaMouseDragDropService],\n        };\n    };\n    DejaMouseDragDropModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        DejaMouseDraggableDirective,\n                        DejaMouseDroppableDirective,\n                        DejaMouseDragDropCursorComponent\n                    ],\n                    imports: [\n                        MatIconModule,\n                    ],\n                    exports: [\n                        DejaMouseDraggableDirective,\n                        DejaMouseDroppableDirective,\n                        DejaMouseDragDropCursorComponent\n                    ],\n                    providers: [],\n                },] }\n    ];\n    return DejaMouseDragDropModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaMouseDragDropModule, DejaMouseDragDropService, DejaMouseDraggableDirective, DejaMouseDroppableDirective, DejaMouseDragDropCursorComponent };\n\n//# sourceMappingURL=deja-js-component-mouse-dragdrop.js.map"],"sourceRoot":""}