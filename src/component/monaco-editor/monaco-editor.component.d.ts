import { AfterViewInit, EventEmitter, OnChanges, OnDestroy } from '@angular/core';
import { MonacoEditorService } from './monaco-editor.service';
import { IEditorLanguage } from './options/editor-language.model';
import { IEditorScrollbarOptions } from './options/editor-scrollbar-options';
import { IEditorTheme } from './options/editor-theme.component';
export declare class DejaMonacoEditorComponent implements OnDestroy, AfterViewInit, OnChanges {
    monacoEditorService: MonacoEditorService;
    experimentalScreenReader?: boolean;
    ariaLabel?: string;
    rulers?: number[];
    wordSeparators?: string;
    selectionClipboard?: boolean;
    lineNumbers?: boolean;
    selectOnLineNumbers?: boolean;
    lineNumbersMinChars?: number;
    glyphMargin?: boolean;
    lineDecorationsWidth?: number;
    revealHorizontalRightPadding?: number;
    roundedSelection?: boolean;
    theme?: IEditorTheme;
    readOnly?: boolean;
    scrollbar?: IEditorScrollbarOptions;
    overviewRulerLanes?: number;
    cursorBlinking?: string;
    mouseWheelZoom?: boolean;
    cursorStyle?: string;
    fontLigatures?: boolean;
    disableTranslate3d?: boolean;
    hideCursorInOverviewRuler?: boolean;
    scrollBeyondLastLine?: boolean;
    automaticLayout?: boolean;
    wrappingColumn?: number;
    wordWrap?: boolean;
    wrappingIndent?: string;
    wordWrapBreakBeforeCharacters?: string;
    wordWrapBreakAfterCharacters?: string;
    wordWrapBreakObtrusiveCharacters?: string;
    stopRenderingLineAfter?: number;
    hover?: boolean;
    contextmenu?: boolean;
    mouseWheelScrollSensitivity?: number;
    quickSuggestions?: boolean;
    quickSuggestionsDelay?: number;
    parameterHints?: boolean;
    iconsInSuggestions?: boolean;
    autoClosingBrackets?: boolean;
    formatOnType?: boolean;
    suggestOnTriggerCharacters?: boolean;
    acceptSuggestionOnEnter?: boolean;
    snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';
    tabCompletion?: boolean;
    wordBasedSuggestions?: boolean;
    selectionHighlight?: boolean;
    codeLens?: boolean;
    folding?: boolean;
    renderWhitespace?: 'none' | 'boundary' | 'all';
    renderControlCharacters?: boolean;
    renderIndentGuides?: boolean;
    renderLineHighlight?: boolean;
    useTabStops?: boolean;
    fontFamily?: string;
    fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';
    fontSize?: number;
    lineHeight?: number;
    formatOnPaste?: boolean;
    language: IEditorLanguage;
    isDiffEditor: boolean;
    monacoLibPath: string;
    valueToCompare: string;
    value: string;
    valueChange: EventEmitter<{}>;
    valueToCompareChange: EventEmitter<{}>;
    private editorContent;
    private _editor;
    private _value;
    private _valueToCompare;
    constructor(monacoEditorService: MonacoEditorService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    dispose(): void;
    protected onResize(): void;
    private initMonaco();
    private initEditor();
    private initSimpleEditor(div, options);
    private initDiffEditor(div, options);
    private getOptions();
    private updateValue(value);
    private updateValueToCompare(value);
    private getOriginalModel();
    private getModifiedModel();
}
