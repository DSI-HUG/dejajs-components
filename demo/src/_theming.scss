/* ***********************************************************/
/*             Autogenerated file, do not modify.            */
/* ***********************************************************/

@import '~@angular/material/theming';








/* See : http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css */
.noselect {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Chrome/Safari/Opera */
    -khtml-user-select: none;
    /* Konqueror */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently
       not supported by any browser */
}

/* Added for status managment */
// #dpi {}

.deja-backdrop {
	background-color: rgba(#000, 0.5);
	display: block;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	position: fixed;
	z-index: 10;
    cursor: default;
}


@mixin loader-theme($theme) {
    $primary: map-get($theme, primary);

    .waiter {
        border-bottom: 1.1em solid mat-color($primary, 500, 0.2);
        border-left: 1.1em solid mat-color($primary);
        border-right: 1.1em solid mat-color($primary, 500, 0.2);
        border-top: 1.1em solid mat-color($primary, 500, 0.2);
        font-size: 0.7rem;
        position: absolute;
        left: 50%;
        top: 50%;
        margin-left: -5rem;
        margin-top: -5rem;
        -webkit-animation: spin 1.1s infinite linear;
        animation: spin 1.1s infinite linear;
    }

    .waiter,
    .waiter:after {
        border-radius: 50%;
        width: 10em;
        height: 10em;
    }

    @-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }

    @keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }
}
.deja-overlay-container {
    [deja-menu-content]ul,
    [deja-menu-content]>ul {
		padding: 0;
		margin: 0;
		li {
			cursor: pointer;
			align-items: center;
			display: flex;
			justify-content: left;
			list-style-type: none;
			padding: 0.5rem 1rem 0.5rem 0.5rem;
			md-icon {
				margin: 0 0.5rem;
			}
		}
	}

	[deja-menu-content] {
		overflow-x: hidden;
		overflow-y: auto;
		height: 100%;
		display: block;
		border-style: solid;
		border-width: 1px;
		box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		padding: 0.5rem 0;
		>button,
		>a {
			cursor: pointer;
			display: block;
			border: none;
			width: 100%;
			padding: 0.5rem 1rem 0.5rem 1rem;
		}
		>a {
			text-decoration: none;
		}
	}
}
div[class^='deja-popup-pane-'], div[class*=' deja-popup-pane-']{
    .mat-dialog-container {
        padding: 0;
        height: 100%;
    }
}




@mixin deja-material-theme($theme) {
	#dpi {
		@include buttons-theme($theme);
		@include inputs-theme($theme);
		@include tabs-theme($theme);
	}
}
/**
* Mixin for themes
*/

// Import your custom input theme file so you can call the custom-input-theme function



















// Create a theme.
@mixin deja-theme($custom-theme) {
    @include loader-theme($custom-theme);
    @include form-validation-theme($custom-theme);
    @include deja-material-theme($custom-theme);
    @include accordion-theme($custom-theme);
    @include chips-theme($custom-theme);
    @include circular-picker-theme($custom-theme);
    @include data-grid-theme($custom-theme);
    @include date-picker-theme($custom-theme);
    @include date-selector-theme($custom-theme);
    @include list-loader-theme($custom-theme);
    @include markdown-theme($custom-theme);
    @include menu-theme($custom-theme);
    @include message-box-theme($custom-theme);
    @include numeric-stepper-theme($custom-theme);
    @include popup-theme($custom-theme);
    @include range-theme($custom-theme);
    @include select-theme($custom-theme);
    @include sidenav-theme($custom-theme);
    @include tooltip-theme($custom-theme);
    @include tree-list-theme($custom-theme);
    @include viewport-theme($custom-theme);
}


@mixin form-validation-theme($theme) {
    $warn: map-get($theme, warn);
    
    form {
        
        /** RADIO BUTTON **/
        mat-radio-group.ng-invalid.ng-touched {
            label {
                color: mat-color($warn);

                .mat-radio-outer-circle{
                    border-color: mat-color($warn);
                }

                .mat-radio-inner-circle {
                    background-color: mat-color($warn);
                }
            }

            .mat-radio-ripple {
                .mat-ripple-element {
                    background-color: rgba(mat-color($warn), .2);
                }
            }
        }

        /** INPUT **/
        mat-input-container {
            &.ng-invalid {
                &:not(.ng-touched) {
                    .mat-input-wrapper {
                        // Placeholder
                        // .mat-input-flex {
                        //     .mat-input-placeholder {
                        //         color: initial;
                        //     }
                        // }
                        // Barre inférieur
                        .mat-input-underline {
                            .mat-input-ripple {
                                background-color: initial;
                            }
                        }
                    }
                }

                &.ng-touched {
                    // Placeholder
                    .mat-input-flex {
                        .mat-input-placeholder {
                            color: mat-color($warn);
                        }
                    }
                    
                    // Barre inférieur
                    // .mat-input-underline {
                    //     .mat-input-ripple {
                    //         opacity: 1;
                    //         transform: scaleY(1);
                    //         background-color: mat-color($warn);
                    //     }
                    // }

                    // Hint
                    .mat-hint.validation-error, .validation-error {
                        color: mat-color($warn);
                    }
                }
            }
        }
            
    }
}



@mixin menu-theme($theme) {
	$primary: map-get($theme, primary);

	.deja-overlay-container {
		[deja-menu-content]ul,
		[deja-menu-content]>ul {
			li {
				background-color: #FFF;
				color: mat-color($primary);
				&:hover {
					background-color: mat-color($primary);
					color: #FFF;
				}
			}
		}

		[deja-menu-content] {
			background-color: #FFF;
			border-color: rgba(0, 0, 0, 0.3);
			>button,
			>a {
				background-color: #FFF;
				color: mat-color($primary);
				&:hover {
					background-color: mat-color($primary);
					color: #FFF;
				}
			}
		}
	}
}
$primary: #BED2FF;
$secondary: #428BCA;
$lighter: #CEDDFB;
$darker: #003399;
$red: #c0392b;
$warning: #FF9800;
$success: #4CAF50;
$background: #fff;
$foreground: #000;
// Palette primary HUG
$mat-hug-primary: (
    50 : #e8f1f9,
    100 : #c6dcef,
    200 : #a1c5e5,
    300 : #7baeda,
    400 : #5e9cd2,
    500 : #428bca,
    600 : #3c83c5,
    700 : #3378bd,
    800 : #2b6eb7,
    900 : #1d5bab,
    A100 : #e3eeff,
    A200 : #bed2ff,
    A400 : #7db2ff,
    A700 : #63a3ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);


@include mat-core();

// Define color scheme
$primary: mat-palette($mat-hug-primary);
$accent: mat-palette($mat-teal);
$warn: mat-palette($mat-red);

// Create the theme object from colors
$theme: mat-light-theme($primary, $accent, $warn);

// Include theme styles for core and each component used in the app.
@include angular-material-theme($theme);


/* ------ FAKE THEME ----- */
/* WE NEED TO CREATE A FAKE THEME AND OVERRIDE THE COMPONENT MIXIN TO FIX THE MATERIAL COMPONENT COLOR ISSUE */
/* https://github.com/angular/material2/issues/947 */ 
$fake-theme: mat-light-theme($primary, $primary, $warn);
@include mat-radio-theme($fake-theme);


@mixin buttons-theme($theme) {

	[mat-menu-item].with-icon,
	[mat-raised-button].with-icon {
		&:before {
			content: attr(data-icon);
			font-family: 'Material Icons';
			left: 0;
			position: absolute;
			text-align: center;
		}
	}

	[mat-menu-item].with-icon {
		padding-left: 3rem;
		&:before {
			width: 3rem;
			font-size: 130%;
			opacity: 0.85;
		}
	}

	[mat-raised-button].with-icon {
		padding-left: 2rem;
		&:before {
			width: 2rem;
		}
	}

}


@mixin inputs-theme($theme) {
    $primary: map-get($theme, primary);
    $warn: map-get($theme, warn);

    // Fix allow to add an ICO into the placeholder
	mat-input-container {
	    .mat-input-placeholder-wrapper {
            overflow: visible !important;
        }

	    .mat-input-wrapper {
            .mat-input-flex {
                .mat-input-placeholder {
                    &.mat-float:not(.mat-empty),
                    &.mat-float.mat-focused {
                        transform: translateY(-65%) scale(.75) !important;
                    }
                }
            }
	    }
	
        ~.mat-input-message {
            font-size: 0.8rem;
            text-align: left;
        }
    }

}


@mixin tabs-theme($theme) {
	$primary: map-get($theme, primary);

	mat-tab-group {
		&[multi-lines] {
			.mat-tab-labels {
				flex-wrap: wrap;
			}
		}
		.mat-tab-header {
			.mat-tab-label {
				font-size: 80%;
				height: auto;
				line-height: normal;
				min-width: unset;
				padding: 12px 10px;
				position: relative;
				white-space: nowrap;
				&:after {
					background-color: mat-color($primary);
					bottom: 0;
					content: '';
					height: 2px;
					left: 50%;
					position: absolute;
					transition: all 500ms ease;
					width: 0;
				}
				&.mat-tab-label-active { 
					&:after {
						left: 0;
						width: 100%;
					}
				}
			}
			mat-ink-bar {
				background-color: mat-color($primary) !important;
				display: none;
			}
		}
	}
}


@mixin sub-item-list-theme($theme) {
	$primary: map-get($theme, primary);

    &[disabled="true"]{
		.deja-listcontainer {
			>div.listitem {
				&.selected {
					background-color: rgba(0, 0, 0, 0.8);
					color: #fff;
				}
			}
		}        
    }
	&:not([disabled="true"]) {
		.deja-listcontainer {
			>div.listitem {
				&[current="true"] {
					box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.3);
					background-color: rgba(0, 0, 0, 0.03);
				}
				&.selected {
					background-color: rgba(mat-color($primary), 0.75);
					color: #fff;
				}
			}
		}
	}
}


@mixin data-grid-grouparea-theme($theme) {
    $primary: map-get($theme, primary);

    #deja-grid-grouparea {
        border: 1px solid rgba(0, 0, 0, 0.38);
        
        #placeholder {
            color: rgba(0, 0, 0, 0.38);
        }
        
        .group-wrapper {
            background-color: mat-color($primary, A400);
            >&:hover {
                background-color: rgba(255, 255, 255, 0.3);
            }
            #close-button {
                color: #777777;
            }
        }
    }
}


@mixin data-grid-header-theme($theme) {
	$primary: map-get($theme, primary);

    deja-grid-header {
		border-bottom: solid 1px rgba(mat-color($primary), 0.8);

		#deja-grid-header {
			.column-header-wrapper {
				position: relative; // For spinner absolute position
				.sort-waiter {
					background-color: rgba(255, 255, 255, 0.5);
					&:after,
					&:before {
						content: "loop";
						color: transparent;
						width: 100%;
					}
				}
				[separator] {
					border-right: solid 1px mat-color($primary, A400);
				}
				&.dragged {
					background-color: rgba(0, 0, 0, 0.08);
				}
				&:hover {
					background-color: rgba(0, 0, 0, 0.08);
				}
			}
		}
	}
}


@mixin accordion-theme($theme) {
    $primary: map-get($theme, primary);

    .accordion-group {
        deja-accordion-header {
            &[primary] {
                &.accordion-header {
                    background-color: mat-color($primary);
                    color:#FFF;
                    &:hover {
                        background-color: mat-color($primary, 600);
                    }
                }
            }
        }

        &.open {
            deja-accordion-header {
                &[primary] {
                    &.accordion-header {
                        background-color: mat-color($primary, 600);
                    }
                }
            }
        }
    }

    .accordion-group {
        background-color: #FFF;

        .accordion-header {
            &:hover {
                background-color: rgba(0, 0, 0, .04);
            }
        }

        &.open {
            .accordion-header {
                background-color: rgba(0, 0, 0, .04);
            }
        }
    }
}

@mixin chips-theme($theme) {
    $primary: map-get($theme, primary);
    deja-chips {
        >span {
            background-color: mat-color($primary, A400);
            &:hover {
                background-color: mat-color($primary, A700);
            }
            >span {
                #close-button {
                    color: #777777;
                }
            }
        }
    }
}


@mixin circular-picker-theme($theme) {
	$primary: map-get($theme, primary);

	.circular-picker {
		border: 1px solid#dfdfdf;
		background-color: #dfdfdf;

		&.disabled {
			.value {
				&:hover {
					background-color: transparent;
					color: initial;
					cursor: not-allowed;
				}
			}
			.cursor-container {
				.cursor {
					background-color: #AAA;
				}
				.cursorHand {
					background-color: #AAA;
				}
			}
		}
		.value {
			&:hover {
				background-color: mat-color($primary);
				color: #FFF;
			}
		}
		.cursor-container {
			.cursor {
				background-color: mat-color($primary);
				color: #FFF;
			}
			.cursorHand {
				background-color: mat-color($primary);
			}
		}
	}
}




@mixin data-grid-theme($theme) {

	deja-grid {
		#treelist {
			#listheader {
				border-bottom: 0;
			}
			.deja-listcontainer {
				>div.listitem {
					&[current="true"] {
						.cell-wrapper[current="true"] {
							box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.3);
						}
					}
				}
			}
		}
	}

	@include data-grid-grouparea-theme($theme);
	@include data-grid-header-theme($theme);
}


@mixin date-picker-theme($theme) {
	$warn: map-get($theme, warn);

	deja-date-picker {
		&.ng-invalid {
			.mat-input-wrapper {
				.mat-input-underline {
					.mat-input-ripple {
						background-color: mat-color($warn);
					}
				}
				.mat-input-flex {
					.mat-input-infix {
						.mat-input-placeholder {
							color: mat-color($warn);
						}
					}
				}
			}
		}
	}
}

.deja-overlay-container {
	.actions {
		button {
			color: #FFF;
		}
	}
}


@mixin date-selector-theme($theme) {
    $primary: map-get($theme, primary);

    #date-time-selector {
        background-color: #FFF;
        color: #000;
        #time-header,
        #date-header {
            background-color: mat-color($primary);
            color: #FFF;
            button[mat-mini-fab] {
                background: mat-color($primary);
                box-shadow: none;
                color: #FFF;
            }
        }
        #time-selector {
            deja-circular-picker {
                &.hours .circular-picker {
                    background: transparent;
                    &:before {
                        background-color: mat-color($primary);
                    }
                    &.disabled:before {
                        background: #AAA;
                    }
                }
            }
        }
        #date-selector {
            #sub-header {
                .month {
                    button[mat-mini-fab] {
                        background: #FFF;
                        color: mat-color($primary);
                    }
                }
                .days {
                    span {
                        color: rgba(0, 0, 0, 0.7);
                    }
                }
            }
            #date-body {
                .date {
                    .day {
                        &[current="true"] {
                            color: mat-color($primary);
                        }
                        &.background {
                            color: rgba(0, 0, 0, 0.5);
                        }
                        &.disabled {
                            color: rgba(0, 0, 0, 0.3);
                            &:hover {
                                background: none;
                                color: inherit;
                            }
                        }
                        &:hover,
                        &[selected] {
                            background: mat-color($primary);
                            color: #FFF;
                        }
                    }
                }
            }
        }
    }
}


@mixin list-loader-theme($theme) {
    $primary: map-get($theme, primary);

    .spinner>div {
        background-color: mat-color($primary);
    }
}


@mixin message-box-theme($theme) {
	$primary: map-get($theme, primary);
	$warn: map-get($theme, warn);

	$warning: #FF9800;
	$success: #4CAF50;

	deja-message-box {
		background-color: #FFF;

		#msgbox {
			&.info,
			&.primary {
				border-color: mat-color($primary);
				.mat-card-title {
					background-color: mat-color($primary);
					color: #FFF;
				}
			}
			&.danger {
				border-color: mat-color($warn);
				.mat-card-title {
					background-color: mat-color($warn);
					color: #FFF;
				}
			}
			&.warn {
				border-color: $warning;
				.mat-card-title {
					background-color: $warning;
					color: #FFF;
				}
			}
			&.success {
				border-color: $success;
				.mat-card-title {
					background-color: $success;
					color: #FFF;
				}
			}

			.mat-card-actions {
				button {
					&.mat-success[mat-icon-button]:not([disabled]) {
						color: $success !important;
					}

					&.mat-warn[mat-icon-button]:not([disabled]) {
						color: $warning !important;
					}

					&.mat-danger[mat-icon-button]:not([disabled]) {
						color: mat-color($warn) !important;
					}

					&.mat-success[mat-raised-button],
					&.mat-success[mat-fab],
					&.mat-success[mat-mini-fab] {
						&:not([disabled]) {
							background-color: $success !important;
							color: #FFF !important;
						}
					}

					&.mat-warn[mat-raised-button],
					&.mat-warn[mat-fab],
					&.mat-warn[mat-mini-fab] {
						background-color: $warning !important;
						color: #FFF !important;
					}

					&.mat-danger[mat-raised-button],
					&.mat-danger[mat-fab],
					&.mat-danger[mat-mini-fab] {
						&:not([disabled]) {
							background-color: mat-color($warn) !important;
							color: #FFF !important;
						}
					}

					&.mat-blank[mat-raised-button],
					&.mat-blank[mat-fab],
					&.mat-blank[mat-mini-fab] {
						&:not([disabled]) {
							background-color: transparent !important;
							color: rgba(0, 0, 0, 0.6) !important;
						}
					}
				}
			}
		}
	}
}



@mixin numeric-stepper-theme($theme) {
    $warn: map-get($theme, warn);

    deja-numeric-stepper {
        .off-limits {
            color: mat-color($warn);
        }
    } 
}


@mixin popup-theme($theme) {
    $primary: map-get($theme, primary);
    deja-popup-box{
        background-color: mat-color($primary);
    }
    deja-popup-toolbar{
        background-color: mat-color($primary);
    }

}


@mixin range-theme($theme) {
    $primary: map-get($theme, primary);

    #container {
        .separator {
            .default-separator {
                .default-separator-item {
                    background: mat-color($primary, A400);
                }
            }
        }
        @-webkit-keyframes selected {
            from {
                border-bottom: 0px solid mat-color($primary);
            }
            to {
                border-bottom: 2px solid mat-color($primary);
            }
        }
        @keyframes selected {
            from {
                border-bottom: 0px solid mat-color($primary);
            }
            to {
                border-bottom: 2px solid mat-color($primary);
            }
        }
        @-webkit-keyframes not-selected {
            from {
                border-bottom: 2px solid mat-color($primary);
            }
            to {
                border-bottom: 0px solid mat-color($primary);
            }
        }
        @keyframes not-selected {
            from {
                border-bottom: 2px solid mat-color($primary);
            }
            to {
                border-bottom: 0px solid mat-color($primary);
            }
        }
    }
}

@mixin select-theme($theme) {
    $primary: map-get($theme, primary);
    $warn: map-get($theme, warn);
    $background: #FFF;
    $foreground: #000;
    deja-select {
        &.ng-invalid {
            #input {
                .mat-input-wrapper {
                    .mat-input-underline {
                        .mat-input-ripple {
                            background-color: mat-color($warn);
                        }
                    }
                    .mat-input-placeholder.mat-focused {
                        color: mat-color($warn) !important;
                    }
                }
            }
        }
        #input {
            .mat-input-suffix {
                #clear-button {
                    &:hover {
                        color: mat-color($primary);
                    }
                }
            }
            &[wait="true"] {
                .mat-input-wrapper {
                    .mat-input-underline {
                        &:before {
                            background-color: mat-color($primary);
                        }
                        &:after {
                            background-color: mat-color($primary);
                        }
                        .mat-input-ripple {
                            background-color: transparent;
                        }
                    }
                }
            }
            [matSuffix] {
                mat-progress-spinner {
                    svg path {
                        stroke: mat-color($primary);
                    }
                }
            }
        }
        #select-backdrop {
            &:not([mobile]) {
                background-color: transparent !important;
            }
        }
    }
    .deja-overlay-container {
        .deja-listcontainer {
            box-shadow: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);
            background-color: $background !important;
            color: $foreground !important;
            &[keynav="false"] {
                div.listitem:not(.unselectable):hover {
                    background-color: mat-color($primary);
                    color: #fff;
                }
            }
        }
        @include sub-item-list-theme($theme);
    }
}



@mixin sidenav-theme($theme) {
	$primary: map-get($theme, primary);

	deja-sidenav {
		.mat-drawer-container {
			&.sidenav-light {
				.mat-sidenav {
					.header {
						background: mat-color($primary);
						.header-menu-btn .mat-icon {
							color: rgba(255, 255, 255, 0.87);
						}
					}
				}
			}

			.mat-sidenav {
				.header {
					border-right: 1px solid mat-color($primary);
					border-bottom: 1px solid rgba(0, 0, 0, 0.14);
					background: white;
				}

				deja-sidenav-menu {
					border-right: 1px solid rgba(0, 0, 0, 0.14);

					.mat-list-item {
						&.active {
							.mat-list-icon,
							.mat-list-text {
								color: mat-color($primary) !important;
							}
						}

						.mat-list-item-content {
							.mat-list-icon {
								color: rgba(0, 0, 0, 0.54);
							}

							.mat-list-text {
								color: rgba(0, 0, 0, 0.87);
							}
						}
					}
				}
			}
		}
	}
}


@mixin tooltip-theme($theme) {
	$primary: map-get($theme, primary);

	.deja-overlay-container {
		#tooltip {
			background-color: mat-color($primary);
			color: #fff;
		}
	}
}

@mixin tree-list-theme($theme) {
    $primary: map-get($theme, primary);
    $warn: map-get($theme, warn);
    deja-tree-list {
        &[disabled="true"] {
            .deja-listcontainer {
                background-color: rgba(0, 0, 0, 0.05);
                color: rgba(0, 0, 0, 0.8);
                #error-hint {
                    color: rgba(0, 0, 0, 0.5);
                }
            }
        }
        &.ng-invalid {
            #input {
                .mat-input-wrapper {
                    .mat-input-underline {
                        .mat-input-ripple {
                            background-color: mat-color($warn);
                        }
                    }
                    .mat-input-placeholder {
                        color: mat-color($warn) !important;
                    }
                }
            }
        }
        #listheader {
            border-top: solid 1px rgba(0, 0, 0, 0.2);
            border-left: solid 1px rgba(0, 0, 0, 0.2);
            border-right: solid 1px rgba(0, 0, 0, 0.2);
            border-bottom: solid 1px rgba(mat-color($primary), 0.8);
        }
        .deja-listcontainer {
            border: solid 1px rgba(0, 0, 0, 0.2);
        }
        &:not([disabled="true"]) {
            .deja-listcontainer {
                background-color: white;
                &[keynav="false"]:not(.dragover) {
                    div.listitem:not(.unselectable):hover {
                        background-color: mat-color($primary);
                        color: #fff;
                    }
                }
                #error-hint {
                    color: mat-color($warn);
                }
            }
        }
        @include sub-item-list-theme($theme);
    }
    deja-tree-list[noborders] {
        #listheader {
            border-top: 0;
            border-left: 0;
            border-right: 0;
        }
        .deja-listcontainer {
            border: 0;
        }
    }
}

@mixin viewport-theme($theme) {
    $primary: map-get($theme, primary);

    deja-viewport {
        #up,
        #down {
            &:hover {
                background-color: mat-color($primary);
                color: #fff;
            }
        }
    }
}