{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-viewport.js","webpack:///./src/app/viewport/viewport-demo.html","webpack:///./src/app/viewport/viewport-demo.module.ts","webpack:///./src/app/viewport/viewport-demo.routes.ts","webpack:///./src/app/viewport/viewport-demo.scss","webpack:///./src/app/viewport/viewport-demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACQ;AACsF;AAC5D;AACT;AACe;;AAEvF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,6BAA6B,4CAAO;AACpC;AACA;AACA,QAAQ,sDAAS,wBAAwB,gEAAS;AAClD,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,mEAAY;AAC7D;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,gEAAS;AACzC,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kCAAkC,0DAAY;AAC9C,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAK,SAAS,4DAAK;AACvC;AACA,gCAAgC;AAChC;AACA,iCAAiC,+BAA+B,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,iDAAI,wBAAwB,gEAAS;AAC7C,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2CAA2C,sDAAS;AACpD;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,0BAA0B,iDAAI,wBAAwB,gEAAS;AAC/D,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,0DAAG;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,qCAAqC,sDAAS;AAC9C,+BAA+B,EAAE;AACjC,qCAAqC,kDAAK,CAAC,sDAAS,yBAAyB,sDAAS;AACtF;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,wCAAwC,4DAAK;AAC7C;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,wBAAwB,kDAAK,WAAW,gEAAS;AACjD;AACA,oCAAoC;AACpC;AACA;AACA,4BAA4B,qDAAQ,UAAU,gEAAS;AACvD;AACA,wCAAwC;AACxC;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,wBAAwB,iDAAI,sBAAsB,gEAAS;AAC3D,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,0DAAG;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,qCAAqC,sDAAS;AAC9C,+BAA+B,EAAE;AACjC,qCAAqC,kDAAK,CAAC,sDAAS,uBAAuB,sDAAS;AACpF;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,wCAAwC,4DAAK;AAC7C;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,wBAAwB,kDAAK,WAAW,gEAAS;AACjD;AACA,oCAAoC;AACpC;AACA;AACA,4BAA4B,qDAAQ,UAAU,gEAAS;AACvD;AACA,wCAAwC;AACxC;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,kDAAK,8BAA8B,4DAAK;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,qBAAqB,EAAE;AACrD;AACA,aAAa,IAAI,EAAE;AACnB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,iGAAiG,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,wDAAwD,+DAAiB,aAAa,EAAE;AACxF;AACA,+CAA+C,+DAAiB;AAChE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,YAAY,sDAAS,8BAA8B,gEAAS;AAC5D,wBAAwB;AACxB;AACA,yBAAyB,sBAAsB,EAAE,IAAI,0DAAG;AACxD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oBAAoB,EAAE,oBAAoB,EAAE,IAAI,0DAAG;AACjF,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,+BAA+B,+EAA+E,EAAE;AAChH;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+DAA+D,EAAE;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA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","file":"viewport-viewport-demo-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, HostBinding, Input, ViewChild, NgModule } from '@angular/core';\nimport { ViewportDirection, ViewportMode, ViewPortService } from '@deja-js/core';\nimport { from, fromEvent, interval, merge, Subject, timer } from 'rxjs';\nimport { debounceTime, delay, first, map, takeUntil, takeWhile } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar DejaViewPortScrollStyle = {\n    scrollbar: 0,\n    buttons: 1,\n};\nDejaViewPortScrollStyle[DejaViewPortScrollStyle.scrollbar] = 'scrollbar';\nDejaViewPortScrollStyle[DejaViewPortScrollStyle.buttons] = 'buttons';\nvar DejaViewPortComponent = /** @class */ (function () {\n    function DejaViewPortComponent(changeDetectorRef, viewPort) {\n        var _this = this;\n        this.changeDetectorRef = changeDetectorRef;\n        this.viewPort = viewPort;\n        // Buttons mode only\n        this.hasUpButton = false;\n        this.hasDownButton = false;\n        this._isHorizontal = false;\n        this._hasButtons = false;\n        this.isAlive = true;\n        this.downButton$ = new Subject();\n        this.upButton$ = new Subject();\n        this.buttonsStep = 20;\n        this.scrollPosition = 0;\n        fromEvent(window, 'resize').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), debounceTime(5))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.viewPort.deleteSizeCache();\n            _this.viewPort.refresh();\n            _this.changeDetectorRef.markForCheck();\n        }));\n        viewPort.viewPort$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} viewPortResult\n         * @return {?}\n         */\n        function (viewPortResult) {\n            if (viewPort.mode !== ViewportMode.disabled) {\n                _this.vpItems = (/** @type {?} */ (viewPortResult.visibleItems));\n                _this.vpStartIndex = viewPortResult.startIndex;\n                _this.vpEndIndex = viewPortResult.endIndex;\n            }\n            else {\n                _this.vpStartIndex = 0;\n                _this.vpEndIndex = 0;\n            }\n            if (_this.hasButtons) {\n                _this.startOffset = _this.scrollPos - viewPortResult.beforeSize;\n                _this.beforeSize = null;\n                _this.afterSize = null;\n                _this.hasUpButton = _this.scrollPos > 0;\n                _this.hasDownButton = _this.scrollPos + viewPortResult.listSize < viewPortResult.beforeSize + viewPortResult.viewPortSize + viewPortResult.afterSize;\n            }\n            else {\n                _this.startOffset = 0;\n                _this.beforeSize = viewPortResult.beforeSize || null;\n                _this.afterSize = viewPortResult.afterSize || null;\n                _this.hasUpButton = false;\n                _this.hasDownButton = false;\n            }\n            /** @type {?} */\n            var scroll = (/**\n             * @param {?} vp\n             * @return {?}\n             */\n            function (vp) {\n                if (!_this.hasButtons) {\n                    if (_this.element) {\n                        if (_this._isHorizontal) {\n                            _this.element.scrollLeft = vp.scrollPos;\n                        }\n                        else {\n                            _this.element.scrollTop = vp.scrollPos;\n                        }\n                        _this.scrollPosition = vp.scrollPos;\n                    }\n                }\n                else {\n                    _this.scrollPos = vp.scrollPos;\n                    _this.startOffset = _this.scrollPos - vp.beforeSize;\n                }\n                _this.changeDetectorRef.markForCheck();\n            });\n            if (viewPortResult.scrollPos !== undefined) {\n                /** @type {?} */\n                var length_1 = 0;\n                if (_this.element) {\n                    /** @type {?} */\n                    var listItems = _this.element.getElementsByClassName('listitem');\n                    length_1 = listItems.length;\n                }\n                /** @type {?} */\n                var rebind = length_1 !== viewPortResult.visibleItems.length;\n                if (!rebind) {\n                    scroll(viewPortResult);\n                }\n                else {\n                    _this.changeDetectorRef.markForCheck();\n                    timer(1).pipe(first())\n                        .subscribe((/**\n                     * @return {?}\n                     */\n                    function () { return scroll(viewPortResult); }));\n                }\n            }\n            else {\n                _this.changeDetectorRef.markForCheck();\n            }\n        }));\n        from(this.downButton$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} downButton\n         * @return {?}\n         */\n        function (downButton) {\n            if (downButton) {\n                if (!_this.mouseWheel$Sub) {\n                    _this.mouseWheel$Sub = fromEvent(_this.element, 'mousewheel')\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        _this.scrollPos = _this.scrollPos + event.deltaY;\n                    }));\n                }\n            }\n            else if (_this.mouseWheel$Sub) {\n                _this.mouseWheel$Sub.unsubscribe();\n                delete _this.mouseWheel$Sub;\n                _this.scrollPos = 0;\n            }\n        }));\n        /** @type {?} */\n        var downButton$ = from(this.downButton$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), map((/**\n         * @param {?} downButton\n         * @return {?}\n         */\n        function (downButton) {\n            if (downButton) {\n                if (!_this.downButton$Sub) {\n                    /** @type {?} */\n                    var mousedown$ = fromEvent(downButton, 'mousedown');\n                    /** @type {?} */\n                    var mouseup$_1 = merge(fromEvent(downButton, 'mouseup'), fromEvent(downButton, 'mouseleave'));\n                    _this.downButton$Sub = mousedown$.subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        mouseup$_1.pipe(first())\n                            .subscribe((/**\n                         * @param {?} upEvent\n                         * @return {?}\n                         */\n                        function (upEvent) {\n                            _this.scrollPos += upEvent.ctrlKey ? _this.clientSize : _this.buttonsStep;\n                        }));\n                        timer(750).pipe(takeUntil(mouseup$_1))\n                            .subscribe((/**\n                         * @return {?}\n                         */\n                        function () {\n                            interval(50).pipe(takeUntil(mouseup$_1))\n                                .subscribe((/**\n                             * @return {?}\n                             */\n                            function () {\n                                _this.scrollPos += event.ctrlKey ? _this.clientSize : _this.buttonsStep * 2;\n                            }));\n                        }));\n                    }));\n                    return true;\n                }\n            }\n            else if (_this.downButton$Sub) {\n                _this.downButton$Sub.unsubscribe();\n                delete _this.downButton$Sub;\n                return true;\n            }\n            return false;\n        })));\n        /** @type {?} */\n        var upButton$ = from(this.upButton$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), map((/**\n         * @param {?} upButton\n         * @return {?}\n         */\n        function (upButton) {\n            if (upButton) {\n                if (!_this.upButton$Sub) {\n                    /** @type {?} */\n                    var mousedown$ = fromEvent(upButton, 'mousedown');\n                    /** @type {?} */\n                    var mouseup$_2 = merge(fromEvent(upButton, 'mouseup'), fromEvent(upButton, 'mouseleave'));\n                    _this.upButton$Sub = mousedown$.subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        mouseup$_2.pipe(first())\n                            .subscribe((/**\n                         * @param {?} upEvent\n                         * @return {?}\n                         */\n                        function (upEvent) {\n                            _this.scrollPos -= upEvent.ctrlKey ? _this.clientSize : _this.buttonsStep;\n                        }));\n                        timer(750).pipe(takeUntil(mouseup$_2))\n                            .subscribe((/**\n                         * @return {?}\n                         */\n                        function () {\n                            interval(50).pipe(takeUntil(mouseup$_2))\n                                .subscribe((/**\n                             * @return {?}\n                             */\n                            function () {\n                                _this.scrollPos -= event.ctrlKey ? _this.clientSize : _this.buttonsStep * 2;\n                            }));\n                        }));\n                    }));\n                    return true;\n                }\n            }\n            else if (_this.upButton$Sub) {\n                _this.upButton$Sub.unsubscribe();\n                delete _this.upButton$Sub;\n                return true;\n            }\n            return false;\n        })));\n        merge(downButton$, upButton$).pipe(delay(10))\n            .subscribe((/**\n         * @param {?} needToRefresh\n         * @return {?}\n         */\n        function (needToRefresh) {\n            if (needToRefresh) {\n                _this.viewPort.refresh();\n            }\n        }));\n    }\n    Object.defineProperty(DejaViewPortComponent.prototype, \"hasButtons\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._hasButtons;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"isHorizontal\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isHorizontal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"downButton\", {\n        set: /**\n         * @param {?} element\n         * @return {?}\n         */\n        function (element) {\n            this.downButton$.next((element && element.nativeElement) || null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"upButton\", {\n        set: /**\n         * @param {?} element\n         * @return {?}\n         */\n        function (element) {\n            this.upButton$.next((element && element.nativeElement) || null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"models\", {\n        /** Set the list of models to render inside the viewport control */\n        set: /**\n         * Set the list of models to render inside the viewport control\n         * @param {?} models\n         * @return {?}\n         */\n        function (models) {\n            this.items = models ? models.map((/**\n             * @param {?} model\n             * @return {?}\n             */\n            function (model) { return ((/** @type {?} */ ({\n                model: model,\n            }))); })) : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"items\", {\n        /** Set the list of items to render inside the viewport control */\n        set: /**\n         * Set the list of items to render inside the viewport control\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            this._items = items || [];\n            if (this.viewPort.mode === ViewportMode.disabled) {\n                this.vpItems = this._items;\n            }\n            this.viewPort.items$.next(this._items);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"scrollingStyle\", {\n        /** Set the scrolling style\n          * scrollbar: Classic scrollbars\n          * buttons: A button before is placed at the top or at the left of the list, and a button after is placed at the right or the bottom of the list.\n          */\n        set: /**\n         * Set the scrolling style\n         * scrollbar: Classic scrollbars\n         * buttons: A button before is placed at the top or at the left of the list, and a button after is placed at the right or the bottom of the list.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var scrollingStyle = typeof value === 'string' ? DejaViewPortScrollStyle[(/** @type {?} */ (value))] : value;\n            this._hasButtons = scrollingStyle === DejaViewPortScrollStyle.buttons;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"direction\", {\n        /** Set the direction of the items rendering\n         * vertical: The item are displayed vertically\n         * horizontal: The item are displayed horizontally\n         */\n        set: /**\n         * Set the direction of the items rendering\n         * vertical: The item are displayed vertically\n         * horizontal: The item are displayed horizontally\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var direction = typeof value === 'string' ? ViewportDirection[(/** @type {?} */ (value))] : value;\n            this.viewPort.direction$.next(direction);\n            this._isHorizontal = direction === ViewportDirection.horizontal;\n            this.changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"itemSize\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.viewPort.itemsSize;\n        },\n        /** Set the item size in fixed mode or the default item size before rendering in auto mode */\n        set: /**\n         * Set the item size in fixed mode or the default item size before rendering in auto mode\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this.viewPort.itemsSize$.next(+value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"wrapperElement\", {\n        set: /**\n         * @param {?} element\n         * @return {?}\n         */\n        function (element) {\n            var _this = this;\n            this.element = (/** @type {?} */ (element.nativeElement));\n            this.viewPort.element$.next(this.element);\n            fromEvent(this.element, 'scroll').pipe(takeWhile((/**\n             * @return {?}\n             */\n            function () { return _this.isAlive; })), map((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) { return (/** @type {?} */ (event.target)); })), map((/**\n             * @param {?} target\n             * @return {?}\n             */\n            function (target) { return Math.round(_this._isHorizontal ? target.scrollLeft : target.scrollTop); })))\n                .subscribe((/**\n             * @param {?} scrollPos\n             * @return {?}\n             */\n            function (scrollPos) {\n                _this.viewPort.scrollPosition$.next(scrollPos);\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"itemTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.itemTemplateExternal || this.itemTemplateInternal; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"clientSize\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (!this.element) {\n                return 0;\n            }\n            return this._isHorizontal ? this.element.clientWidth : this.element.clientHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"scrollPos\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return this.scrollPosition;\n        },\n        set: /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var scrollPos = Math.max(value, 0);\n            this.scrollPosition = scrollPos;\n            this.viewPort.scrollPosition$.next(scrollPos);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaViewPortComponent.prototype, \"viewportMode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.viewPort.mode;\n        },\n        /**\n         * Définit la méthode de calcul de la taille des éléments. Les valuers acceptées sont\n         * disabled: Tous les éléments sont rendus. (< 100 éléments)\n         * fixed: Seul les éléments visibles sont rendus. La taille des éléments est constante et définie par itemsSize. (performances ++)\n         * variable: Seul les éléments visibles sont rendus. La taille des éléments est variable et définie par item.size. (performances +-)\n         * auto: Seul les éléments visibles sont rendus. La taille des éléments est calculée automatiquement (performances --)\n         */\n        set: /**\n         * Définit la méthode de calcul de la taille des éléments. Les valuers acceptées sont\n         * disabled: Tous les éléments sont rendus. (< 100 éléments)\n         * fixed: Seul les éléments visibles sont rendus. La taille des éléments est constante et définie par itemsSize. (performances ++)\n         * variable: Seul les éléments visibles sont rendus. La taille des éléments est variable et définie par item.size. (performances +-)\n         * auto: Seul les éléments visibles sont rendus. La taille des éléments est calculée automatiquement (performances --)\n         * @param {?} mode\n         * @return {?}\n         */\n        function (mode) {\n            this.viewPort.mode$.next(mode);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n        if (this.downButton$Sub) {\n            this.downButton$Sub.unsubscribe();\n        }\n        if (this.upButton$Sub) {\n            this.upButton$Sub.unsubscribe();\n        }\n        if (this.mouseWheel$Sub) {\n            this.mouseWheel$Sub.unsubscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.refresh = /**\n     * @return {?}\n     */\n    function () {\n        this.changeDetectorRef.markForCheck();\n    };\n    /** Recalcule le viewport. */\n    /**\n     * Recalcule le viewport.\n     * @param {?=} item\n     * @param {?=} clearMeasuredHeight\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.refreshViewPort = /**\n     * Recalcule le viewport.\n     * @param {?=} item\n     * @param {?=} clearMeasuredHeight\n     * @return {?}\n     */\n    function (item, clearMeasuredHeight) {\n        /** @type {?} */\n        var refreshParams = (/** @type {?} */ ({}));\n        if (item) {\n            refreshParams.items = [item];\n        }\n        if (clearMeasuredHeight) {\n            refreshParams.clearMeasuredSize = clearMeasuredHeight;\n        }\n        this.viewPort.refresh(refreshParams);\n        this.changeDetectorRef.markForCheck();\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.ensureVisible = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        this.viewPort.ensureItem$.next(item);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.getCssSize = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var itemSize = this.getItemSize(item);\n        return itemSize ? itemSize + \"px\" : 'auto';\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    DejaViewPortComponent.prototype.getItemSize = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        if (this.viewPort.mode === ViewportMode.disabled) {\n            return null;\n        }\n        else if (this.viewPort.mode === ViewportMode.fixed) {\n            return this.itemSize;\n        }\n        else if (this.viewPort.mode === ViewportMode.auto) {\n            return item.size || null;\n        }\n        else {\n            return (item.size && item.size > ViewPortService.itemDefaultSize) ? item.size : this.itemSize;\n        }\n    };\n    DejaViewPortComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [ViewPortService],\n                    selector: 'deja-viewport',\n                    template: \"<div #up id=\\\"up\\\" *ngIf=\\\"hasButtons\\\"><mat-icon>keyboard_arrow_up</mat-icon></div>\\n<div #wrapper id=\\\"viewport-wrapper\\\">\\n\\t<ng-container *ngIf=\\\"!isHorizontal\\\">\\n\\t\\t<div *ngIf=\\\"beforeSize\\\" [style.height.px]=\\\"beforeSize\\\"></div>\\n\\t\\t<div class=\\\"listitem\\\" *ngFor=\\\"let item of vpItems; let index = index\\\" [attr.flat]=\\\"vpStartIndex + index\\\" [style.height]=\\\"getCssSize(item)\\\" [style.margin-top.px]=\\\"startOffset && index === 0 ? -startOffset : null\\\">\\n\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"itemTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, index: vpStartIndex + index, size: getItemSize(item), model: item.model }\\\"></ng-template>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"afterSize\\\" [style.height.px]=\\\"afterSize\\\"></div>\\n\\t</ng-container>\\n\\t<ng-container *ngIf=\\\"isHorizontal\\\">\\n\\t\\t<div *ngIf=\\\"beforeSize\\\" [style.flex-basis.px]=\\\"beforeSize\\\"></div>\\n\\t\\t<div class=\\\"listitem\\\" *ngFor=\\\"let item of vpItems; let index = index\\\" [attr.flat]=\\\"vpStartIndex + index\\\" [style.flex-basis]=\\\"getCssSize(item)\\\" [style.margin-left.px]=\\\"startOffset && index === 0 ? -startOffset : null\\\">\\n\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"itemTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, index: vpStartIndex + index, size: getItemSize(item), model: item.model }\\\"></ng-template>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"afterSize\\\" [style.flex-basis.px]=\\\"afterSize\\\"></div>\\n\\t</ng-container>\\n</div>\\n<div #down id=\\\"down\\\" *ngIf=\\\"hasButtons\\\"><mat-icon>keyboard_arrow_down</mat-icon></div>\",\n                    styles: [\":host{position:relative;display:flex;flex-direction:row;overflow:hidden}:host[hasUpBtn=false] #up{visibility:hidden}:host[hasDownBtn=false] #down{visibility:hidden}:host[buttons=false][horizontal=false] #viewport-wrapper{width:100%;overflow-y:auto}:host[buttons=false][horizontal=true] #viewport-wrapper{height:100%;overflow-x:auto}:host[buttons=true][horizontal=false]{flex-direction:column}:host #viewport-wrapper{position:relative;flex-grow:1;overflow:hidden}:host #viewport-wrapper>div{padding:0;margin:0}:host #down,:host #up{flex:0 0 auto;display:flex;justify-content:space-around;align-items:center;font-size:120%;cursor:pointer;z-index:1}:host[horizontal=false] #viewport-wrapper>div{width:100%}:host[horizontal=false] #down,:host[horizontal=false] #up{padding:.15rem 0}:host[horizontal=true] #viewport-wrapper{display:flex;justify-content:flex-start;align-items:stretch;flex-direction:row}:host[horizontal=true] #viewport-wrapper>div{height:100%;overflow:hidden;flex-grow:0;flex-shrink:0}:host[horizontal=true] #down,:host[horizontal=true] #up{padding:0 .15rem}:host[horizontal=true] #down .mat-icon,:host[horizontal=true] #up .mat-icon{-webkit-transform:rotate(270Deg);transform:rotate(270Deg)}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaViewPortComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: ViewPortService }\n    ]; };\n    DejaViewPortComponent.propDecorators = {\n        hasUpButton: [{ type: HostBinding, args: ['attr.hasUpBtn',] }],\n        hasDownButton: [{ type: HostBinding, args: ['attr.hasDownBtn',] }],\n        _isHorizontal: [{ type: HostBinding, args: ['attr.horizontal',] }],\n        _hasButtons: [{ type: HostBinding, args: ['attr.buttons',] }],\n        itemTemplateExternal: [{ type: Input }],\n        itemTemplateInternal: [{ type: ContentChild, args: ['itemTemplate',] }],\n        downButton: [{ type: ViewChild, args: ['down',] }],\n        upButton: [{ type: ViewChild, args: ['up',] }],\n        models: [{ type: Input }],\n        items: [{ type: Input }],\n        scrollingStyle: [{ type: Input }],\n        direction: [{ type: Input }],\n        itemSize: [{ type: Input }],\n        wrapperElement: [{ type: ViewChild, args: ['wrapper',] }],\n        viewportMode: [{ type: Input }]\n    };\n    return DejaViewPortComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaViewPortModule = /** @class */ (function () {\n    function DejaViewPortModule() {\n    }\n    DejaViewPortModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        DejaViewPortComponent,\n                    ],\n                    exports: [\n                        DejaViewPortComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        MatIconModule,\n                    ],\n                },] }\n    ];\n    return DejaViewPortModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaViewPortModule, DejaViewPortScrollStyle, DejaViewPortComponent };\n\n//# sourceMappingURL=deja-js-component-viewport.js.map","module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">\\n\\t<!--<mat-tab label=\\\"OVERVIEW\\\">-->\\n\\t<!--<mat-card class=\\\"demo-card demo-basic\\\">-->\\n\\t<!--TODO-->\\n\\t<!--</mat-card>-->\\n\\t<!--</mat-tab>-->\\n\\t<mat-tab label=\\\"API REFERENCE\\\"> </mat-tab>\\n\\t<mat-tab label=\\\"EXAMPLES\\\"> </mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n\\t<deja-markdown [url]=\\\"'https://raw.githubusercontent.com/DSI-HUG/dejajs-components/dev/src/component/viewport/readme.md'\\\"></deja-markdown>\\n</mat-card>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 1\\\">\\n\\t<mat-toolbar color=\\\"primary\\\">Viewport</mat-toolbar>\\n\\t<mat-card-content id=\\\"viewPortContainer\\\">\\n\\t\\tSample with a big list of more than 3000 templates. Rendering can be horizontal or vertical. Only the visible templates are created on the dom. In this example, the size of the template is automatically calculated on the rendering, and the scroll bar is adapted during the scolling. This is the worst case for perfomances.\\n\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"3rem\\\">\\n\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"isHorizontal\\\">Horizontal</mat-checkbox>\\n\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"hasButtons\\\">Buttons Scrolling (Tips: press ctrl to increase the step)</mat-checkbox>\\n\\t\\t\\t<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"1rem\\\">\\n\\t\\t\\t\\t<span>Ensure index:</span>\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 3rem\\\">\\n\\t\\t\\t\\t\\t<input matInput type=\\\"number\\\" [(ngModel)]=\\\"ensureIndex\\\" autocomplete=\\\"off\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<button type=\\\"button\\\" mat-button (click)=\\\"viewport.ensureVisible(ensureIndex)\\\">Go</button>\\n\\t\\t\\t</span>\\n\\t\\t</div>\\n\\t\\t<deja-viewport #viewport [models]=\\\"news$ | async\\\" viewportMode=\\\"auto\\\" [direction]=\\\"isHorizontal ? 'horizontal': 'vertical'\\\" [scrollingStyle]=\\\"hasButtons ? 'buttons' : 'scrollbar'\\\">\\n\\t\\t\\t<ng-template #itemTemplate let-item let-size=\\\"size\\\">\\n\\t\\t\\t\\t<news-card [item]=\\\"item.model\\\" (imageLoaded)=\\\"imageLoaded(item)\\\"></news-card>\\n\\t\\t\\t</ng-template>\\n\\t\\t</deja-viewport>\\n\\t</mat-card-content>\\n</mat-card>\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCheckboxModule, MatInputModule, MatTabsModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DejaViewPortModule } from '@deja-js/component/viewport';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { NewsCardModule } from '../common/news-card.module';\nimport { DejaViewPortDemoComponent } from './viewport-demo';\nimport { routing } from './viewport-demo.routes';\n\n@NgModule({\n    declarations: [DejaViewPortDemoComponent],\n    exports: [DejaViewPortDemoComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        MatInputModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatCardModule,\n        MatTabsModule,\n        MatToolbarModule,\n        DejaViewPortModule,\n        DejaMarkdownModule,\n        NewsCardModule,\n        routing,\n    ],\n    providers: [\n    ],\n})\nexport class DejaViewPortDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DejaViewPortDemoComponent } from './viewport-demo';\n\nconst routes: Routes = [\n    { path: '', component: DejaViewPortDemoComponent },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \":host deja-viewport {\\n  margin-top: 1rem; }\\n  :host deja-viewport[horizontal=\\\"false\\\"] {\\n    height: calc(100vh - 380px); }\\n  :host deja-viewport[horizontal=\\\"false\\\"] .listitem {\\n      box-shadow: inset 1px 0 0 #aaa, inset -1px 0 0 #aaa, inset 0 -1px 0 #aaa; }\\n  :host deja-viewport[horizontal=\\\"false\\\"] .listitem:first-child {\\n        box-shadow: inset 1px 0 0 #aaa, inset -1px 0 0 #aaa, inset 0 -1px 0 #aaa, inset 0 1px 0 #aaa; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] {\\n    height: 25rem; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem {\\n      box-shadow: inset -1px 0 0 #aaa, inset 0 -1px 0 #aaa, inset 0 1px 0 #aaa; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem:first-child {\\n        box-shadow: inset 1px 0 0 #aaa, inset -1px 0 0 #aaa, inset 0 -1px 0 #aaa, inset 0 1px 0 #aaa; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem .news {\\n        max-width: 45rem;\\n        display: block; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem .news .logo {\\n          max-width: 20rem !important; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem .news .text {\\n          flex: 0 1 25rem !important; }\\n  :host deja-viewport[horizontal=\\\"true\\\"] .listitem .news .text .footer {\\n            flex-direction: column !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9EU0ktSFVHL2RlamFqcy1jb21wb25lbnRzL3NyYy9hcHAvdmlld3BvcnQvdmlld3BvcnQtZGVtby5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsZ0JBQWdCLEVBQUE7RUFGeEI7SUFJWSwyQkFBMkIsRUFBQTtFQUp2QztNQU1nQix3RUFBd0UsRUFBQTtFQU54RjtRQVFvQiw0RkFBNEYsRUFBQTtFQVJoSDtJQWFZLGFBQWEsRUFBQTtFQWJ6QjtNQWVnQix3RUFBd0UsRUFBQTtFQWZ4RjtRQWlCb0IsNEZBQTRGLEVBQUE7RUFqQmhIO1FBb0JvQixnQkFBZ0I7UUFDaEIsY0FBYyxFQUFBO0VBckJsQztVQXVCd0IsMkJBQTJCLEVBQUE7RUF2Qm5EO1VBMEJ3QiwwQkFBMEIsRUFBQTtFQTFCbEQ7WUE0QjRCLGlDQUFpQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3BvcnQvdmlld3BvcnQtZGVtby5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGRlamEtdmlld3BvcnQge1xuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAmW2hvcml6b250YWw9XCJmYWxzZVwiXSB7XG4gICAgICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAzODBweCk7XG4gICAgICAgICAgICAubGlzdGl0ZW0ge1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDFweCAwIDAgI2FhYSwgaW5zZXQgLTFweCAwIDAgI2FhYSwgaW5zZXQgMCAtMXB4IDAgI2FhYTtcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCAjYWFhLCBpbnNldCAtMXB4IDAgMCAjYWFhLCBpbnNldCAwIC0xcHggMCAjYWFhLCBpbnNldCAwIDFweCAwICNhYWE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZbaG9yaXpvbnRhbD1cInRydWVcIl0ge1xuICAgICAgICAgICAgaGVpZ2h0OiAyNXJlbTtcbiAgICAgICAgICAgIC5saXN0aXRlbSB7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgI2FhYSwgaW5zZXQgMCAtMXB4IDAgI2FhYSwgaW5zZXQgMCAxcHggMCAjYWFhO1xuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAxcHggMCAwICNhYWEsIGluc2V0IC0xcHggMCAwICNhYWEsIGluc2V0IDAgLTFweCAwICNhYWEsIGluc2V0IDAgMXB4IDAgI2FhYTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm5ld3Mge1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ1cmVtO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgLmxvZ28ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyMHJlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXg6IDAgMSAyNXJlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgLmZvb3RlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { Component, ViewChild } from '@angular/core';\nimport {  } from '@deja-js/component';\nimport { DejaViewPortComponent } from '@deja-js/component/viewport';\nimport { IViewPortItem } from '@deja-js/core';\nimport { Observable } from 'rxjs';\nimport { News } from '../common/news.model';\nimport { NewsService } from '../services/news.service';\n\n@Component({\n    selector: 'deja-viewport-demo',\n    styleUrls: ['./viewport-demo.scss'],\n    templateUrl: './viewport-demo.html',\n})\nexport class DejaViewPortDemoComponent {\n    public tabIndex = 1;\n    public isHorizontal = false;\n    public hasButtons = false;\n    public ensureIndex: number;\n\n    @ViewChild('viewport') private viewport: DejaViewPortComponent;\n\n    protected exampleValue = `\n    <deja-viewport [models]=\"news$ | async\" itemSize=\"120\">\n        <ng-template #itemTemplate let-item>\n            <div *ngIf=\"item\" class=\"news\" [attr.id]=\"id\">\n                <img [attr.src]=\"item.urlsToLogos.medium\" class=\"logo\">\n                <span class=\"text\">\n                    <span class=\"name\">{{ item.name }}</span>\n                    <span class=\"description\">{{ item.description }}</span>\n                    <div class=\"footer\">\n                        <a class=\"url\" [attr.href]=\"item.url\">{{ item.url }}</a>\n                        <span class=\"category\">{{ item.category }}</span>\n                        <span class=\"country\">{{ item.country }}</span>\n                        <span class=\"language\">{{ item.language }}</span>\n                    </div>\n                </span>\n            </div>\n        </ng-template>\n    </deja-viewport>`;\n    protected news$: Observable<News[]>;\n\n    constructor(newsService: NewsService) {\n        this.news$ = newsService.getNews$(50);\n    }\n\n    protected imageLoaded(item: IViewPortItem) {\n        const itemExt = item as IExtendedViewPortItem;\n        if (!itemExt.loaded) {\n            itemExt.loaded = true;\n            this.viewport.refreshViewPort(itemExt);\n        }\n    }\n}\n\ninterface IExtendedViewPortItem extends IViewPortItem {\n    loaded: boolean;\n}\n"],"sourceRoot":""}