{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-loaders.js","webpack:///./dist/deja-js/component/fesm5/deja-js-component-select.js","webpack:///./dist/deja-js/component/fesm5/deja-js-component-templates.js","webpack:///./src/app/select/select-demo.html","webpack:///./src/app/select/select-demo.module.ts","webpack:///./src/app/select/select-demo.routes.ts","webpack:///./src/app/select/select-demo.scss","webpack:///./src/app/select/select-demo.ts","webpack:///./src/app/select/validators.ts"],"names":[],"mappings":"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AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0DAA0D,yEAA0B;AACpF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,yDAAyD,EAAE;AAC3D;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uCAAuC,mFAAqB;AAC5D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,mFAAqB;AACtD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,kFAAoB;AACjD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qBAAqB,EAAE;AAC5C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8DAA8D,6DAAK,IAAI,2DAAG;AAC1E,wBAAwB;AACxB;AACA,yBAAyB,gCAAgC,EAAE,IAAI,iEAAS;AACxE,wBAAwB;AACxB;AACA,yBAAyB,8BAA8B,EAAE;AACzD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,+DAA+D,6DAAK,IAAI,2DAAG;AAC3E,wBAAwB;AACxB;AACA,yBAAyB,gCAAgC,EAAE,IAAI,iEAAS;AACxE,wBAAwB;AACxB;AACA,yBAAyB,8BAA8B,EAAE;AACzD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oDAAoD,EAAE;AACtD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,6CAA6C,8DAAM;AACnD,wBAAwB;AACxB;AACA,yBAAyB,sBAAsB,EAAE;AACjD;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,uDAAS,sCAAsC,iEAAS;AAChE,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE,IAAI,8DAAM;AACxD,oBAAoB;AACpB;AACA,qBAAqB,kDAAkD,EAAE;AACzE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,uDAAS,sCAAsC,iEAAS;AAChE,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE,IAAI,8DAAM;AACxD,oBAAoB;AACpB;AACA,qBAAqB,kDAAkD,EAAE,IAAI,6DAAK,MAAM,8DAAM;AAC9F,oBAAoB;AACpB;AACA,qBAAqB,0DAA0D,EAAE;AACjF;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,uDAAS,qCAAqC,iEAAS;AAC/D,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE,IAAI,8DAAM;AACxD,oBAAoB;AACpB;AACA,qBAAqB,+CAA+C,EAAE;AACtE;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,mDAAK,CAAC,uDAAS,oCAAoC,uDAAS,iDAAiD,iEAAS;AAC9H,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE,IAAI,8DAAM;AACxD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wDAAwD,EAAE,KAAK,uDAAQ;AACvE,+BAA+B,uDAAQ;AACvC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,SAAS,IAAI,iEAAS;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uCAAuC,2DAAG;AACpE,oBAAoB;AACpB;AACA,qBAAqB,cAAc,EAAE,IAAI,EAAE,IAAI,2DAAG;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wDAAwD,EAAE,KAAK,uDAAQ;AACvE;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA,mCAAmC,EAAE;AACrC,+CAA+C,EAAE;AACjD;AACA;AACA,gGAAgG,6DAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,qBAAqB,uDAAS,sCAAsC,8DAAM;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,wDAAwD,EAAE,KAAK,uDAAQ;AACvE,8BAA8B,uDAAQ;AACtC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,4BAA4B,uDAAQ;AACpC,SAAS;AACT,QAAQ,mDAAK,4BAA4B,iEAAS;AAClD,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE,IAAI,2DAAG;AACrD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC,6DAAK;AAC1D;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,sEAAsE,iEAAS;AAC/E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,mCAAmC,6DAAK,IAAI,2DAAG;AACzE,oBAAoB;AACpB;AACA,qBAAqB,cAAc,EAAE,IAAI,EAAE;AAC3C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,wCAAwC,6DAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,kFAAkF,2DAAG;AACrF,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oDAAoD,6DAAK;AACzD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6DAAK;AAC9C;AACA,4BAA4B;AAC5B;AACA,6BAA6B,8BAA8B,EAAE;AAC7D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,EAAE;AACjF,2BAA2B,uDAAS;AACpC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,0EAA0E,EAAE;AAC5E;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,yEAAyE,EAAE;AAC3E;AACA,2EAA2E,6DAAK;AAChF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mDAAmD,EAAE;AACrD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6DAAK;AACxD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,+BAA+B,sDAAQ;AACvC;AACA;AACA,aAAa;AACb;AACA;AACA,qCAAqC,6DAAK;AAC1C;AACA,wBAAwB;AACxB;AACA,yBAAyB,8BAA8B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kFAAkF,2DAAG;AACrF,oBAAoB;AACpB;AACA,qBAAqB,+CAA+C,EAAE;AACtE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,gCAAgC,kDAAkD,EAAE;AACpF,4CAA4C,EAAE;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,kCAAkC,0BAA0B,EAAE;AAC9D;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,4DAA4D,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,6DAAK;AACvD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,+CAA+C,sDAAQ;AACvD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,kCAAkC,2DAAG;AACrC,oBAAoB;AACpB;AACA,qBAAqB,gCAAgC,EAAE,IAAI,qEAAe;AAC1E,QAAQ,6DAAK,IAAI,6DAAK;AACtB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD;AACA,wBAAwB,8DAAe;AACvC,yBAAyB,UAAU,qEAAmB;AACtD;AACA;AACA,u/DAAu/D,gBAAgB,kIAAkI,4zBAA4zB,sBAAsB,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EAAE;AAClC,mCAAmC,OAAO,uDAAS,SAAS,0EAA2B,IAAI;AAC3F;AACA;AACA,CAAC,CAAC,2DAAY;;AAEd;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,0DAAW;AACnC,wBAAwB,6EAAiB;AACzC,wBAAwB,+DAAa;AACrC,wBAAwB,gEAAc;AACtC,wBAAwB,uEAAwB;AAChD,wBAAwB,wEAAe;AACvC,wBAAwB,6DAAc;AACtC,wBAAwB,+EAAoB;AAC5C;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEiD;;AAEjD,oD;;;;;;;;;;;;ACv3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AACiC;AACnC;AACM;;AAEjD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB,wDAAU;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0EAA0E,8DAAW,8BAA8B,8DAAW;AAC9H,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC,uBAAuB,EAAE;AACzB,yBAAyB,wDAAU;AACnC,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,mCAAmC,+DAAiB;AACpD;AACA;AACA,yDAAyD,gBAAgB,gDAAgD,oBAAoB,sBAAsB,WAAW;AAC9K,iBAAiB;AACjB;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,qCAAqC,OAAO,mDAAK,EAAE;AACnD,oCAAoC,OAAO,mDAAK,EAAE;AAClD,8BAA8B,OAAO,mDAAK,EAAE;AAC5C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF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","file":"select-select-demo-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaListLoaderComponent = /** @class */ (function () {\n    function DejaListLoaderComponent() {\n    }\n    DejaListLoaderComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'deja-list-loader',\n                    template: \"<div class=\\\"spinner\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n</div>\\n\",\n                    styles: [\":host .spinner{margin:40px auto 0;width:70px;text-align:center}:host .spinner>div{width:10px;height:10px;border-radius:100%;display:inline-block;-webkit-animation:1.4s ease-in-out infinite both sk-bouncedelay;animation:1.4s ease-in-out infinite both sk-bouncedelay}:host .spinner .bounce1{-webkit-animation-delay:-.32s;animation-delay:-.32s}:host .spinner .bounce2{-webkit-animation-delay:-.16s;animation-delay:-.16s}@-webkit-keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);transform:scale(1)}}\"]\n                }] }\n    ];\n    return DejaListLoaderComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaListLoaderModule = /** @class */ (function () {\n    function DejaListLoaderModule() {\n    }\n    DejaListLoaderModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaListLoaderComponent],\n                    exports: [DejaListLoaderComponent],\n                    imports: [\n                        CommonModule,\n                    ],\n                },] }\n    ];\n    return DejaListLoaderModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaListLoaderModule, DejaListLoaderComponent };\n\n//# sourceMappingURL=deja-js-component-loaders.js.map","import { CommonModule } from '@angular/common';\nimport { DejaChipsModule } from '@deja-js/component/chips';\nimport { DejaListLoaderModule } from '@deja-js/component/loaders';\nimport { __extends, __read, __spread } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, HostBinding, Input, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm, FormsModule } from '@angular/forms';\nimport { MatFormFieldControl, MatInput, MatIconModule, MatInputModule } from '@angular/material';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { DejaOverlayComponent, DejaOverlayModule } from '@deja-js/component/overlay';\nimport { DejaChildValidatorDirective, DejaConnectionPositionPair, DejaItemComponent, ItemListBase, KeyCodes, MediaService, ViewPortService, DejaChildValidatorModule, DejaItemModule, MediaModule } from '@deja-js/core';\nimport { BehaviorSubject, combineLatest, from, fromEvent, merge, Subject, timer } from 'rxjs';\nimport { combineLatest as combineLatest$1, debounce, debounceTime, delay, delayWhen, filter, first, map, switchMap, takeWhile, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\n/**\n * Combo box avec une liste basée sur la treelist\n */\nvar DejaSelectComponent = /** @class */ (function (_super) {\n    __extends(DejaSelectComponent, _super);\n    function DejaSelectComponent(changeDetectorRef, viewPort, fm, elementRef, ngControl, _parentForm, _parentFormGroup, mediaService, _defaultErrorStateMatcher) {\n        var _this = _super.call(this, changeDetectorRef, viewPort) || this;\n        _this.viewPort = viewPort;\n        _this.fm = fm;\n        _this.elementRef = elementRef;\n        _this.ngControl = ngControl;\n        _this._parentForm = _parentForm;\n        _this._parentFormGroup = _parentFormGroup;\n        _this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        _this.id = \"deja-select-\" + DejaSelectComponent.nextId++;\n        _this.describedBy = '';\n        _this.controlType = 'deja-select';\n        _this.errorState = false;\n        _this.stateChanges = new Subject();\n        /**\n         * Offset de position horizontal de la zone de dropdown\n         */\n        _this.overlayOffsetX = 0;\n        /**\n         * Offset de position vertical de la zone de dropdown\n         */\n        _this.overlayOffsetY = 0;\n        /**\n         * Exécuté lorsque le calcul du viewPort est terminé.\n         */\n        _this.viewPortChanged = new EventEmitter();\n        /**\n         * Exécuté lorsque l'utilisateur sélectionne ou désélectionne une ligne.\n         */\n        _this.selectedChange = new EventEmitter();\n        /**\n         * For test only.\n         */\n        _this.dropDownVisibleChange = new EventEmitter();\n        _this.dropDownMaxHeight = null;\n        // NgModel implementation\n        _this.onTouchedCallback = noop;\n        _this.onChangeCallback = noop;\n        _this.onValidatorChangeCallback = noop;\n        _this._keyboardNavigation = false;\n        _this._waiter = false;\n        _this.isMobile = false;\n        _this._disabled = null;\n        _this._type = 'select';\n        _this.dropDownQuery = '';\n        _this.filterExpression = '';\n        _this._dropdownVisible = false;\n        _this.lastScrollPosition = 0;\n        _this._selectionClearable = false;\n        _this._query = '';\n        _this._required = false;\n        _this._focused = false;\n        _this._readonly = null;\n        _this.clearFilterExpression$ = new BehaviorSubject(null);\n        _this.filterListComplete$ = new Subject();\n        _this.storeScrollPosition$ = new Subject();\n        _this.hideDropDown$ = new Subject();\n        _this.showDropDown$ = new Subject();\n        _this.filter$ = new Subject();\n        _this.query$ = new BehaviorSubject('');\n        _this.writeValue$ = new Subject();\n        _this.contentInitialized$ = new Subject();\n        _this.keyboardNavigation$ = new Subject();\n        _this.delaySearchTrigger$ = new BehaviorSubject(250);\n        _this._positions = DejaConnectionPositionPair.default;\n        _this.overlayOwnerElement = _this.elementRef.nativeElement;\n        if (_this.ngControl) {\n            _this.ngControl.valueAccessor = _this;\n        }\n        _this.fm.monitor(elementRef.nativeElement, true).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        function (origin) {\n            _this._focused = !!origin;\n            _this.stateChanges.next();\n        }));\n        /** @type {?} */\n        var setDropDownVisible = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) {\n            if (state !== _this._dropdownVisible) {\n                _this._dropdownVisible = state;\n                _this.changeDetectorRef.markForCheck();\n                _this.dropDownVisibleChange.emit(state);\n            }\n        });\n        mediaService.isMobile$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _this.isMobile = value;\n            _this.changeDetectorRef.markForCheck();\n        }));\n        if (_this._parentForm) {\n            _this._parentForm.ngSubmit.subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this.changeDetectorRef.markForCheck();\n            }));\n        }\n        if (_this._parentFormGroup) {\n            _this._parentFormGroup.ngSubmit.subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this.changeDetectorRef.markForCheck();\n            }));\n        }\n        from(_this.clearFilterExpression$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), debounceTime(750))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.filterExpression = ''; }));\n        combineLatest(_this.delaySearchTrigger$, _this.filterListComplete$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), debounce((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 1), delaySearchTrigger = _b[0];\n            return timer(delaySearchTrigger);\n        })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._itemList = [];\n            _this.reshowDropDown();\n        }));\n        from(_this.storeScrollPosition$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })))\n            .subscribe((/**\n         * @param {?} scrollPos\n         * @return {?}\n         */\n        function (scrollPos) {\n            _this.viewPort.scrollPosition$.next(scrollPos);\n            _this.lastScrollPosition = scrollPos;\n        }));\n        from(_this.hideDropDown$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), filter((/**\n         * @return {?}\n         */\n        function () { return _this.dropdownVisible; })), delayWhen((/**\n         * @param {?} time\n         * @return {?}\n         */\n        function (time) { return timer(time || 0); })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            delete _this.selectingItemIndex;\n            setDropDownVisible(false);\n            _this.viewPort.element$.next(null);\n            _this.changeDetectorRef.markForCheck();\n        }));\n        from(_this.showDropDown$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), debounceTime(50), filter((/**\n         * @return {?}\n         */\n        function () { return (_this.query || '').length >= _this.minSearchlength && !_this._readonly; })), tap((/**\n         * @return {?}\n         */\n        function () {\n            // Set overlay origin element\n            /** @type {?} */\n            var originElement = (_this.isMobile && document.body) || _this.htmlInputElement || _this.elementRef.nativeElement;\n            // Calc max height\n            if (_this.isMobile) {\n                _this.dropDownMaxHeight = document.body.clientHeight;\n            }\n            else if (_this.maxHeight) {\n                _this.dropDownMaxHeight = _this.maxHeight;\n            }\n            else {\n                /** @type {?} */\n                var originRect = originElement.getBoundingClientRect();\n                /** @type {?} */\n                var maxHeight = document.body.clientHeight;\n                _this.dropDownMaxHeight = Math.max(originRect.top, maxHeight - originRect.bottom, 25) - 25;\n            }\n            // Ensure dropDowsQuery if autocomplete and minSearchLength\n            if (!_this.dropDownQuery && _this.isModeAutocomplete && _this.minSearchlength > 0 && _this.query && _this.query.length > _this.minSearchlength) {\n                _this.dropDownQuery = _this.query;\n            }\n            // Display overlay\n            setDropDownVisible(true);\n            _this.changeDetectorRef.markForCheck();\n        })), delay(1), filter((/**\n         * @return {?}\n         */\n        function () { return _this.dropdownVisible; })), // Show canceled by the hide$ observable if !dropdownVisible\n        switchMap((/**\n         * @return {?}\n         */\n        function () { return _this.calcViewList$(); })), tap((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var selectedItems = _this.getSelectedItems();\n            /** @type {?} */\n            var firstItem = selectedItems && selectedItems[0];\n            /** @type {?} */\n            var index = firstItem ? _this.getItemIndex(firstItem) : -1;\n            if (index >= 0) {\n                // Ensure selection\n                _this.setSelectedItems(selectedItems);\n                _this.currentItemIndex = index;\n                _this.ensureItemVisible(index);\n            }\n            else {\n                // Restore scroll Position\n                _this.ensureItemVisible(null);\n                _this.listElement.scrollTop = _this.lastScrollPosition;\n            }\n        })), delay(1), filter((/**\n         * @return {?}\n         */\n        function () { return _this.dropdownVisible; })), // Show canceled by the hide$ observable if !dropdownVisible\n        tap((/**\n         * @return {?}\n         */\n        function () {\n            _this.viewPort.element$.next(_this.listElement);\n        })), delay(1)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            // View port calculated\n            _this.overlay.updatePosition();\n        }));\n        from(_this.keyboardNavigation$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), tap((/**\n         * @return {?}\n         */\n        function () { return _this._keyboardNavigation = true; })), debounceTime(1000))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._keyboardNavigation = false;\n            _this.changeDetectorRef.markForCheck();\n        }));\n        from(_this.query$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), tap((/**\n         * @param {?} query\n         * @return {?}\n         */\n        function (query) { return _this._query = query; })), filter((/**\n         * @return {?}\n         */\n        function () { return !!_this.input; })), delay(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            // **** Force place holder to refresh to escape input angular material issue ****\n            _this.changeDetectorRef.markForCheck();\n        }));\n        combineLatest(_this.writeValue$, _this.contentInitialized$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 1), value = _b[0];\n            return value;\n        })), tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_this.modelIsValue === undefined) {\n                if (value instanceof Array) {\n                    /** @type {?} */\n                    var av = value || [];\n                    /** @type {?} */\n                    var modelType = av.length && typeof av[0];\n                    _this.modelIsValue = modelType && modelType === 'string' || modelType === 'number';\n                }\n                else {\n                    /** @type {?} */\n                    var modelType = typeof value;\n                    _this.modelIsValue = value === '' || modelType === 'string' || modelType === 'number';\n                }\n            }\n            if (_this.modelIsValue) {\n                _this.query = '';\n            }\n            return value;\n        })), map((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return _this.getVirtualSelectedEntities(value); })))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!value) {\n                if (_this.selectedItems && _this.selectedItems.length) {\n                    _this.removeSelection();\n                }\n                return;\n            }\n            if (_this._multiSelect) {\n                _this.query = '';\n                _super.prototype.setSelectedModels.call(_this, value);\n                _super.prototype.getItemListService.call(_this).ensureSelection();\n                _this.changeDetectorRef.markForCheck();\n            }\n            else {\n                /** @type {?} */\n                var v = value instanceof Array ? [value[0]] : [value];\n                /** @type {?} */\n                var item_1 = _super.prototype.mapToIItemBase.call(_this, v)[0];\n                _this.unselectAll$().pipe(switchMap((/**\n                 * @return {?}\n                 */\n                function () { return item_1 ? _this.toggleSelect$([item_1], true) : []; })), map((/**\n                 * @return {?}\n                 */\n                function () { return _super.prototype.getItemListService.call(_this).ensureSelection(); })), tap((/**\n                 * @return {?}\n                 */\n                function () { return _this.ensureSelection(); })), first())\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                function () { return _this.changeDetectorRef.markForCheck(); }));\n            }\n        }));\n        _this._viewPortChanged = _this.viewPortChanged;\n        _this.maxHeight = 0;\n        return _this;\n    }\n    Object.defineProperty(DejaSelectComponent.prototype, \"shouldLabelFloat\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.focused || !this.empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"positions\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._positions;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._positions = typeof value === 'string' ? DejaConnectionPositionPair.parse(value) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"dropDownWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var element = this.elementRef && (/** @type {?} */ (this.elementRef.nativeElement));\n            return this._dropDownWidth || element.clientWidth;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._dropDownWidth = value && (typeof value === 'string' ? value : value + \"px\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"keyboardNavigation\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._keyboardNavigation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"required\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._required;\n        },\n        set: /**\n         * @param {?} req\n         * @return {?}\n         */\n        function (req) {\n            this._required = coerceBooleanProperty(req);\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"placeholder\", {\n        /**\n         * Placeholder of the input\n         */\n        get: /**\n         * Placeholder of the input\n         * @return {?}\n         */\n        function () {\n            return this._placeholder;\n        },\n        set: /**\n         * @param {?} plh\n         * @return {?}\n         */\n        function (plh) {\n            this._placeholder = plh;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !this.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"focused\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"options\", {\n        set: /**\n         * @param {?} options\n         * @return {?}\n         */\n        function (options) {\n            if (!this.items && options && options.length) {\n                /** @type {?} */\n                var selectedModels_1 = (/** @type {?} */ ([]));\n                this.valueField = 'value';\n                this.textField = 'text';\n                /** @type {?} */\n                var models = options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) {\n                    /** @type {?} */\n                    var model = {\n                        text: option.text,\n                        value: option.value,\n                    };\n                    if (option.selected) {\n                        selectedModels_1.push(model);\n                    }\n                    return model;\n                }));\n                this.models = models;\n                if (selectedModels_1.length) {\n                    this.selectedModels = selectedModels_1;\n                }\n                if (models.length > 100) {\n                    // tslint:disable-next-line:no-debugger\n                    console.error('Select options with more than 100 items can have performance options. Please bind directly the items in code behind with items or models input.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"query\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._query;\n        },\n        /** Correspond au model du champ de filtrage ou recherche */\n        set: /**\n         * Correspond au model du champ de filtrage ou recherche\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.query$.next(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"delaySearchTrigger\", {\n        /** Temps d'attente en ms avant que la recherche dans la liste soit lancée lorsque l'utilisateur tape dans le select */\n        set: /**\n         * Temps d'attente en ms avant que la recherche dans la liste soit lancée lorsque l'utilisateur tape dans le select\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.delaySearchTrigger$.next(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"minSearchlength\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._minSearchLength;\n        },\n        /** Définit la longueur minimale de caractères dans le champ de recherche avant que la recherche ou le filtrage soient effectués */\n        set: /**\n         * Définit la longueur minimale de caractères dans le champ de recherche avant que la recherche ou le filtrage soient effectués\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minSearchLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.ngControl ? this.ngControl.disabled : this._disabled;\n        },\n        /** Permet de désactiver le select */\n        set: /**\n         * Permet de désactiver le select\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var disabled = coerceBooleanProperty(value);\n            this._disabled = disabled || null;\n            this.changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectionClearable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._selectionClearable;\n        },\n        /** Indique ou détermine si le bouton pour effacer la selection doit être affiché */\n        set: /**\n         * Indique ou détermine si le bouton pour effacer la selection doit être affiché\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selectionClearable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"hideSelected\", {\n        /** Renvoie une valeur indiquant si les éléments selectionés doivent être masqué de la liste déroulante. */\n        get: /**\n         * Renvoie une valeur indiquant si les éléments selectionés doivent être masqué de la liste déroulante.\n         * @return {?}\n         */\n        function () {\n            return this._hideSelected;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setHideSelected(coerceBooleanProperty(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"currentItem\", {\n        /** Définit la ligne courant ou ligne active */\n        set: /**\n         * Définit la ligne courant ou ligne active\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            _super.prototype.setCurrentItem.call(this, item);\n            if (item) {\n                this.ensureItemVisible(item);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"pageSize\", {\n        /** Retourne le nombre de lignes à sauter en cas de pression sur les touches PageUp ou PageDown */\n        get: /**\n         * Retourne le nombre de lignes à sauter en cas de pression sur les touches PageUp ou PageDown\n         * @return {?}\n         */\n        function () {\n            if (this._pageSize === 0) {\n                /** @type {?} */\n                var vpRowHeight = this.getViewPortRowHeight();\n                /** @type {?} */\n                var containerElement = this.listElement;\n                /** @type {?} */\n                var containerHeight = containerElement && containerElement.clientHeight || this.dropDownMaxHeight;\n                return Math.floor(containerHeight / vpRowHeight);\n            }\n            return this._pageSize;\n        },\n        /** Définit le nombre de lignes à sauter en cas de pression sur les touches PageUp ou PageDown */\n        set: /**\n         * Définit le nombre de lignes à sauter en cas de pression sur les touches PageUp ou PageDown\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageSize = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"hintLabel\", {\n        /** Retourne un texte de conseil en cas d'erreur de validation ou autre */\n        get: /**\n         * Retourne un texte de conseil en cas d'erreur de validation ou autre\n         * @return {?}\n         */\n        function () {\n            return this._hintLabel;\n        },\n        /** Définit un texte de conseil en cas d'erreur de validation ou autre */\n        set: /**\n         * Définit un texte de conseil en cas d'erreur de validation ou autre\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setHintLabel(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"viewPortRowHeight\", {\n        /** Définit la hauteur d'une ligne pour le calcul du viewport en pixels (la valeur par défaut sera utilisée si aucune valeur n'est définie). */\n        set: /**\n         * Définit la hauteur d'une ligne pour le calcul du viewport en pixels (la valeur par défaut sera utilisée si aucune valeur n'est définie).\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setViewPortRowHeight(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"viewportMode\", {\n        /**\n         * Les trois valeurs acceptés en paramètre se trouvent dans l'enum ViewportMode (disabled, fixed, variable, auto)\n         * Attention, une désactivation du viewport dégrade considérablement les performances de la liste et ne doit pas être activée si la liste\n         * est suceptible de contenir beaucoup d'éléments.\n         */\n        set: /**\n         * Les trois valeurs acceptés en paramètre se trouvent dans l'enum ViewportMode (disabled, fixed, variable, auto)\n         * Attention, une désactivation du viewport dégrade considérablement les performances de la liste et ne doit pas être activée si la liste\n         * est suceptible de contenir beaucoup d'éléments.\n         * @param {?} mode\n         * @return {?}\n         */\n        function (mode) {\n            this.setViewportMode(mode);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"childrenField\", {\n        /** Définit le champ utilisé pour la liste des enfants d'un parent */\n        get: /**\n         * Définit le champ utilisé pour la liste des enfants d'un parent\n         * @return {?}\n         */\n        function () {\n            return this._childrenField;\n        },\n        /** Retourne le champ utilisé pour la liste des enfants d'un parent */\n        set: /**\n         * Retourne le champ utilisé pour la liste des enfants d'un parent\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setChildrenField.call(this, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"textField\", {\n        /** Retourne le champ à utiliser comme valeur d'affichage. */\n        get: /**\n         * Retourne le champ à utiliser comme valeur d'affichage.\n         * @return {?}\n         */\n        function () {\n            return _super.prototype.getTextField.call(this);\n        },\n        /** Définit le champ à utiliser comme valeur d'affichage. */\n        set: /**\n         * Définit le champ à utiliser comme valeur d'affichage.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setTextField.call(this, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"valueField\", {\n        /** Retourne le champ à utiliser comme valeur de comparaison. */\n        get: /**\n         * Retourne le champ à utiliser comme valeur de comparaison.\n         * @return {?}\n         */\n        function () {\n            return _super.prototype.getValueField.call(this);\n        },\n        /** Définit le champ à utiliser comme valeur de comparaison. */\n        set: /**\n         * Définit le champ à utiliser comme valeur de comparaison.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setValueField.call(this, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"searchField\", {\n        /** Retourne le champ à utiliser comme champ de recherche.\n         * Ce champ peut indiquer, un champ contenant une valeur, un texte indexé, ou une fonction.\n         */\n        get: /**\n         * Retourne le champ à utiliser comme champ de recherche.\n         * Ce champ peut indiquer, un champ contenant une valeur, un texte indexé, ou une fonction.\n         * @return {?}\n         */\n        function () {\n            return this._searchField;\n        },\n        /** Définit le champ à utiliser comme champ de recherche.\n         * Ce champ peut indiquer, un champ contenant une valeur, un texte indexé, ou une fonction.\n         */\n        set: /**\n         * Définit le champ à utiliser comme champ de recherche.\n         * Ce champ peut indiquer, un champ contenant une valeur, un texte indexé, ou une fonction.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setSearchField.call(this, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"type\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} type\n         * @return {?}\n         */\n        function (type) {\n            if (type !== 'autocomplete' && type !== 'multiselect' && type !== 'select') {\n                throw new Error('Invalid type property for DejaSelectComponent. Type can be select, autocomplete or multiselect.');\n            }\n            this._type = type;\n            this.setMultiSelect(this._type === 'multiselect');\n            this.changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"loadingItems\", {\n        /**\n         * Set an observable called before the list will be displayed\n         */\n        set: /**\n         * Set an observable called before the list will be displayed\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            _super.prototype.setLoadingItems.call(this, fn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectingItem\", {\n        /**\n         * Set a promise or an observable called before an item selection\n         */\n        set: /**\n         * Set a promise or an observable called before an item selection\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            _super.prototype.setSelectingItem.call(this, fn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"unselectingItem\", {\n        /**\n         * Set a promise or an observable called before an item deselection\n         */\n        set: /**\n         * Set a promise or an observable called before an item deselection\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            _super.prototype.setUnselectingItem.call(this, fn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"expandingItem\", {\n        /**\n         * Set a promise or an observable called before an item expand\n         */\n        set: /**\n         * Set a promise or an observable called before an item expand\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            _super.prototype.setExpandingItem.call(this, fn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"collapsingItem\", {\n        /**\n         * Set a promise or an observable called before an item collapse\n         */\n        set: /**\n         * Set a promise or an observable called before an item collapse\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            _super.prototype.setCollapsingItem.call(this, fn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"isModeSelect\", {\n        /** Retourne si le select est en mode select, donc en lecture seule. */\n        get: /**\n         * Retourne si le select est en mode select, donc en lecture seule.\n         * @return {?}\n         */\n        function () {\n            return this._type === 'select';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"isModeAutocomplete\", {\n        /** Retourne si le select est en mode autocomplete */\n        get: /**\n         * Retourne si le select est en mode autocomplete\n         * @return {?}\n         */\n        function () {\n            return this._type === 'autocomplete';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectedItems\", {\n        /** Retourne la liste des éléments selectionés en mode multiselect */\n        get: /**\n         * Retourne la liste des éléments selectionés en mode multiselect\n         * @return {?}\n         */\n        function () {\n            return _super.prototype.getSelectedItems.call(this);\n        },\n        /** Définit la liste des éléments selectionés en mode multiselect */\n        set: /**\n         * Définit la liste des éléments selectionés en mode multiselect\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setSelectedItems(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectedItem\", {\n        /** Retourne l'élément selectioné en mode single select */\n        get: /**\n         * Retourne l'élément selectioné en mode single select\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var selectedItem = _super.prototype.getSelectedItems.call(this);\n            return selectedItem && selectedItem[0];\n        },\n        /** Définit l'éléments selectioné en mode single select */\n        set: /**\n         * Définit l'éléments selectioné en mode single select\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setSelectedItems(value !== undefined && value !== null ? [value] : []);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectedModel\", {\n        /** Retourne le model selectioné en mode single select */\n        get: /**\n         * Retourne le model selectioné en mode single select\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var selectedModel = _super.prototype.getSelectedModels.call(this);\n            return selectedModel && selectedModel[0];\n        },\n        /** Définit le model selectioné en mode single select */\n        set: /**\n         * Définit le model selectioné en mode single select\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"selectedModels\", {\n        /** Retourne la liste des models selectionés en mode multiselect */\n        get: /**\n         * Retourne la liste des models selectionés en mode multiselect\n         * @return {?}\n         */\n        function () {\n            return _super.prototype.getSelectedModels.call(this);\n        },\n        /** Définit la liste des models selectionés en mode multiselect */\n        set: /**\n         * Définit la liste des models selectionés en mode multiselect\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"itemListService\", {\n        /** Retourne le service de liste utilisé par ce composant. Ce service permet de controller dynamiquement la liste, ou de faire du lazyloading. */\n        get: /**\n         * Retourne le service de liste utilisé par ce composant. Ce service permet de controller dynamiquement la liste, ou de faire du lazyloading.\n         * @return {?}\n         */\n        function () {\n            return this.getItemListService();\n        },\n        /** Definit le service de liste utilisé par ce composant. Ce service permet de controller dynamiquement la liste, ou de faire du lazyloading. */\n        set: /**\n         * Definit le service de liste utilisé par ce composant. Ce service permet de controller dynamiquement la liste, ou de faire du lazyloading.\n         * @param {?} itemListService\n         * @return {?}\n         */\n        function (itemListService) {\n            this.setItemListService(itemListService);\n            if (itemListService && itemListService.lastQuery) {\n                this.query = itemListService.lastQuery.toString();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"sortingService\", {\n        /** Definit le service utilisé pour le tri de la liste */\n        set: /**\n         * Definit le service utilisé pour le tri de la liste\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setSortingService(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"groupingService\", {\n        /** Definit le service utilisé pour le regroupement de la liste */\n        set: /**\n         * Definit le service utilisé pour le regroupement de la liste\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.setGroupingService(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"waiter\", {\n        /** Retourne si le waiter doit être affiché dans le select. */\n        get: /**\n         * Retourne si le waiter doit être affiché dans le select.\n         * @return {?}\n         */\n        function () { return this._waiter; },\n        /** Definit si le waiter doit être affiché dans le select. */\n        set: /**\n         * Definit si le waiter doit être affiché dans le select.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._waiter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"items\", {\n        /** Définit la liste des éléments au format IItemBase */\n        set: /**\n         * Définit la liste des éléments au format IItemBase\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            var _this = this;\n            _super.prototype.setItems$.call(this, items).pipe(first(), tap((/**\n             * @return {?}\n             */\n            function () { return _this.ensureSelection(); })), switchMap((/**\n             * @return {?}\n             */\n            function () { return _this.calcViewList$(); })))\n                .subscribe(noop);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"models\", {\n        /** Définit la liste des éléments (tout type d'objet métier) */\n        set: /**\n         * Définit la liste des éléments (tout type d'objet métier)\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            var _this = this;\n            _super.prototype.setModels$.call(this, items).pipe(first(), tap((/**\n             * @return {?}\n             */\n            function () { return _this.ensureSelection(); })), switchMap((/**\n             * @return {?}\n             */\n            function () { return _this.calcViewList$(); })))\n                .subscribe(noop);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"depthMax\", {\n        /** Retourne le nombre de niveau pour une liste hierarchique */\n        get: /**\n         * Retourne le nombre de niveau pour une liste hierarchique\n         * @return {?}\n         */\n        function () { return this._depthMax; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"maxHeight\", {\n        /** Retourne la hauteur maximum avant que le composant affiche une scrollbar\n         * spécifier une grande valeur pour ne jamais afficher de scrollbar\n         * Spécifier 0 pour que le composant determine sa hauteur à partir du container\n         */\n        get: /**\n         * Retourne la hauteur maximum avant que le composant affiche une scrollbar\n         * spécifier une grande valeur pour ne jamais afficher de scrollbar\n         * Spécifier 0 pour que le composant determine sa hauteur à partir du container\n         * @return {?}\n         */\n        function () {\n            return this.getMaxHeight();\n        },\n        /** Définit la hauteur maximum avant que le composant affiche une scrollbar\n         * spécifier une grande valeur pour ne jamais afficher de scrollbar\n         * Spécifier 0 pour que le composant determine sa hauteur à partir du container\n         */\n        set: /**\n         * Définit la hauteur maximum avant que le composant affiche une scrollbar\n         * spécifier une grande valeur pour ne jamais afficher de scrollbar\n         * Spécifier 0 pour que le composant determine sa hauteur à partir du container\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setMaxHeight.call(this, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"readonly\", {\n        /** Retourne une valeur indiquant si le composant est en lecture seule */\n        get: /**\n         * Retourne une valeur indiquant si le composant est en lecture seule\n         * @return {?}\n         */\n        function () {\n            return this._readonly;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var readonly = coerceBooleanProperty(value);\n            this._readonly = readonly || null;\n            this.changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"inputValidatorDirective\", {\n        set: /**\n         * @protected\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                value.parentControl = this.ngControl;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"currentItemIndex\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return this.getCurrentItemIndex();\n        },\n        set: /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _super.prototype.setCurrentItemIndex.call(this, value);\n            this.changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"itemTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.itemTemplateExternal || this.itemTemplateInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"parentItemTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.parentItemTemplateExternal || this.parentItemTemplateInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"htmlInputElement\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return this.inputElement && (/** @type {?} */ (this.inputElement.nativeElement));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"loaderTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.loaderTemplateExternal || this.loaderTemplateInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"dropdownVisible\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._dropdownVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaSelectComponent.prototype, \"value\", {\n        // ************* ControlValueAccessor Implementation **************\n        get: \n        // ************* ControlValueAccessor Implementation **************\n        /**\n         * @return {?}\n         */\n        function () {\n            return this._multiSelect ? this.selectedItems : this.selectedItem;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this.writeValue(val);\n            this.onChangeCallback(val);\n            this.onTouchedCallback();\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.writeValue$.next(value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    // ************* End of ControlValueAccessor Implementation **************\n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ngDoCheck = \n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.complete();\n        this.fm.stopMonitoring(this.elementRef.nativeElement);\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.contentInitialized$.next(true);\n        if (this.ngControl) {\n            this.ngControl.valueChanges.pipe(filter((/**\n             * @return {?}\n             */\n            function () { return !!_this.input; })))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.ngControl.touched) {\n                    _this.input.ngControl.control.markAsTouched();\n                }\n                _this.input.ngControl.control.updateValueAndValidity();\n            }));\n        }\n        this.overlayOwnerElement = (/** @type {?} */ (this.elementRef.nativeElement));\n        if (this.overlayOwnerElement.parentElement.className.indexOf('mat-form-field-infix') >= 0) {\n            this.overlayOwnerElement = this.overlayOwnerElement.parentElement;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        fromEvent(this.htmlInputElement, 'click').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), filter((/**\n         * @return {?}\n         */\n        function () { return !_this.dropdownVisible && !_this.disabled; })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (_this.isModeSelect) {\n                _this.showDropDown();\n            }\n            else {\n                _this.htmlInputElement.select();\n                _this.filter$.next(event);\n            }\n        }));\n        fromEvent(this.htmlInputElement, 'focus').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), filter((/**\n         * @return {?}\n         */\n        function () { return !_this.dropdownVisible && !_this.disabled; })), delay(10), filter((/**\n         * @return {?}\n         */\n        function () { return _this.htmlInputElement === document.activeElement; })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (_this.isModeSelect) {\n                _this.showDropDown();\n            }\n            else {\n                // Autocomplete\n                _this.filter$.next(event);\n            }\n        }));\n        fromEvent(this.htmlInputElement, 'blur').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), filter((/**\n         * @return {?}\n         */\n        function () { return _this.selectingItemIndex === undefined; })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.onTouchedCallback();\n            _this.hideDropDown$.next(10);\n        }));\n        merge(fromEvent(this.htmlInputElement, 'keydown'), fromEvent(this.elementRef.nativeElement, 'keydown')).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (event.defaultPrevented) {\n                return false;\n            }\n            /** @type {?} */\n            var keyCode = event.keyCode || ((/** @type {?} */ (KeyCodes)))[event.code];\n            return keyCode === KeyCodes.Home ||\n                keyCode === KeyCodes.End ||\n                keyCode === KeyCodes.PageUp ||\n                keyCode === KeyCodes.PageDown ||\n                keyCode === KeyCodes.UpArrow ||\n                keyCode === KeyCodes.DownArrow ||\n                keyCode === KeyCodes.Space ||\n                keyCode === KeyCodes.Enter;\n        })), switchMap((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return _this.ensureListCaches$().pipe(map((/**\n         * @return {?}\n         */\n        function () { return event; }))); })), map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // Set and get current index for keyboard features only\n            /** @type {?} */\n            var setCurrentIndex = (/**\n             * @param {?} index\n             * @param {?=} item\n             * @return {?}\n             */\n            function (index, item) {\n                _this.currentItemIndex = index;\n                if (_this.dropdownVisible) {\n                    _this.ensureItemVisible(_this.currentItemIndex);\n                    _this.viewPort.refresh();\n                }\n                if (!_this._multiSelect) {\n                    item = item || _super.prototype.getCurrentItem.call(_this);\n                    _this.select(item, false);\n                }\n            });\n            /** @type {?} */\n            var keyCode = event.keyCode || ((/** @type {?} */ (KeyCodes)))[event.code];\n            switch (keyCode) {\n                case KeyCodes.Home:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        setCurrentIndex(0);\n                    }\n                    return false;\n                case KeyCodes.End:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        setCurrentIndex(Math.max(0, _this.rowsCount - 1));\n                    }\n                    return false;\n                case KeyCodes.PageUp:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        /** @type {?} */\n                        var index = Math.max(0, _this.currentItemIndex - _this._pageSize);\n                        setCurrentIndex(index);\n                    }\n                    return false;\n                case KeyCodes.PageDown:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        /** @type {?} */\n                        var index = Math.min(_this.rowsCount - 1, _this.currentItemIndex + _this._pageSize);\n                        setCurrentIndex(index);\n                    }\n                    return false;\n                case KeyCodes.UpArrow:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        /** @type {?} */\n                        var index = Math.max(0, _this.currentItemIndex - 1);\n                        setCurrentIndex(index);\n                    }\n                    return false;\n                case KeyCodes.DownArrow:\n                    if (event.altKey || _this._multiSelect && !_this.dropdownVisible) {\n                        _this.toggleDropDown();\n                    }\n                    else {\n                        /** @type {?} */\n                        var index = Math.min(_this.rowsCount - 1, _this.currentItemIndex + 1);\n                        setCurrentIndex(index);\n                    }\n                    return false;\n                case KeyCodes.Space:\n                    if (_this.dropdownVisible) {\n                        /** @type {?} */\n                        var item = (/** @type {?} */ (_this._itemList[_this.currentItemIndex - _this.vpStartRow]));\n                        if (_this.isCollapsible(item)) {\n                            _this.keyboardNavigation$.next();\n                            _this.toggleCollapse$(_this.currentItemIndex, !item.collapsed).pipe(first()).subscribe(noop);\n                            return false;\n                        }\n                    }\n                    if (!_this.isModeSelect) {\n                        return true;\n                    }\n                // Do not break or return here\n                // tslint:disable-next-line:no-switch-case-fall-through\n                case KeyCodes.Enter:\n                    if (_this.dropdownVisible) {\n                        /** @type {?} */\n                        var item = _this._itemList[_this.currentItemIndex - _this.vpStartRow];\n                        _this.select(item);\n                    }\n                    return false;\n                default:\n                    return true;\n            }\n        })))\n            .subscribe((/**\n         * @param {?} continuePropagation\n         * @return {?}\n         */\n        function (continuePropagation) {\n            if (!continuePropagation) {\n                _this.keyboardNavigation$.next();\n                _this.changeDetectorRef.markForCheck();\n                event.preventDefault();\n                return false;\n            }\n        }));\n        /** @type {?} */\n        var keyUp$ = fromEvent(this.htmlInputElement, 'keyup').pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            /** @type {?} */\n            var keyCode = event.keyCode || ((/** @type {?} */ (KeyCodes)))[event.code];\n            return keyCode >= KeyCodes.Key0 ||\n                keyCode === KeyCodes.Backspace ||\n                keyCode === KeyCodes.Space ||\n                keyCode === KeyCodes.Delete;\n        })));\n        merge(keyUp$, this.filter$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this._isAlive; })), tap((/**\n         * @return {?}\n         */\n        function () {\n            if ((_this.query || '').length < _this.minSearchlength) {\n                _this._itemList = [];\n                _this.hideDropDown();\n                return;\n            }\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // Set and get current index for keyboard features only\n            /** @type {?} */\n            var setCurrentIndex = (/**\n             * @param {?} index\n             * @param {?=} item\n             * @return {?}\n             */\n            function (index, item) {\n                _this.currentItemIndex = index;\n                if (_this.dropdownVisible) {\n                    _this.ensureItemVisible(_this.currentItemIndex);\n                }\n                if (!_this._multiSelect) {\n                    item = item || _super.prototype.getCurrentItem.call(_this);\n                    _this.select(item, false);\n                }\n            });\n            // console.log('select.component, keycode:' + event.keyCode);\n            _this.keyboardNavigation$.next();\n            if (_this.isModeSelect) {\n                // Select, search on the list\n                if ((/[a-zA-Z0-9]/).test(event.key)) {\n                    // Valid char\n                    _this.clearFilterExpression$.next(null);\n                    // Search next\n                    _this.filterExpression += event.key;\n                    /** @type {?} */\n                    var rg_1 = new RegExp(\"^\" + _this.filterExpression, 'i');\n                    _this.findNextMatch$((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    function (item) {\n                        if (item && _this.isSelectable(item)) {\n                            /** @type {?} */\n                            var label = _this.getTextValue(item);\n                            if (rg_1.test(label)) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    }), _this.currentItemIndex).pipe(first())\n                        .subscribe((/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    function (result) {\n                        if (result.index >= 0) {\n                            setCurrentIndex(result.index, result.item);\n                        }\n                    }));\n                }\n            }\n            else {\n                // Autocomplete, filter the list\n                _this.filterListComplete$.next();\n            }\n        }));\n    };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.setDescribedByIds = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        this.describedBy = ids.join(' ');\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.onContainerClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (((/** @type {?} */ (event.target))).tagName.toLowerCase() !== 'input') {\n            this.elementRef.nativeElement.querySelector('input').focus();\n        }\n    };\n    /** Change l'état d'expansion de toute les lignes parentes */\n    /**\n     * Change l'état d'expansion de toute les lignes parentes\n     * @param {?=} collapsed\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.toggleAll$ = /**\n     * Change l'état d'expansion de toute les lignes parentes\n     * @param {?=} collapsed\n     * @return {?}\n     */\n    function (collapsed) {\n        var _this = this;\n        return _super.prototype.toggleAll$.call(this, collapsed).pipe(switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) { return _this.calcViewList$().pipe(first(), map((/**\n         * @return {?}\n         */\n        function () { return items; }))); })));\n    };\n    /** Change l'état d'expansion de toute les lignes parentes */\n    /**\n     * Change l'état d'expansion de toute les lignes parentes\n     * @param {?=} collapsed\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.toggleAll = /**\n     * Change l'état d'expansion de toute les lignes parentes\n     * @param {?=} collapsed\n     * @return {?}\n     */\n    function (collapsed) {\n        this.toggleAll$(collapsed).pipe(first()).subscribe(noop);\n    };\n    /** Change l'état d'expansion de la ligne spécifiée\n     * @param index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param collapse  Etat de l'élément. True pour réduire l'élément.\n     * @return Observable résolu par la fonction.\n     */\n    /**\n     * Change l'état d'expansion de la ligne spécifiée\n     * @param {?} index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param {?} collapsed\n     * @return {?} Observable résolu par la fonction.\n     */\n    DejaSelectComponent.prototype.toggleCollapse$ = /**\n     * Change l'état d'expansion de la ligne spécifiée\n     * @param {?} index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param {?} collapsed\n     * @return {?} Observable résolu par la fonction.\n     */\n    function (index, collapsed) {\n        var _this = this;\n        return _super.prototype.toggleCollapse$.call(this, index, collapsed).pipe(tap((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.dropdownVisible) {\n                _this.reshowDropDown();\n            }\n        })));\n    };\n    /** Change l'état d'expansion de la ligne spécifiée\n     * @param index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param collapse  Etat de l'élément. True pour réduire l'élément.\n     */\n    /**\n     * Change l'état d'expansion de la ligne spécifiée\n     * @param {?} index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param {?} collapsed\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.toggleCollapse = /**\n     * Change l'état d'expansion de la ligne spécifiée\n     * @param {?} index  Index sur la liste des éléments visibles de l'élément à changer.\n     * @param {?} collapsed\n     * @return {?}\n     */\n    function (index, collapsed) {\n        this.toggleCollapse$(index, collapsed).pipe(first()).subscribe(noop);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.queryChanged = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        this.query = value;\n        if (!this.isModeSelect) {\n            // Autocomplete or multiselect only\n            this.dropDownQuery = this.query;\n            if (this.isModeAutocomplete) {\n                this.unselectAll$().pipe(first())\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                function () { return _this.onModelChange(); }));\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.hideDropDown = /**\n     * @return {?}\n     */\n    function () {\n        this.hideDropDown$.next();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.scroll = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var element = (/** @type {?} */ (event.target));\n        this.storeScrollPosition$.next(element.scrollTop);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.mousedown = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        var _this = this;\n        if (this.mouseUp$sub) {\n            this.mouseUp$sub.unsubscribe();\n            this.mouseUp$sub = undefined;\n        }\n        this.selectingItemIndex = this.getItemIndexFromHTMLElement((/** @type {?} */ (e.target)));\n        this.mouseUp$sub = fromEvent(this.listElement, 'mouseup')\n            .subscribe((/**\n         * @param {?} upEvent\n         * @return {?}\n         */\n        function (upEvent) {\n            /** @type {?} */\n            var itemIndex = _this.getItemIndexFromHTMLElement((/** @type {?} */ (upEvent.target)));\n            if (itemIndex === undefined || _this.selectingItemIndex === undefined || itemIndex !== _this.selectingItemIndex) {\n                return;\n            }\n            /** @type {?} */\n            var item = (/** @type {?} */ (_this._itemList[itemIndex - _this.vpStartRow]));\n            if (!item || upEvent.button !== 0) {\n                // Right click menu\n                return;\n            }\n            /** @type {?} */\n            var isExpandButton = (/**\n             * @param {?} target\n             * @return {?}\n             */\n            function (target) {\n                return target.id === 'expandbtn' || target.parentElement.id === 'expandbtn';\n            });\n            if (_this.isCollapsible(item) && (isExpandButton((/** @type {?} */ (e.target))) || !_this.isSelectable(item))) {\n                if (upEvent.button === 0) {\n                    _this.toggleCollapse$(itemIndex, !item.collapsed).pipe(first()).subscribe(noop);\n                }\n            }\n            else if (!item.selected) {\n                _this.select(item);\n            }\n        }));\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.getItemClass = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var classNames = (/** @type {?} */ (['listitem']));\n        if (item.className) {\n            classNames.push(item.className);\n        }\n        return classNames.join(' ');\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.updateErrorState = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var oldState = this.errorState;\n        /** @type {?} */\n        var parent = this._parentFormGroup || this._parentForm;\n        /** @type {?} */\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        /** @type {?} */\n        var control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n        /** @type {?} */\n        var newState = matcher.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.clearSelection = /**\n     * @return {?}\n     */\n    function () {\n        this.removeSelection();\n    };\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.onCloseClicked = /**\n     * @param {?=} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.ngControl) {\n            this.ngControl.control.markAsTouched();\n        }\n        this.removeSelection(event && event.item);\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.onOpenClicked = /**\n     * @return {?}\n     */\n    function () {\n        if (this.dropdownVisible || this.disabled) {\n            return;\n        }\n        if (this.isModeSelect) {\n            this.showDropDown();\n        }\n        else {\n            this.htmlInputElement.select();\n            this.filter$.next(event);\n        }\n    };\n    /**\n     * @protected\n     * @param {?=} item\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.removeSelection = /**\n     * @protected\n     * @param {?=} item\n     * @return {?}\n     */\n    function (item) {\n        var _this = this;\n        if (!this._multiSelect) {\n            this.query = '';\n            this.dropDownQuery = '';\n            this.setSelectedItems(undefined);\n            this.onModelChange();\n            delete this.selectingItemIndex;\n        }\n        else if (item) {\n            this.toggleSelect$([item], false).pipe(first())\n                .subscribe((/**\n             * @param {?} selectedItems\n             * @return {?}\n             */\n            function (selectedItems) {\n                /** @type {?} */\n                var selected = __spread(selectedItems);\n                _this.setSelectedItems(selected);\n                _this.onModelChange(selected);\n            }));\n        }\n        else {\n            this.unselectAll$().pipe(first())\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { return _this.onModelChange(); }));\n        }\n        if (event) {\n            event.stopPropagation();\n            return false;\n        }\n    };\n    /**\n     * @protected\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.calcViewList$ = /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return _super.prototype.calcViewList$.call(this, this.dropDownQuery).pipe(tap((/**\n         * @return {?}\n         */\n        function () { return _this.changeDetectorRef.markForCheck(); })));\n    };\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ensureItemVisible = /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        _super.prototype.ensureItemVisible.call(this, item);\n    };\n    /**\n     * @private\n     * @param {?=} items\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.onModelChange = /**\n     * @private\n     * @param {?=} items\n     * @return {?}\n     */\n    function (items) {\n        /** @type {?} */\n        var outputEmitter = null;\n        /** @type {?} */\n        var output = null;\n        if (items) {\n            if (Array.isArray(items)) {\n                /** @type {?} */\n                var models = items.map((/**\n                 * @param {?} itm\n                 * @return {?}\n                 */\n                function (itm) { return itm.model !== undefined ? itm.model : itm; }));\n                outputEmitter = (/** @type {?} */ ({\n                    items: items,\n                    models: models,\n                }));\n                if (this.modelIsValue) {\n                    /** @type {?} */\n                    var valueField_1 = this.getValueField();\n                    if (models.find((/**\n                     * @param {?} m\n                     * @return {?}\n                     */\n                    function (m) { return !!m[valueField_1]; }))) {\n                        output = models.map((/**\n                         * @param {?} m\n                         * @return {?}\n                         */\n                        function (m) { return m[valueField_1] !== undefined ? m[valueField_1] : m; }));\n                    }\n                }\n                else {\n                    output = models;\n                }\n            }\n            else {\n                /** @type {?} */\n                var model = items.model;\n                outputEmitter = (/** @type {?} */ ({\n                    item: items,\n                    model: model,\n                }));\n                if (this.modelIsValue) {\n                    /** @type {?} */\n                    var valueField = this.getValueField();\n                    output = model[valueField] !== undefined ? model[valueField] : model;\n                }\n                else {\n                    output = items.model !== undefined ? items.model : items;\n                }\n            }\n        }\n        this.onChangeCallback(output);\n        if (outputEmitter) {\n            this.selectedChange.emit(outputEmitter);\n        }\n    };\n    /**\n     * @private\n     * @param {?} item\n     * @param {?=} hideDropDown\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.select = /**\n     * @private\n     * @param {?} item\n     * @param {?=} hideDropDown\n     * @return {?}\n     */\n    function (item, hideDropDown) {\n        var _this = this;\n        if (!this.isSelectable(item)) {\n            return;\n        }\n        if (!item) {\n            // this.query = '';\n            // this.dropDownQuery = '';\n            // this.setSelectedItems(undefined);\n            // this.onModelChange();\n            return;\n        }\n        if (this._multiSelect) {\n            this.toggleSelect$([item], true).pipe(first())\n                .subscribe((/**\n             * @param {?} selectedItems\n             * @return {?}\n             */\n            function (selectedItems) {\n                /** @type {?} */\n                var selected = selectedItems ? __spread(selectedItems) : [];\n                _this.setSelectedItems(selected);\n                _this.onModelChange(selected);\n                _this.query = '';\n                _this.dropDownQuery = '';\n            }));\n        }\n        else {\n            this.query = this.getTextValue(item);\n            this.setSelectedItems([item]);\n            this.onModelChange(item);\n        }\n        this.htmlInputElement.focus();\n        if (hideDropDown !== false) {\n            this.hideDropDown();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.toggleDropDown = /**\n     * @return {?}\n     */\n    function () {\n        if (this.dropdownVisible) {\n            this.hideDropDown();\n        }\n        else {\n            this.showDropDown();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.showDropDown = /**\n     * @return {?}\n     */\n    function () {\n        this.showDropDown$.next();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.reshowDropDown = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.dropdownVisible) {\n            return this.showDropDown();\n        }\n        delete this.selectingItemIndex;\n        // Restore scroll Position\n        /** @type {?} */\n        var listElement = this.listElement;\n        if (listElement) {\n            listElement.scrollTop = this.lastScrollPosition;\n        }\n        this.calcViewList$().pipe(tap((/**\n         * @return {?}\n         */\n        function () { return _this.refreshViewPort(); })), combineLatest$1(this.viewPortChanged), // Wait for viewport calculation\n        first(), delay(1)) // Ensure viewport binding\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            // View port calculated\n            _this.overlay.updatePosition();\n            // Ensure selection\n            /** @type {?} */\n            var item = _this.getSelectedItems()[0];\n            /** @type {?} */\n            var index = item && _this.getItemIndex(item);\n            if (index >= 0) {\n                _this.currentItemIndex = index;\n                _this.ensureItemVisible(index);\n            }\n        }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaSelectComponent.prototype.ensureSelection = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._multiSelect) ;\n        else {\n            this.query = this.selectedItems.length ? this.getTextValue(this.selectedItems[0]) : '';\n        }\n    };\n    DejaSelectComponent.nextId = 0;\n    DejaSelectComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        ViewPortService,\n                        { provide: MatFormFieldControl, useExisting: DejaSelectComponent }\n                    ],\n                    selector: 'deja-select',\n                    template: \"<input [placeholder]=\\\"placeholder\\\" *ngIf=\\\"!isMultiSelect\\\" matInput [disabled]=\\\"disabled\\\" [ngModel]=\\\"query\\\" #inputElement deja-child-validator type=\\\"text\\\" [readonly]=\\\"isModeSelect || readonly\\\" (ngModelChange)=\\\"queryChanged($event)\\\" autocomplete=\\\"off\\\">\\n<div *ngIf=\\\"!disabled && !isMultiSelect\\\" class=\\\"actions-suffix\\\">\\n\\t<mat-icon (click)=\\\"onCloseClicked()\\\" id=\\\"clear-button\\\" *ngIf=\\\"selectionClearable && selectedItems.length > 0\\\">clear</mat-icon>\\n\\t<mat-icon (click)=\\\"onOpenClicked()\\\" id=\\\"drop-down-button\\\">arrow_drop_down</mat-icon>\\n</div>\\n<deja-chips *ngIf=\\\"isMultiSelect\\\" [items]=\\\"selectedItems\\\" [readonly]=\\\"readonly\\\" [disabled]=\\\"disabled\\\" (close)=\\\"onCloseClicked($event)\\\" [itemTemplateExternal]=\\\"selectedTemplate\\\" [textField]=\\\"textField\\\">\\n\\t<ng-template #insertTemplate>\\n\\t\\t<input [placeholder]=\\\"placeholder\\\" matInput [disabled]=\\\"disabled\\\" [ngModel]=\\\"query\\\" #inputElement deja-child-validator type=\\\"text\\\" [readonly]=\\\"isModeSelect || readonly\\\" (ngModelChange)=\\\"queryChanged($event)\\\" autocomplete=\\\"off\\\">\\n\\t\\t<div *ngIf=\\\"!disabled\\\" class=\\\"actions-suffix\\\">\\n\\t\\t\\t<mat-icon id=\\\"drop-down-button\\\" (click)=\\\"onOpenClicked()\\\">arrow_drop_down</mat-icon>\\n\\t\\t</div>\\n\\t</ng-template>\\n</deja-chips>\\n<deja-overlay #dejaOverlay [ownerElement]=\\\"overlayOwnerElement\\\" [isVisible]=\\\"dropdownVisible\\\" (closed)=\\\"hideDropDown()\\\" [positions]=\\\"positions\\\" [overlayOffsetY]=\\\"overlayOffsetY\\\" [overlayOffsetX]=\\\"overlayOffsetX\\\" [width]=\\\"dropDownWidth\\\" widthForMobile=\\\"100%\\\" (closed)=\\\"hideDropDown()\\\">\\n\\t<div [id]=\\\"listElementId\\\" class=\\\"deja-listcontainer\\\" [attr.itemscount]=\\\"itemList && itemList.length\\\" [attr.depth-max]=\\\"depthMax || null\\\" [attr.keynav]=\\\"keyboardNavigation\\\" [attr.vprowheight]=\\\"getViewPortRowHeight()\\\" (mousedown)=\\\"mousedown($event)\\\" (scroll)=\\\"scroll($event)\\\" [style.max-height.px]=\\\"dropDownMaxHeight\\\">\\n\\t\\t<div id=\\\"nodata-holder\\\" *ngIf=\\\"(!treeItemList || treeItemList.length === 0) && !waiter\\\">{{ nodataholder }}</div>\\n\\t\\t<div *ngIf=\\\"vpBeforeHeight\\\" [style.height.px]=\\\"vpBeforeHeight\\\"></div>\\n\\t\\t<div *ngFor=\\\"let item of treeItemList; let index = index\\\" #listitem [attr.class]=\\\"getItemClass(item)\\\" [class.hide]=\\\"item.collapsing || item.expanding\\\" [class.parent]=\\\"item.depth < depthMax\\\" [class.collapsed]=\\\"item.collapsed\\\" [class.selected]=\\\"item.selected\\\" [attr.current]=\\\"(isMultiSelect && vpStartRow+index === getCurrentItemIndex()) || null\\\" [class.unselectable]=\\\"item.selectable === false\\\" [attr.depth]=\\\"depthMax ? item.depth : null\\\" [attr.id]=\\\"item.id || null\\\" [attr.flat]=\\\"vpStartRow + index\\\" [style.height.px]=\\\"getItemHeight(item)\\\" [class.odd]=\\\"(item.depth === depthMax && item.odd) || null\\\">\\n\\t\\t\\t<span id=\\\"expandbtn\\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\\"item.$items && item.$items.length\\\">arrow_drop_down</mat-icon>\\n\\t\\t\\t</span>\\n\\t\\t\\t<ng-container *ngIf=\\\"(!item.$items || !parentItemTemplate) && (item.$items || !itemTemplate)\\\">{{ getTextValue(item) }}</ng-container>\\n\\t\\t\\t<ng-container *ngIf=\\\"item.$items && parentItemTemplate\\\">\\n\\t\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"parentItemTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, query: query, flatindex: vpStartRow+index }\\\"></ng-template>\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t<ng-container *ngIf=\\\"!item.$items && itemTemplate\\\">\\n\\t\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"itemTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, query: query, flatindex: vpStartRow+index }\\\"></ng-template>\\n\\t\\t\\t</ng-container>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"vpAfterHeight\\\" [style.height.px]=\\\"vpAfterHeight\\\"></div>\\n\\t\\t<deja-list-loader id=\\\"loader\\\" *ngIf=\\\"waiter && !loaderTemplate\\\"></deja-list-loader>\\n\\t\\t<ng-container *ngIf=\\\"waiter && loaderTemplate\\\">\\n\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"loaderTemplate\\\"></ng-template>\\n\\t\\t</ng-container>\\n\\t</div>\\n</deja-overlay>\\n<div *ngIf=\\\"hintLabel != ''\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\",\n                    styles: [\"deja-select{width:100%;white-space:initial;display:flex;align-items:center;min-height:1rem}deja-select>input{flex:1 1 100%}deja-select deja-chips{width:100%}deja-select deja-chips .insert-item{display:flex;align-items:center;height:1.2rem}deja-select .actions-suffix{flex:0 0 auto;text-align:right;overflow:visible;display:flex;align-items:center;height:0}deja-select .actions-suffix #clear-button,deja-select .actions-suffix #drop-down-button{font-size:1.2rem;opacity:.35}deja-select .actions-suffix #clear-button:hover,deja-select .actions-suffix #drop-down-button:hover{opacity:1;cursor:pointer}@-webkit-keyframes load{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@keyframes load{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@-webkit-keyframes load-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}@keyframes load-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}.deja-overlay-container .deja-listcontainer{width:100%;text-align:left;overflow-y:auto;padding:0;margin:0;position:relative}.deja-overlay-container .deja-listcontainer div.listitem{white-space:nowrap}.deja-overlay-container .deja-listcontainer div.listitem>deja-bold-query{flex:1 1 100%;overflow:hidden}.deja-overlay-container .deja-listcontainer div.listitem>deja-bold-query div{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;position:relative;width:100%}.deja-overlay-container .deja-listcontainer #expandbtn{min-width:24px}.deja-overlay-container .deja-listcontainer[valign=bottom]{border-top:none}.deja-overlay-container .deja-listcontainer [current=true]{box-shadow:none}.deja-overlay-container .deja-listcontainer[keynav=false] div.listitem:not(.unselectable):hover{cursor:pointer}.deja-overlay-container .deja-listcontainer #nodata-holder{margin:.5rem}.deja-overlay-container .deja-listcontainer #loader .spinner{margin:10px auto}.deja-overlay-container .deja-listcontainer[vprowheight=\\\"0\\\"]>div.listitem{padding:.35rem .1rem}.deja-overlay-container .deja-listcontainer>div.listitem{opacity:1;margin:0;transition-timing-function:linear;transition-duration:.3s;transition-property:max-height,opacity;display:flex;align-items:center}.deja-overlay-container .deja-listcontainer>div.listitem.hide{opacity:0!important;max-height:0!important;transition-timing-function:ease-out}.deja-overlay-container .deja-listcontainer>div.listitem #expandbtn{width:24px;cursor:pointer}.deja-overlay-container .deja-listcontainer>div.listitem.parent.collapsed #expandbtn>.mat-icon{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.deja-overlay-container .deja-listcontainer [depth=\\\"0\\\"]{padding-left:0}.deja-overlay-container .deja-listcontainer [depth=\\\"1\\\"]{padding-left:1rem}.deja-overlay-container .deja-listcontainer [depth=\\\"2\\\"]{padding-left:2rem}.deja-overlay-container .deja-listcontainer [depth=\\\"3\\\"]{padding-left:3rem}.deja-overlay-container .deja-listcontainer [depth=\\\"4\\\"]{padding-left:4rem}.deja-overlay-container .deja-listcontainer [depth=\\\"5\\\"]{padding-left:5rem}.deja-overlay-container .deja-listcontainer [depth=\\\"6\\\"]{padding-left:6rem}.deja-overlay-container .deja-listcontainer [depth=\\\"7\\\"]{padding-left:7rem}.deja-overlay-container .deja-listcontainer [depth=\\\"8\\\"]{padding-left:8rem}.deja-overlay-container .deja-listcontainer [depth=\\\"9\\\"]{padding-left:9rem}.deja-overlay-container .deja-listcontainer [depth=\\\"10\\\"]{padding-left:10rem}.deja-overlay-container .deja-listcontainer [depth=\\\"11\\\"]{padding-left:11rem}.deja-overlay-container .deja-listcontainer [depth=\\\"12\\\"]{padding-left:12rem}.deja-overlay-container .deja-listcontainer [depth=\\\"13\\\"]{padding-left:13rem}.deja-overlay-container .deja-listcontainer [depth=\\\"14\\\"]{padding-left:14rem}.deja-overlay-container .deja-listcontainer [depth=\\\"15\\\"]{padding-left:15rem}.deja-overlay-container .deja-listcontainer [depth=\\\"16\\\"]{padding-left:16rem}.deja-overlay-container .deja-listcontainer [depth=\\\"17\\\"]{padding-left:17rem}.deja-overlay-container .deja-listcontainer [depth=\\\"18\\\"]{padding-left:18rem}.deja-overlay-container .deja-listcontainer [depth=\\\"19\\\"]{padding-left:19rem}.deja-overlay-container .deja-listcontainer [depth=\\\"20\\\"]{padding-left:20rem}.deja-overlay-container .deja-listcontainer [depth=\\\"21\\\"]{padding-left:21rem}.deja-overlay-container .deja-listcontainer [depth=\\\"22\\\"]{padding-left:22rem}.deja-overlay-container .deja-listcontainer [depth=\\\"23\\\"]{padding-left:23rem}.deja-overlay-container .deja-listcontainer [depth=\\\"24\\\"]{padding-left:24rem}.deja-overlay-container .deja-listcontainer [depth=\\\"25\\\"]{padding-left:25rem}.deja-overlay-container .deja-listcontainer [depth=\\\"26\\\"]{padding-left:26rem}.deja-overlay-container .deja-listcontainer [depth=\\\"27\\\"]{padding-left:27rem}.deja-overlay-container .deja-listcontainer [depth=\\\"28\\\"]{padding-left:28rem}.deja-overlay-container .deja-listcontainer [depth=\\\"29\\\"]{padding-left:29rem}.deja-overlay-container .deja-listcontainer [depth=\\\"30\\\"]{padding-left:30rem}.deja-overlay-container .deja-listcontainer [depth=\\\"31\\\"]{padding-left:31rem}.deja-overlay-container .deja-listcontainer [depth=\\\"32\\\"]{padding-left:32rem}.deja-overlay-container .deja-listcontainer [depth=\\\"33\\\"]{padding-left:33rem}.deja-overlay-container .deja-listcontainer [depth=\\\"34\\\"]{padding-left:34rem}.deja-overlay-container .deja-listcontainer [depth=\\\"35\\\"]{padding-left:35rem}.deja-overlay-container .deja-listcontainer [depth=\\\"36\\\"]{padding-left:36rem}.deja-overlay-container .deja-listcontainer [depth=\\\"37\\\"]{padding-left:37rem}.deja-overlay-container .deja-listcontainer [depth=\\\"38\\\"]{padding-left:38rem}.deja-overlay-container .deja-listcontainer [depth=\\\"39\\\"]{padding-left:39rem}.deja-overlay-container .deja-listcontainer [depth=\\\"40\\\"]{padding-left:40rem}.deja-overlay-container .deja-listcontainer [depth=\\\"41\\\"]{padding-left:41rem}.deja-overlay-container .deja-listcontainer [depth=\\\"42\\\"]{padding-left:42rem}.deja-overlay-container .deja-listcontainer [depth=\\\"43\\\"]{padding-left:43rem}.deja-overlay-container .deja-listcontainer [depth=\\\"44\\\"]{padding-left:44rem}.deja-overlay-container .deja-listcontainer [depth=\\\"45\\\"]{padding-left:45rem}.deja-overlay-container .deja-listcontainer [depth=\\\"46\\\"]{padding-left:46rem}.deja-overlay-container .deja-listcontainer [depth=\\\"47\\\"]{padding-left:47rem}.deja-overlay-container .deja-listcontainer [depth=\\\"48\\\"]{padding-left:48rem}.deja-overlay-container .deja-listcontainer [depth=\\\"49\\\"]{padding-left:49rem}.deja-overlay-container .deja-listcontainer [depth=\\\"50\\\"]{padding-left:50rem}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaSelectComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: ViewPortService },\n        { type: FocusMonitor },\n        { type: ElementRef },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n        { type: NgForm, decorators: [{ type: Optional }] },\n        { type: FormGroupDirective, decorators: [{ type: Optional }] },\n        { type: MediaService },\n        { type: ErrorStateMatcher }\n    ]; };\n    DejaSelectComponent.propDecorators = {\n        id: [{ type: HostBinding }],\n        shouldLabelFloat: [{ type: HostBinding, args: ['class.floating',] }],\n        describedBy: [{ type: HostBinding, args: ['attr.aria-describedby',] }],\n        nodataholder: [{ type: Input }],\n        overlayOffsetX: [{ type: Input }],\n        overlayOffsetY: [{ type: Input }],\n        itemTemplateExternal: [{ type: Input }],\n        parentItemTemplateExternal: [{ type: Input }],\n        loaderTemplateExternal: [{ type: Input }],\n        modelIsValue: [{ type: Input }],\n        viewPortChanged: [{ type: Output }],\n        selectedChange: [{ type: Output }],\n        dropDownVisibleChange: [{ type: Output }],\n        itemTemplateInternal: [{ type: ContentChild, args: ['itemTemplate',] }],\n        parentItemTemplateInternal: [{ type: ContentChild, args: ['parentItemTemplate',] }],\n        selectedTemplate: [{ type: ContentChild, args: ['selectedTemplate',] }],\n        loaderTemplateInternal: [{ type: ContentChild, args: ['loaderTemplate',] }],\n        _waiter: [{ type: HostBinding, args: ['attr.wait',] }],\n        inputElement: [{ type: ViewChild, args: ['inputElement',] }],\n        input: [{ type: ViewChild, args: [MatInput,] }],\n        _disabled: [{ type: HostBinding, args: ['attr.disabled',] }],\n        _readonly: [{ type: HostBinding, args: ['attr.readonly',] }],\n        overlay: [{ type: ViewChild, args: [DejaOverlayComponent,] }],\n        positions: [{ type: Input }],\n        dropDownWidth: [{ type: Input }],\n        required: [{ type: Input }],\n        placeholder: [{ type: Input }],\n        options: [{ type: ContentChildren, args: [DejaItemComponent,] }],\n        query: [{ type: Input }],\n        delaySearchTrigger: [{ type: Input, args: ['delay-search-trigger',] }],\n        minSearchlength: [{ type: Input, args: ['min-search-length',] }],\n        disabled: [{ type: Input }],\n        selectionClearable: [{ type: Input }],\n        hideSelected: [{ type: Input }],\n        currentItem: [{ type: Input }],\n        pageSize: [{ type: Input }],\n        hintLabel: [{ type: Input }],\n        viewPortRowHeight: [{ type: Input }],\n        viewportMode: [{ type: Input }],\n        childrenField: [{ type: Input }],\n        textField: [{ type: Input }],\n        valueField: [{ type: Input }],\n        searchField: [{ type: Input }],\n        type: [{ type: Input }],\n        loadingItems: [{ type: Input }],\n        selectingItem: [{ type: Input }],\n        unselectingItem: [{ type: Input }],\n        expandingItem: [{ type: Input }],\n        collapsingItem: [{ type: Input }],\n        selectedItems: [{ type: Input }],\n        selectedItem: [{ type: Input }],\n        selectedModel: [{ type: Input }],\n        selectedModels: [{ type: Input }],\n        itemListService: [{ type: Input }],\n        sortingService: [{ type: Input }],\n        groupingService: [{ type: Input }],\n        waiter: [{ type: Input }],\n        items: [{ type: Input }],\n        models: [{ type: Input }],\n        maxHeight: [{ type: Input }],\n        readonly: [{ type: Input }],\n        inputValidatorDirective: [{ type: ViewChild, args: [DejaChildValidatorDirective,] }]\n    };\n    return DejaSelectComponent;\n}(ItemListBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaSelectModule = /** @class */ (function () {\n    function DejaSelectModule() {\n    }\n    DejaSelectModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        DejaSelectComponent,\n                    ],\n                    exports: [\n                        DejaSelectComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        MediaModule,\n                        DejaOverlayModule,\n                        MatIconModule,\n                        MatInputModule,\n                        DejaChildValidatorModule,\n                        DejaChipsModule,\n                        DejaItemModule,\n                        DejaListLoaderModule,\n                    ],\n                },] }\n    ];\n    return DejaSelectModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaSelectModule, DejaSelectComponent };\n\n//# sourceMappingURL=deja-js-component-select.js.map","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { Diacritics } from '@deja-js/core';\nimport { RegExpUtils } from '@deja-js/core/util';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaBoldQueryComponent = /** @class */ (function () {\n    function DejaBoldQueryComponent() {\n        this._regexpOptions = 'i';\n        this._firstOccurenceOnly = false;\n        this._firstOccurencePerWordOnly = false;\n        this._atTheBeginningOfWordOnly = false;\n        this._highlightClassName = 'highlight | yellowBackgroundColorHighlight';\n    }\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"content\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"query\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = Diacritics.remove(value);\n            if (this._query !== value) {\n                this._query = value;\n                this.refresh();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"value\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._value = value;\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"regexpOption\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._regexpOptions = value;\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"firstOccurenceOnly\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._firstOccurenceOnly = value;\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"firstOccurencePerWordOnly\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._firstOccurencePerWordOnly = value;\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"atTheBeginningOfWordOnly\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._atTheBeginningOfWordOnly = value;\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaBoldQueryComponent.prototype, \"highlightClassName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._highlightClassName;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._highlightClassName = value;\n            if (!this._highlightClassName) {\n                this._highlightClassName = 'highlight';\n            }\n            this.refresh();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaBoldQueryComponent.prototype.refresh = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._value && this._query && this._query.length > 0) {\n            /** @type {?} */\n            var regexpPattern = this._atTheBeginningOfWordOnly ? (\"\\\\b\" + RegExpUtils.escapeRegExp(this._query)) : RegExpUtils.escapeRegExp(this._query);\n            /** @type {?} */\n            var sc = new RegExp(regexpPattern, this._regexpOptions);\n            /** @type {?} */\n            var value_1 = (/** @type {?} */ (this._value.toString()));\n            /** @type {?} */\n            var search = Diacritics.remove(value_1);\n            /** @type {?} */\n            var splitted = search.split(sc);\n            /** @type {?} */\n            var position_1 = 0;\n            /** @type {?} */\n            var queryLength_1 = this._query.length;\n            /** @type {?} */\n            var contents_1 = (/** @type {?} */ ([]));\n            /** @type {?} */\n            var firstOccurence_1 = true;\n            /** @type {?} */\n            var nbOccurence_1 = 0;\n            splitted.forEach((/**\n             * @param {?} text\n             * @return {?}\n             */\n            function (text) {\n                if (text) {\n                    contents_1.push(value_1.slice(position_1, position_1 + text.length));\n                    position_1 += text.length;\n                }\n                if (position_1 + queryLength_1 <= value_1.length) {\n                    nbOccurence_1 += 1;\n                    /** @type {?} */\n                    var skipHighlight = false;\n                    if (_this._firstOccurencePerWordOnly && nbOccurence_1 > 1) {\n                        /** @type {?} */\n                        var words = text.split(/[^a-zA-Z\\d]/g);\n                        if (words.length === 1) {\n                            skipHighlight = true;\n                        }\n                    }\n                    if (!skipHighlight && (!_this._firstOccurenceOnly || firstOccurence_1)) {\n                        contents_1.push(\"<span class=\\\"\" + _this._highlightClassName + \"\\\">\");\n                    }\n                    contents_1.push(value_1.slice(position_1, position_1 + queryLength_1));\n                    if (!skipHighlight && (!_this._firstOccurenceOnly || firstOccurence_1)) {\n                        contents_1.push('</span>');\n                    }\n                    position_1 += queryLength_1;\n                }\n                firstOccurence_1 = false;\n            }));\n            this._content = contents_1.join('');\n        }\n        else {\n            this._content = this._value;\n        }\n    };\n    DejaBoldQueryComponent.decorators = [\n        { type: Component, args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'deja-bold-query',\n                    template: \"<div [innerHTML]=\\\"content\\\"></div>\",\n                    styles: [\"deja-bold-query .highlight{font-weight:700}deja-bold-query .yellowBackgroundColorHighlight{font-weight:inherit;background-color:#ff0;color:#111}\"]\n                }] }\n    ];\n    DejaBoldQueryComponent.propDecorators = {\n        query: [{ type: Input }],\n        value: [{ type: Input }],\n        regexpOption: [{ type: Input }],\n        firstOccurenceOnly: [{ type: Input }],\n        firstOccurencePerWordOnly: [{ type: Input }],\n        atTheBeginningOfWordOnly: [{ type: Input }],\n        highlightClassName: [{ type: Input }]\n    };\n    return DejaBoldQueryComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaBoldQueryModule = /** @class */ (function () {\n    function DejaBoldQueryModule() {\n    }\n    DejaBoldQueryModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        DejaBoldQueryComponent,\n                    ],\n                    exports: [DejaBoldQueryComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                    ],\n                },] }\n    ];\n    return DejaBoldQueryModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaBoldQueryModule, DejaBoldQueryComponent };\n\n//# sourceMappingURL=deja-js-component-templates.js.map","module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">\\n\\t<!--<mat-tab label=\\\"OVERVIEW\\\">-->\\n\\t<!--<mat-card class=\\\"demo-card demo-basic\\\">-->\\n\\t<!--TODO-->\\n\\t<!--</mat-card>-->\\n\\t<!--</mat-tab>-->\\n\\t<mat-tab label=\\\"API REFERENCE\\\"></mat-tab>\\n\\t<mat-tab label=\\\"SIMPLE EXAMPLES\\\"></mat-tab>\\n\\t<mat-tab label=\\\"ADVANCED EXAMPLES\\\"></mat-tab>\\n\\t<mat-tab label=\\\"TEMPLATING\\\"></mat-tab>\\n\\t<mat-tab label=\\\"PRE-EVENTS AND ON_DEMAND\\\"></mat-tab>\\n\\t<mat-tab label=\\\"PERFORMANCES\\\"></mat-tab>\\n\\t<mat-tab label=\\\"REACTIVE FORM\\\"></mat-tab>\\n</mat-tab-group>\\n\\n<deja-dialog *ngIf=\\\"dialogVisible\\\">\\n\\t<deja-message-box type=\\\"primary\\\" title=\\\"Confirm\\\">\\n\\t\\tPlease confirm your operation!\\n\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t<button id=\\\"cancelbtn\\\" mat-raised-button (click)=\\\"dialogResponse$.next('cancel')\\\">Cancel</button>\\n\\t\\t\\t<button id=\\\"okbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"dialogResponse$.next('ok')\\\">Ok</button>\\n\\t\\t</ng-template>\\n\\t</deja-message-box>\\n</deja-dialog>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n\\t<deja-markdown [url]=\\\"'https://raw.githubusercontent.com/DSI-HUG/dejajs-components/dev/projects/deja-js/component/select/readme.md'\\\"></deja-markdown>\\n</mat-card>\\n\\n<div *ngIf=\\\"tabIndex === 1\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Simple Usage</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Just passing an array of objects</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 auto\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t\\t<mat-label>Select Mode</mat-label>\\n\\t\\t\\t\\t\\t\\t<deja-select #select [(ngModel)]=\\\"businessCountry\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 auto\\\" appearance=\\\"fill\\\">\\n\\t\\t\\t\\t\\t\\t<mat-label>Autocomplete</mat-label>\\n\\t\\t\\t\\t\\t\\t<deja-select placeholder=\\\"\\\" type=\\\"autocomplete\\\" [(ngModel)]=\\\"businessCountry\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<button (click)=\\\"select.showDropDown()\\\">showDropDown</button>\\n\\t\\t\\t\\t\\t<h4>Selected country model :</h4>\\n\\t\\t\\t\\t\\t<pre>{{businessCountry | json}}</pre>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Keyboard Navigation</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>deja-select has some keyboard navigation feature</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 auto\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-label>Test Keyboard Navigation</mat-label>\\n\\t\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Select a country\\\" [(ngModel)]=\\\"businessCountry\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<ul fxFlex=\\\"0 0 50%\\\" fxFlexOffset=\\\"5%\\\" id=\\\"shortcut-list\\\">\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to select the previous item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to select the next item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Alt</span> +\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to toogle the dropdown</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Alt</span> +\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to toogle the dropdown</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">PageUp</span> to select the next page item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">PageDown</span> to select the previous page item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Home</span> to select the first item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">End</span> to select the last item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Space</span> to collapse or expand a group header</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Enter</span> to select the current item and close the dropdown</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">A</span>..\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Z</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">0</span>..\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">9</span> to select the next item started with the pressed key</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Select with options</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>These selects has a list coming from html options</div>\\n\\t\\t\\t<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start end\\\">\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Options content\\\" [(ngModel)]=\\\"fruct\\\" modelIsValue=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Apricots\\\" text=\\\"My preferred fruct is Apricots\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Banana\\\" text=\\\"My preferred fruct is Banana\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cantaloupe\\\" text=\\\"My preferred fruct is Cantaloupe\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cherries\\\" text=\\\"My preferred fruct is Cherries\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Coconut\\\" text=\\\"My preferred fruct is Coconut\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cranberries\\\" text=\\\"My preferred fruct is Cranberries\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Durian\\\" text=\\\"My preferred fruct is Durian\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Grapes\\\" text=\\\"My preferred fruct is Grapes\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Lemon\\\" text=\\\"My preferred fruct is Lemon\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Mango\\\" text=\\\"My preferred fruct is Mango\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Pineapple\\\" text=\\\"My preferred fruct is Pineapple\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Watermelon\\\" text=\\\"My preferred fruct is Watermelon\\\"></deja-item>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select viewportMode=\\\"variable\\\" placeholder=\\\"Options content\\\" type=\\\"multiselect\\\" selectedModels=\\\"Mango, Apricots, Coconut\\\">\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Apricots\\\" text=\\\"Apricots\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Banana\\\" text=\\\"Banana\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cantaloupe\\\" text=\\\"Cantaloupe\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cherries\\\" text=\\\"Cherries\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Coconut\\\" text=\\\"Coconut\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Cranberries\\\" text=\\\"Cranberries\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Durian\\\" text=\\\"Durian\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Grapes\\\" text=\\\"Grapes\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Lemon\\\" text=\\\"Lemon\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Mango\\\" text=\\\"Mango\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Pineapple\\\" text=\\\"Pineapple\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t<deja-item value=\\\"Watermelon\\\" text=\\\"Watermelon\\\"></deja-item>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">String Array Model</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select placeholder=\\\"String Array Model\\\" selectionClearable [(ngModel)]=\\\"fruct\\\" modelIsValue=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t<deja-item [value]=\\\"f\\\" [text]=\\\"f\\\" *ngFor=\\\"let f of fructs\\\"></deja-item>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 50%\\\" fxFlexOffset=\\\"5%\\\">Selected fruct model is: {{ fruct }}</span>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Clearable content</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Add the selectionClearable attribute to enable the clear button</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select placeholder=\\\"Clearable content\\\" selectionClearable [(ngModel)]=\\\"businessCountry\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Disabled select</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"disabled\\\" color=\\\"primary\\\">Check me to disable select below</mat-checkbox>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select placeholder=\\\"Disabled select\\\" [disabled]=\\\"disabled\\\" selectionClearable [(ngModel)]=\\\"businessCountry\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 2\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Multiselect</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Multiselect example</div>\\n\\t\\t\\t<div fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 auto\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-label>Selection hidden</mat-label>\\n\\t\\t\\t\\t\\t\\t\\t<deja-select hideSelected type=\\\"multiselect\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [(ngModel)]=\\\"multiselectModel\\\" [items]=\\\"countriesForMultiselect\\\"> </deja-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Selected country model :</h4>\\n\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let item of multiselectModel\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>{{ item.naqme }}</span>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 auto\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-label>Selection visible and below</mat-label>\\n\\t\\t\\t\\t\\t\\t\\t<deja-select [readonly]=\\\"readonlyMultiSelect\\\" [disabled]=\\\"disableMultiSelect\\\" type=\\\"multiselect\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [(ngModel)]=\\\"multiselectModel\\\" [items]=\\\"countriesForMultiselect\\\"> </deja-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t\\t<section fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<section fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>Read only : </span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"disable-check\\\">Disable : </span>\\n\\t\\t\\t\\t\\t\\t\\t</section>\\n\\t\\t\\t\\t\\t\\t\\t<section fxLayout=\\\"column\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"readonlyMultiSelect\\\" [color]=\\\"'primary'\\\"></mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-checkbox class=\\\"disable-check\\\" [(ngModel)]=\\\"disableMultiSelect\\\" [color]=\\\"'primary'\\\"></mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t</section>\\n\\t\\t\\t\\t\\t\\t</section>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Grouping</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Grouping example</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"groupedCountries\\\"></deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Autocomplete</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Autocomplete 2 characters minimum</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select type=\\\"autocomplete\\\" [itemListService]=\\\"countriesListService\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" min-search-length=\\\"2\\\"></deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 3\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Templating Examples</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>Item Template</h1>\\n\\t\\t\\t<div>An exemple with auto sized item template</div>\\n\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select #news type=\\\"select\\\" viewportMode=\\\"auto\\\" textField=\\\"title\\\" searchField=\\\"description\\\" [models]=\\\"news$\\\">\\n\\t\\t\\t\\t\\t<ng-template #itemTemplate let-item let-flatindex=\\\"flatindex\\\">\\n\\t\\t\\t\\t\\t\\t<news-card [item]=\\\"item.model\\\" (imageLoaded)=\\\"imageLoaded(item)\\\"></news-card>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<h1>Selected Template</h1>\\n\\t\\t\\t<div>Multi select with template for selected items</div>\\n\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select hideSelected type=\\\"multiselect\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" placeholder=\\\"Select one or more countries\\\" [(ngModel)]=\\\"multiselectModel\\\" [items]=\\\"countriesForMultiselect\\\">\\n\\t\\t\\t\\t\\t<ng-template #selectedTemplate let-item>\\n\\t\\t\\t\\t\\t\\t<span id=\\\"flight\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"item.code !== 'CH'\\\" class=\\\"material-icons\\\">flight_land</i>\\n\\t\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"item.code === 'CH'\\\" class=\\\"material-icons\\\">flight_takeoff</i>\\n\\t\\t\\t\\t\\t\\t\\t<span>{{ item.naqme + ' - ' + item.code }}</span>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<h1>Place Holder and Group Template</h1>\\n\\t\\t\\t<div>Select with a place holder template containing an icon</div>\\n\\t\\t\\t<span fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select type=\\\"autocomplete\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #placeHolderTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon id=\\\"placeholder-icon\\\">public</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\tPlace Holder Template\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select type=\\\"autocomplete\\\" placeholder=\\\"Group Template\\\" textField=\\\"naqme\\\" [items]=\\\"groupedCountries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #parentItemTemplate let-item>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon id=\\\"placeholder-icon\\\">public</mat-icon>&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<span>{{ item.groupName }}</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</span>\\n\\t\\t\\t<h1>Hint and Suffix Templates</h1>\\n\\t\\t\\t<span fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Hint template select\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #hintTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"validation-error\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tHint template. Can be used for the validations errors for exemple!\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Suffix template selelct\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #suffixTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon id=\\\"placeholder-icon\\\">public</mat-icon>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</span>\\n\\t\\t\\t<h1>Query Bold Template</h1>\\n\\t\\t\\t<span>\\n\\t\\t\\t\\t<label>Highlight options:</label>\\n\\t\\t\\t</span>\\n\\t\\t\\t<div fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"firstOccurenceOnly\\\" color=\\\"primary\\\">First occurence only ( [firstOccurenceOnly]='{{firstOccurenceOnly}}' )</mat-checkbox>\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"firstOccurencePerWordOnly\\\" color=\\\"primary\\\">First occurence per word only ( [firstOccurencePerWordOnly]='{{firstOccurencePerWordOnly}}' )</mat-checkbox>\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"atTheBeginningOfWordOnly\\\" color=\\\"primary\\\">At the beginning of word only ( [atTheBeginningOfWordOnly]='{{atTheBeginningOfWordOnly}}' )</mat-checkbox>\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"yellowBackgroundColorHighlight\\\" color=\\\"primary\\\">Highlight class name ( [highlightClassName]={{yellowBackgroundColorHighlight?'yellowBackgroundColorHighlight':'highlight'}})</mat-checkbox>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Bold query template select\\\" type=\\\"autocomplete\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #itemTemplate let-query=\\\"query\\\" let-item>\\n\\t\\t\\t\\t\\t\\t\\t<deja-bold-query [query]=\\\"query\\\" [value]=\\\"item.naqme+item.naqme+item.naqme+item.naqme+item.naqme\\\" [firstOccurenceOnly]=\\\"firstOccurenceOnly\\\" [firstOccurencePerWordOnly]=\\\"firstOccurencePerWordOnly\\\" [atTheBeginningOfWordOnly]=\\\"atTheBeginningOfWordOnly\\\" [highlightClassName]=\\\"yellowBackgroundColorHighlight?'yellowBackgroundColorHighlight':'highlight'\\\"></deja-bold-query>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 4\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Pre-Events and on Demand</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>On Demand Loading </h1>\\n\\t\\t\\t<div>The items are loaded after the drop down is opened</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select #ondemand textField=\\\"naqme\\\" valueField=\\\"code\\\" [loadingItems]=\\\"loadingItems()\\\" [placeholder]=\\\"onDemandPlaceHolder\\\"></deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<h1>Confirm Selection and Unselection </h1>\\n\\t\\t\\t<div>A dialog will confirm the selection or the unselection of an item</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select hideSelected type=\\\"multiselect\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" placeholder=\\\"Selection hidden\\\" [(ngModel)]=\\\"multiselectModel\\\" [items]=\\\"countriesForMultiselect\\\" [selectingItem]=\\\"confirmDialog()\\\" [unselectingItem]=\\\"confirmDialogWithPromise()\\\"> </deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<h1>Confirm Expand and Collapse </h1>\\n\\t\\t\\t<div>A dialog will confirm the expand and collapse or an item if the children are not loaded. The children will be loaded asynchronously after the item expansion.</div>\\n\\t\\t\\t<mat-form-field class=\\\"demo-half-width\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select #onexpand textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"onDemandGroupedCountries\\\" [expandingItem]=\\\"expandingItems()\\\" [collapsingItem]=\\\"collapsingItems()\\\">\\n\\t\\t\\t\\t\\t<ng-template #parentItemTemplate let-item>\\n\\t\\t\\t\\t\\t\\t<span>{{ item.groupName }}</span>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 5\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Performance Examples</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>10K items with Item Template </h1>\\n\\t\\t\\t<div>An exemple with 10000 auto sized templatized items</div>\\n\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t<deja-select #news placeholder=\\\"10000 items select\\\" type=\\\"select\\\" viewportMode=\\\"auto\\\" textField=\\\"title\\\" searchField=\\\"description\\\" [models]=\\\"bigNews$\\\">\\n\\t\\t\\t\\t\\t<ng-template #itemTemplate let-item let-flatindex=\\\"flatindex\\\">\\n\\t\\t\\t\\t\\t\\t<news-card [item]=\\\"item.model\\\" (imageLoaded)=\\\"imageLoaded(item)\\\"></news-card>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<h1>Fixed size rows 100K items</h1>\\n\\t\\t\\t<div>An exemple with 100000 fixed size items</div>\\n\\t\\t\\t<span fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 45%\\\" appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t<deja-select #bigCountries type=\\\"autocomplete\\\" placeholder=\\\"100000 items select\\\" [items]=\\\"bigCountries$\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\"></deja-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<h4 id=\\\"vptitle\\\">Viewport Infos:</h4>\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let info of viewPortInfos\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"vpinfoname\\\">{{info.name}}</span>\\n\\t\\t\\t\\t\\t\\t<span>{{info.value}}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 6\\\">\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Minimal case</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\n\\t\\t\\t<form novalidate [formGroup]=\\\"fruitForm\\\">\\n\\t\\t\\t\\t<div class=\\\"demo-half-width react-form-elem\\\">\\n\\t\\t\\t\\t\\t<h3>Select: </h3>\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Fruit\\\" selectionClearable formControlName=\\\"fruitName\\\">\\n\\t\\t\\t\\t\\t\\t\\t<deja-item value=\\\"apple\\\" text=\\\"apple\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t\\t<deja-item value=\\\"banana\\\" text=\\\"banana\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t\\t<deja-item value=\\\"gruyère\\\" text=\\\"gruyère\\\"></deja-item>\\n\\t\\t\\t\\t\\t\\t</deja-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-error align=\\\"end\\\">{{fruitForm.get('fruitName').errors ? fruitForm.get('fruitName').errors[0] : ''}}</mat-error>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<div class=\\\"react-form-elem\\\">\\n\\t\\t\\t\\t<h3>Your selection: </h3>\\n\\t\\t\\t\\t<span>{{fruitForm.get('fruitName').value}}</span>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"react-form-elem\\\">\\n\\t\\t\\t\\t<h3>Code: </h3>\\n\\t\\t\\t\\t<deja-markdown [url]=\\\"'assets/snippets/select-reactive-form.md'\\\"></deja-markdown>\\n\\t\\t\\t</div>\\n\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-select-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">With models as an array of strings</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\n\\t\\t\\t<form novalidate [formGroup]=\\\"fruitFormModels\\\">\\n\\t\\t\\t\\t<div class=\\\"demo-half-width react-form-elem\\\">\\n\\t\\t\\t\\t\\t<h3>Select: </h3>\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t\\t<deja-select placeholder=\\\"Fruit\\\" selectionClearable [models]=\\\"fruits$\\\" formControlName=\\\"fruitName\\\"></deja-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<div class=\\\"react-form-elem\\\">\\n\\t\\t\\t\\t<h3>Your selection: </h3>\\n\\t\\t\\t\\t<span>{{fruitFormModels.get('fruitName').value}}</span>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"react-form-elem\\\">\\n\\t\\t\\t\\t<h3>Code: </h3>\\n\\t\\t\\t\\t<deja-markdown [url]=\\\"'assets/snippets/select-reactive-form-models.md'\\\"></deja-markdown>\\n\\t\\t\\t</div>\\n\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule, MatCheckboxModule, MatFormFieldModule, MatIconModule, MatInputModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DejaItemModule } from '@deja-js/core';\nimport { DejaDialogModule } from '@deja-js/component/dialog';\nimport { DejaMessageBoxModule } from '@deja-js/component/message-box';\nimport { DejaSelectModule } from '@deja-js/component/select';\nimport { DejaBoldQueryModule } from '@deja-js/component/templates';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { NewsCardModule } from '../common/news-card.module';\nimport { SelectDemoComponent } from './select-demo';\nimport { routing } from './select-demo.routes';\n\n@NgModule({\n    declarations: [\n        SelectDemoComponent,\n    ],\n    exports: [SelectDemoComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatInputModule,\n        DejaSelectModule,\n        DejaMarkdownModule,\n        DejaMessageBoxModule,\n        DejaDialogModule,\n        DejaItemModule,\n        DejaBoldQueryModule,\n        NewsCardModule,\n        routing,\n    ],\n    providers: [\n    ],\n})\nexport class SelectDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SelectDemoComponent } from './select-demo';\n\nconst routes: Routes = [\n    { path: '', component: SelectDemoComponent },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \":host .demo-card {\\n  margin: 16px; }\\n  :host .demo-card mat-card-content {\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: column; }\\n  :host .demo-card mat-card-content mat-form-field {\\n      flex-basis: auto;\\n      flex-grow: 0;\\n      flex-shrink: 0;\\n      position: relative;\\n      margin-top: 0.7rem; }\\n  :host .demo-basic {\\n  padding: 0; }\\n  :host .demo-full-width {\\n  width: 100%; }\\n  :host .demo-half-width {\\n  width: 45%; }\\n  :host .demo-icons {\\n  font-size: 100%;\\n  height: inherit;\\n  vertical-align: top;\\n  width: inherit; }\\n  :host #flight {\\n  display: flex;\\n  align-items: center; }\\n  :host news-card {\\n  width: 100%; }\\n  :host news-card .text {\\n    overflow-x: hidden; }\\n  :host .vpinfoname {\\n  display: inline-block;\\n  width: 7rem; }\\n  :host .disable-check {\\n  margin-top: .5rem; }\\n  :host .react-form-elem {\\n  min-height: 5rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9EU0ktSFVHL2RlamFqcy1jb21wb25lbnRzL3NyYy9hcHAvc2VsZWN0L3NlbGVjdC1kZW1vLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxZQUFZLEVBQUE7RUFGZDtJQUlHLGFBQWE7SUFDYixhQUFhO0lBQ0osc0JBQXNCLEVBQUE7RUFObEM7TUFRSSxnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLGNBQWM7TUFDZCxrQkFBa0I7TUFDbEIsa0JBQWtCLEVBQUE7RUFadEI7RUFpQkUsVUFBVSxFQUFBO0VBakJaO0VBb0JFLFdBQVcsRUFBQTtFQXBCYjtFQXVCRSxVQUFVLEVBQUE7RUF2Qlo7RUEwQkUsZUFBZTtFQUNmLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsY0FBYyxFQUFBO0VBN0JoQjtFQWdDRSxhQUFhO0VBQ2IsbUJBQW1CLEVBQUE7RUFqQ3JCO0VBb0NRLFdBQVcsRUFBQTtFQXBDbkI7SUFzQ1ksa0JBQWtCLEVBQUE7RUF0QzlCO0VBMENRLHFCQUFxQjtFQUNyQixXQUFXLEVBQUE7RUEzQ25CO0VBOENRLGlCQUFpQixFQUFBO0VBOUN6QjtFQWlERSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdC9zZWxlY3QtZGVtby5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuXHQuZGVtby1jYXJkIHtcblx0XHRtYXJnaW46IDE2cHg7XG5cdFx0bWF0LWNhcmQtY29udGVudCB7XG5cdFx0XHRwYWRkaW5nOiAxNnB4O1xuXHRcdFx0ZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBtYXQtZm9ybS1maWVsZCB7XG5cdFx0XHRcdGZsZXgtYmFzaXM6IGF1dG87XG5cdFx0XHRcdGZsZXgtZ3JvdzogMDtcblx0XHRcdFx0ZmxleC1zaHJpbms6IDA7XG5cdFx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRcdFx0bWFyZ2luLXRvcDogMC43cmVtO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHQuZGVtby1iYXNpYyB7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuXHQuZGVtby1mdWxsLXdpZHRoIHtcblx0XHR3aWR0aDogMTAwJTtcblx0fVxuXHQuZGVtby1oYWxmLXdpZHRoIHtcblx0XHR3aWR0aDogNDUlO1xuXHR9XG5cdC5kZW1vLWljb25zIHtcblx0XHRmb250LXNpemU6IDEwMCU7XG5cdFx0aGVpZ2h0OiBpbmhlcml0O1xuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cdFx0d2lkdGg6IGluaGVyaXQ7XG5cdH1cblx0I2ZsaWdodCB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHR9XG4gICAgbmV3cy1jYXJkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudnBpbmZvbmFtZSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IDdyZW07ICAgIFxuICAgIH1cbiAgICAuZGlzYWJsZS1jaGVjayB7XG4gICAgICAgIG1hcmdpbi10b3A6IC41cmVtO1xuXHR9XG5cdC5yZWFjdC1mb3JtLWVsZW17XG5cdFx0bWluLWhlaWdodDogNXJlbTtcblx0fVxufSJdfQ== */\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IItemTree, IViewPortItem, IItemBase } from '@deja-js/core';\nimport { DejaSelectComponent } from '@deja-js/component/select';\nimport { from as observableFrom, Observable, of as observableOf, Subject, Subscription } from 'rxjs';\nimport { delay, first, map, tap } from 'rxjs/operators';\nimport { News } from '../common/news.model';\nimport { CountriesListService } from '../services/countries-list.service';\nimport { CountriesService, Country } from '../services/countries.service';\nimport { NewsService } from '../services/news.service';\nimport { cheeseValidator } from './validators';\n\n@Component({\n    selector: 'deja-select-demo',\n    styleUrls: ['./select-demo.scss'],\n    templateUrl: './select-demo.html',\n})\nexport class SelectDemoComponent implements OnDestroy {\n    public fruct = '';\n    public fructs = [] as string[];\n\n    public disabled: boolean;\n    public country: Country;\n    public tabIndex = 1;\n    public news$: Observable<News[]>;\n    public bigNews$: Observable<News[]>;\n    public bigCountries$: Observable<Country[]>;\n    public viewPortInfos: {\n        name: string;\n        value: string;\n    }[];\n    public viewPortInfos$: Subscription;\n    public dialogResponse$: Subject<string> = new Subject<string>();\n    public readonlyMultiSelect = false;\n    public disableMultiSelect = false;\n    public fruitForm: FormGroup;\n    public fruitFormModels: FormGroup;\n    public fruits$: Observable<string[]>;\n\n    public countries: Observable<Country[]>;\n    public countriesForMultiselect: Country[];\n    public groupedCountries: ICountryGroup[];\n    public onDemandGroupedCountries: ICountryGroup[];\n    public multiselectModel: any[];\n    private _dialogVisible = false;\n    public onDemandPlaceHolder = 'Open to load';\n    private subscriptions = [] as Subscription[];\n    public yellowBackgroundColorHighlight = true;\n\n    public firstOccurenceOnly = false;\n    public firstOccurencePerWordOnly = false;\n    public atTheBeginningOfWordOnly = false;\n\n    @ViewChild('news') private newsSelect: DejaSelectComponent;\n    @ViewChild('ondemand') private onDemandSelect: DejaSelectComponent;\n    @ViewChild('onexpand') private onExpandSelect: DejaSelectComponent;\n\n    public businessCountry: Country;\n\n    public set dialogVisible(value: boolean) {\n        this._dialogVisible = value;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    public get dialogVisible() {\n        return this._dialogVisible;\n    }\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private countriesService: CountriesService, protected countriesListService: CountriesListService, newsService: NewsService, private _fb: FormBuilder) {\n        this.multiselectModel = JSON.parse('[{\"naqme\":\"ÅlandIslands\",\"code\":\"AX\",\"displayName\":\"ÅlandIslands\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"AmericanSamoa\",\"code\":\"AS\",\"displayName\":\"AmericanSamoa\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Argentina\",\"code\":\"AR\",\"displayName\":\"Argentina\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"ChristmasIsland\",\"code\":\"CX\",\"displayName\":\"ChristmasIsland\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Egypt\",\"code\":\"EG\",\"displayName\":\"Egypt\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"Dominica\",\"code\":\"DM\",\"displayName\":\"Dominica\",\"depth\":0,\"odd\":false,\"selected\":true}]');\n        this.news$ = newsService.getNews$(50);\n        this.bigNews$ = newsService.getNews$(10000);\n        this.bigCountries$ = countriesService.getCountries$(null, 100000);\n\n        this.country = new Country();\n        this.country.code = 'CH';\n        this.country.displayName = 'Switzerland';\n        this.country.naqme = 'Switzerland';\n        this.country.color = 'rgb(211, 47, 47)';\n\n        this.countries = this.countriesService.getCountries$();\n\n        this.fructs = [\n            'Apricots',\n            'Banana',\n            'Cantaloupe',\n            'Cherries',\n            'Coconut',\n            'Cranberries',\n            'Durian',\n            'Grapes',\n            'Lemon',\n            'Mango',\n            'Pineapple',\n            'Watermelon',\n        ];\n\n        this.fruits$ = observableOf(this.fructs);\n\n        this.subscriptions.push(this.countries.pipe(\n            tap((value) => this.countriesForMultiselect = value),\n            delay(1), )\n            .subscribe(() => {\n                this.multiselectModel = JSON.parse('[{\"naqme\":\"ÅlandIslands\",\"code\":\"AX\",\"displayName\":\"ÅlandIslands\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"AmericanSamoa\",\"code\":\"AS\",\"displayName\":\"AmericanSamoa\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Argentina\",\"code\":\"AR\",\"displayName\":\"Argentina\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"ChristmasIsland\",\"code\":\"CX\",\"displayName\":\"ChristmasIsland\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Egypt\",\"code\":\"EG\",\"displayName\":\"Egypt\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"Dominica\",\"code\":\"DM\",\"displayName\":\"Dominica\",\"depth\":0,\"odd\":false,\"selected\":true}]');\n            }));\n\n        this.subscriptions.push(this.countries\n            .subscribe((value: Country[]) => {\n                const result = [] as ICountryGroup[];\n                const onDemandResult = [] as ICountryGroup[];\n                const map = {} as { [groupName: string]: ISelectCountry[] };\n\n                result.push({\n                    collapsible: true,\n                    collapsed: true,\n                    groupName: 'EmptyGroup',\n                    items: [],\n                    displayName: 'Empty Group',\n                    selectable: false,\n                } as ICountryGroup);\n\n                value.map((country) => {\n                    const groupName = `Group${country.naqme[0]}`;\n                    if (!map[groupName]) {\n                        map[groupName] = [] as ICountryGroup[];\n                        result.push({\n                            collapsible: true,\n                            groupName: groupName,\n                            items: map[groupName],\n                            naqme: groupName,\n                            selectable: true,\n                        } as ICountryGroup);\n\n                        onDemandResult.push({\n                            collapsible: true,\n                            collapsed: true,\n                            groupName: groupName,\n                            items: [{\n                                displayName: 'loading...',\n                                selectable: false,\n                            }],\n                            naqme: groupName,\n                            selectable: false,\n                            loaded: false,\n                        } as ICountryGroup);\n                    }\n\n                    map[groupName].push({ model: country });\n                });\n\n                this.groupedCountries = result;\n                this.onDemandGroupedCountries = onDemandResult;\n            }));\n\n        this.fruitForm = this._fb.group({\n            fruitName: ['', [cheeseValidator]],\n        });\n        this.fruitFormModels = this._fb.group({\n            fruitName: [''],\n        });\n    }\n\n    public ngOnDestroy() {\n        this.subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    }\n\n    protected loadingItems() {\n        const self = this;\n        return (_query: string | RegExp, _selectedItems: IItemBase[]) => {\n            self.onDemandSelect.waiter = true;\n            self.onDemandPlaceHolder = 'loading...';\n            return self.countriesService.getCountries$().pipe(\n                delay(3000),\n                tap(() => {\n                    self.onDemandSelect.waiter = false;\n                    self.onDemandPlaceHolder = 'Selected a country';\n                }), );\n        };\n    }\n\n    protected collapsingItems() {\n        const self = this;\n        return (item: IItemBase) => {\n            const country = item as ICountryGroup;\n            return country.loaded ? observableOf(item) : self.confirmDialog()(item);\n        };\n    }\n\n    protected expandingItems() {\n        const self = this;\n        return (item: IItemBase) => {\n            const group = item as ICountryGroup;\n            if (group.loaded) {\n                return observableOf(item);\n            } else {\n                if (confirm('Please confirm your operation!')) {\n                    observableOf(group).pipe(\n                        delay(2000),\n                        first(), )\n                        .subscribe((grp) => {\n                            // Simulate asynchronous load\n                            const original = this.groupedCountries.find((c) => c.displayName === grp.displayName);\n                            grp.items = original.items;\n                            grp.loaded = true;\n                            this.onExpandSelect.refresh();\n                        });\n\n                    return observableOf(item);\n                } else {\n                    return observableOf(null);\n                }\n            }\n        };\n    }\n\n    protected confirmDialogWithPromise() {\n        const self = this;\n        return (item: IItemBase) => {\n            return self.confirmDialog()(item).toPromise();\n        };\n    }\n\n    protected confirmDialog() {\n        const self = this;\n        return (item: IItemBase) => {\n            self.dialogVisible = true;\n            return observableFrom(this.dialogResponse$).pipe(\n                first(),\n                map((response) => {\n                    self.dialogVisible = false;\n                    return response === 'ok' ? item : null;\n                }), );\n        };\n    }\n\n    @ViewChild('bigCountries')\n    protected set bigCountriesSelect(select: DejaSelectComponent) {\n        if (this.viewPortInfos$) {\n            this.viewPortInfos$.unsubscribe();\n            this.viewPortInfos = [];\n            delete this.viewPortInfos$;\n        }\n\n        this.viewPortInfos$ = select && select.viewPort.viewPort$.subscribe((viewPort) => {\n            this.viewPortInfos = [\n                { name: 'beforeSize', value: String(viewPort.beforeSize), },\n                { name: 'startIndex', value: String(viewPort.startIndex), },\n                { name: 'viewPortSize', value: String(viewPort.viewPortSize), },\n                { name: 'visibleCount', value: String(viewPort.visibleItems && viewPort.visibleItems.length), },\n                { name: 'endIndex', value: String(viewPort.endIndex), },\n                { name: 'afterSize', value: String(viewPort.afterSize), },\n                { name: 'itemsCount', value: String(viewPort.items && viewPort.items.length), }\n            ];\n        });\n    }\n\n    protected imageLoaded(item: IViewPortItem) {\n        const itemExt = item as IExtendedViewPortItem;\n        if (!itemExt.loaded) {\n            itemExt.loaded = true;\n            this.newsSelect.refreshViewPort(itemExt);\n        }\n    }\n\n}\n\ninterface ISelectCountry extends IItemTree {\n    items?: IItemTree[];\n}\n\ninterface ICountryGroup extends ISelectCountry {\n    groupName?: string;\n    items: IItemBase[];\n    loaded?: boolean;\n}\n\ninterface IExtendedViewPortItem extends IViewPortItem {\n    loaded: boolean;\n}\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { AbstractControl } from '@angular/forms';\nexport const cheeseValidator = (control: AbstractControl): string[] => {\n    const val = control.value;\n    if (val === 'gruyère') {\n        return [`${val} is not a fruit`];\n    }\n};\n"],"sourceRoot":""}