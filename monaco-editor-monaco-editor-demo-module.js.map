{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-monaco-editor.js","webpack:///./src/app/monaco-editor/monaco-editor-demo.component.html","webpack:///./src/app/monaco-editor/monaco-editor-demo.component.scss","webpack:///./src/app/monaco-editor/monaco-editor-demo.component.ts","webpack:///./src/app/monaco-editor/monaco-editor-demo.module.ts","webpack:///./src/app/monaco-editor/monaco-editor-demo.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACM;AACG;AACiG;;AAEzJ;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sFAAsF,EAAE,OAAO;AAC/F,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,6BAA6B,EAAE,+BAA+B,SAAS,iBAAiB,EAAE;AAC1F,6BAA6B,EAAE;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,8BAA8B,EAAE,wCAAwC,EAAE;AAC1E,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qBAAqB,EAAE,0DAA0D,EAAE,qBAAqB,EAAE,GAAG;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,mCAAmC,+DAAiB;AACpD;AACA;AACA,iDAAiD,WAAW,aAAa,cAAc,kCAAkC,cAAc;AACvI,iBAAiB;AACjB;AACA;A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","file":"monaco-editor-monaco-editor-demo-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ResizeListenerModule } from '@deja-js/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { Injectable, Component, EventEmitter, HostListener, Input, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Monaco Editor Service\n *\n * Service used by Monaco Editor Component to load only once instance of the Monaco Editor Library\n */\nvar MonacoEditorService = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function MonacoEditorService() {\n    }\n    /**\n     * Load the Monaco Editor Library\n     *\n     * @return Resolved promise when the library is loaded\n     */\n    /**\n     * Load the Monaco Editor Library\n     *\n     * @return {?} Resolved promise when the library is loaded\n     */\n    MonacoEditorService.prototype.initMonacoLib = /**\n     * Load the Monaco Editor Library\n     *\n     * @return {?} Resolved promise when the library is loaded\n     */\n    function () {\n        if (!this._loading) {\n            this.init();\n        }\n        return this._loader;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MonacoEditorService.prototype.init = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._loader = new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        function (resolve) {\n            _this._loading = true;\n            /** @type {?} */\n            var baseElement = document.getElementsByTagName('base')[0] || (/** @type {?} */ ({}));\n            /** @type {?} */\n            var baseHref = baseElement.href;\n            /** @type {?} */\n            var basePath = ((/** @type {?} */ (window))).MONACOEDITOR_BASEPATH || baseHref + \"assets/monaco/vs\";\n            /** @type {?} */\n            var onGotAmdLoader = (/**\n             * @return {?}\n             */\n            function () {\n                // Load monaco\n                ((/** @type {?} */ (window))).require.config({ paths: { 'vs': basePath } });\n                ((/** @type {?} */ (window))).require(['vs/editor/editor.main'], (/**\n                 * @return {?}\n                 */\n                function () {\n                    resolve();\n                }));\n            });\n            // Load AMD loader if necessary\n            if (!((/** @type {?} */ (window))).require && !((/** @type {?} */ (window))).monaco) {\n                /** @type {?} */\n                var loaderScript = document.createElement('script');\n                loaderScript.type = 'text/javascript';\n                loaderScript.src = basePath + \"/loader.js\";\n                loaderScript.addEventListener('load', onGotAmdLoader);\n                document.body.appendChild(loaderScript);\n            }\n            else {\n                onGotAmdLoader();\n            }\n        }));\n    };\n    MonacoEditorService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    MonacoEditorService.ctorParameters = function () { return []; };\n    return MonacoEditorService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n/**\n * Configuration options for the editor.\n */\nvar  /**\n * Configuration options for the editor.\n */\nEditorOptions = /** @class */ (function () {\n    function EditorOptions() {\n    }\n    return EditorOptions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n/**\n * Configuration options for editor scrollbars\n */\nvar  /**\n * Configuration options for editor scrollbars\n */\nEditorScrollbarOptions = /** @class */ (function () {\n    function EditorScrollbarOptions() {\n    }\n    return EditorScrollbarOptions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Monaco Editor Component for Angular\n *\n * The Monaco Editor is the code editor that powers [VS Code](https://github.com/Microsoft/vscode), a good page describing the code editor's features is [here](https://code.visualstudio.com/docs/editor/editingevolved).\n */\nvar DejaMonacoEditorComponent = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function DejaMonacoEditorComponent(monacoEditorService, _control) {\n        this.monacoEditorService = monacoEditorService;\n        this._control = _control;\n        /**\n         * Event triggered when value change\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event triggered when valueToCompare change\n         */\n        this.valueToCompareChange = new EventEmitter();\n        /**\n         * Event triggered when editor is initialized\n         */\n        this.onInit = new EventEmitter();\n        this._value = '';\n        this._valueToCompare = '';\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        function () { });\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n    }\n    Object.defineProperty(DejaMonacoEditorComponent.prototype, \"language\", {\n        /**\n         * Content language\n         */\n        set: /**\n         * Content language\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (val) {\n                this._language = val;\n                if (this._editor) {\n                    this.ngAfterViewInit();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaMonacoEditorComponent.prototype, \"valueToCompare\", {\n        // @Input() public language: 'bat' | 'c' | 'cpp' | 'csharp' | 'css' | 'dockerfile' | 'fsharp' | 'go' | 'handlebars' | 'html' | 'ini' | 'jade' | 'javascript' | 'json' | 'less' | 'lua' | 'markdown' | 'objective-c' | 'php' | 'csharp' | 'plaintext' | 'postiats' | 'powershell' | 'python' | 'r' | 'razor' | 'ruby' | 'scss' | 'sql' | 'swift' | 'typescript' | 'vb' | 'xml' | 'yaml';\n        /**\n         * Value to compare with the Value input\n         * Used only when `isDiffEditor` is set to `true`\n         */\n        set: \n        // @Input() public language: 'bat' | 'c' | 'cpp' | 'csharp' | 'css' | 'dockerfile' | 'fsharp' | 'go' | 'handlebars' | 'html' | 'ini' | 'jade' | 'javascript' | 'json' | 'less' | 'lua' | 'markdown' | 'objective-c' | 'php' | 'csharp' | 'plaintext' | 'postiats' | 'powershell' | 'python' | 'r' | 'razor' | 'ruby' | 'scss' | 'sql' | 'swift' | 'typescript' | 'vb' | 'xml' | 'yaml';\n        /**\n         * Value to compare with the Value input\n         * Used only when `isDiffEditor` is set to `true`\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            if (v !== this._valueToCompare) {\n                this._valueToCompare = v;\n                if (this._valueToCompare === undefined || !this._valueToCompare || !this._editor) {\n                    return;\n                }\n                if (this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n                    this.getModifiedModel().setValue(this._valueToCompare);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaMonacoEditorComponent.prototype, \"value\", {\n        /**\n         * Value to show in the editor\n         */\n        set: /**\n         * Value to show in the editor\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            if (v !== this._value) {\n                this._value = v;\n                if (!this._editor) {\n                    return;\n                }\n                if (this._value === undefined || !this._value) {\n                    this._value = '';\n                }\n                this.getOriginalModel().setValue(this._value);\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Load Monaco Editor library\n     */\n    /**\n     * Load Monaco Editor library\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.ngAfterViewInit = /**\n     * Load Monaco Editor library\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.monacoEditorService.initMonacoLib().then((/**\n         * @return {?}\n         */\n        function () {\n            _this.initEditor();\n        }));\n    };\n    /**\n     * Lifecycle hook that is called when a directive, pipe or service is destroyed.\n     */\n    /**\n     * Lifecycle hook that is called when a directive, pipe or service is destroyed.\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.ngOnDestroy = /**\n     * Lifecycle hook that is called when a directive, pipe or service is destroyed.\n     * @return {?}\n     */\n    function () {\n        this.dispose();\n    };\n    /**\n     * Lifecycle hook that is called when any data-bound property of a directive changes.\n     */\n    /**\n     * Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.ngOnChanges = /**\n     * Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @return {?}\n     */\n    function () {\n        if (this._editor) {\n            this._editor.updateOptions(this.getOptions());\n        }\n    };\n    /** From ControlValueAccessor interface */\n    /**\n     * From ControlValueAccessor interface\n     * @param {?} value\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.writeValue = /**\n     * From ControlValueAccessor interface\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n    };\n    /** From ControlValueAccessor interface */\n    /**\n     * From ControlValueAccessor interface\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.registerOnChange = /**\n     * From ControlValueAccessor interface\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /** From ControlValueAccessor interface */\n    /**\n     * From ControlValueAccessor interface\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.registerOnTouched = /**\n     * From ControlValueAccessor interface\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * Destroy the monaco component\n     */\n    /**\n     * Destroy the monaco component\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.dispose = /**\n     * Destroy the monaco component\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var myDiv = this.editorContent.nativeElement;\n        if (this._editor) {\n            // this._editor.dispose();\n            while (myDiv.hasChildNodes()) {\n                myDiv.removeChild(myDiv.firstChild);\n            }\n            this._editor = null;\n        }\n    };\n    /**\n     * Triggered when windows is resized\n     * Resize the component\n     */\n    /**\n     * Triggered when windows is resized\n     * Resize the component\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.onResize = /**\n     * Triggered when windows is resized\n     * Resize the component\n     * @return {?}\n     */\n    function () {\n        // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n        /** @type {?} */\n        var myDiv = this.editorContent.nativeElement;\n        myDiv.setAttribute('style', \"height: 100%; width: 100%;\");\n        if (this._editor) {\n            this._editor.layout();\n        }\n    };\n    /**\n     * Init the component\n     */\n    /**\n     * Init the component\n     * @private\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.initEditor = /**\n     * Init the component\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var myDiv = this.editorContent.nativeElement;\n        /** @type {?} */\n        var options = this.getOptions();\n        this.dispose();\n        if (!this.isDiffEditor) {\n            this._editor = this.initSimpleEditor(myDiv, options);\n        }\n        else {\n            this._editor = this.initDiffEditor(myDiv, options);\n        }\n        this.onResize();\n        // Trigger on change event for simple editor\n        this.getOriginalModel().onDidChangeContent((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var newVal = _this.getOriginalModel().getValue();\n            if (_this._value !== newVal) {\n                _this.updateValue(newVal);\n            }\n        }));\n        // Trigger on change event for diff editor\n        if (this.getModifiedModel()) {\n            this.getModifiedModel().onDidChangeContent((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var newVal = _this.getModifiedModel().getValue();\n                if (_this._valueToCompare !== newVal) {\n                    _this.updateValueToCompare(newVal);\n                }\n            }));\n        }\n        this.onInit.next(this._editor);\n    };\n    /**\n     * Create a simple editor text\n     * @param div\n     * @param options\n     * @return instance of monaco\n     */\n    /**\n     * Create a simple editor text\n     * @private\n     * @param {?} div\n     * @param {?} options\n     * @return {?} instance of monaco\n     */\n    DejaMonacoEditorComponent.prototype.initSimpleEditor = /**\n     * Create a simple editor text\n     * @private\n     * @param {?} div\n     * @param {?} options\n     * @return {?} instance of monaco\n     */\n    function (div, options) {\n        return monaco.editor.create(div, options);\n    };\n    /**\n     * Create a diff editor to compare two string (_value and _valueToCompare)\n     * @param div\n     * @return instance of monaco\n     */\n    /**\n     * Create a diff editor to compare two string (_value and _valueToCompare)\n     * @private\n     * @param {?} div\n     * @param {?} options\n     * @return {?} instance of monaco\n     */\n    DejaMonacoEditorComponent.prototype.initDiffEditor = /**\n     * Create a diff editor to compare two string (_value and _valueToCompare)\n     * @private\n     * @param {?} div\n     * @param {?} options\n     * @return {?} instance of monaco\n     */\n    function (div, options) {\n        /** @type {?} */\n        var originalModel = monaco.editor.createModel(this._value, this.language);\n        /** @type {?} */\n        var modifiedModel = monaco.editor.createModel(this._valueToCompare, this.language);\n        /** @type {?} */\n        var diffEditor = monaco.editor.createDiffEditor(div, options);\n        diffEditor.setModel({\n            modified: modifiedModel,\n            original: originalModel,\n        });\n        return diffEditor;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.getOptions = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var options = new EditorOptions();\n        options.experimentalScreenReader = this.experimentalScreenReader;\n        options.ariaLabel = this.ariaLabel;\n        options.rulers = this.rulers;\n        options.wordSeparators = this.wordSeparators;\n        options.selectionClipboard = this.selectionClipboard;\n        options.lineNumbers = this.lineNumbers;\n        options.selectOnLineNumbers = this.selectOnLineNumbers;\n        options.lineNumbersMinChars = this.lineNumbersMinChars;\n        options.glyphMargin = this.glyphMargin;\n        options.lineDecorationsWidth = this.lineDecorationsWidth;\n        options.revealHorizontalRightPadding = this.revealHorizontalRightPadding;\n        options.roundedSelection = this.roundedSelection;\n        options.theme = this.theme;\n        options.readOnly = this.readOnly;\n        options.scrollbar = this.scrollbar;\n        options.overviewRulerLanes = this.overviewRulerLanes;\n        options.cursorBlinking = this.cursorBlinking;\n        options.mouseWheelZoom = this.mouseWheelZoom;\n        options.cursorStyle = this.cursorStyle;\n        options.mouseWheelZoom = this.mouseWheelZoom;\n        options.fontLigatures = this.fontLigatures;\n        options.disableTranslate3d = this.disableTranslate3d;\n        options.hideCursorInOverviewRuler = this.hideCursorInOverviewRuler;\n        options.scrollBeyondLastLine = this.scrollBeyondLastLine;\n        options.automaticLayout = this.automaticLayout;\n        options.wrappingColumn = this.wrappingColumn;\n        options.wordWrap = this.wordWrap;\n        options.wrappingIndent = this.wrappingIndent;\n        options.wordWrapBreakBeforeCharacters = this.wordWrapBreakBeforeCharacters;\n        options.wordWrapBreakAfterCharacters = this.wordWrapBreakAfterCharacters;\n        options.wordWrapBreakObtrusiveCharacters = this.wordWrapBreakObtrusiveCharacters;\n        options.stopRenderingLineAfter = this.stopRenderingLineAfter;\n        options.hover = this.hover;\n        options.contextmenu = this.contextmenu;\n        options.mouseWheelScrollSensitivity = this.mouseWheelScrollSensitivity;\n        options.quickSuggestions = this.quickSuggestions;\n        options.quickSuggestionsDelay = this.quickSuggestionsDelay;\n        options.parameterHints = this.parameterHints;\n        options.iconsInSuggestions = this.iconsInSuggestions;\n        options.autoClosingBrackets = this.autoClosingBrackets;\n        options.formatOnType = this.formatOnType;\n        options.suggestOnTriggerCharacters = this.suggestOnTriggerCharacters;\n        options.acceptSuggestionOnEnter = this.acceptSuggestionOnEnter;\n        options.snippetSuggestions = this.snippetSuggestions;\n        options.tabCompletion = this.tabCompletion;\n        options.wordBasedSuggestions = this.wordBasedSuggestions;\n        options.selectionHighlight = this.selectionHighlight;\n        options.codeLens = this.codeLens;\n        options.folding = this.folding;\n        options.renderWhitespace = this.renderWhitespace;\n        options.renderControlCharacters = this.renderControlCharacters;\n        options.renderIndentGuides = this.renderIndentGuides;\n        options.renderLineHighlight = this.renderLineHighlight;\n        options.useTabStops = this.useTabStops;\n        options.fontFamily = this.fontFamily;\n        options.fontWeight = this.fontWeight;\n        options.fontSize = this.fontSize;\n        options.lineHeight = this.lineHeight;\n        options.formatOnPaste = this.formatOnPaste;\n        options.value = this._value;\n        options.language = this._language;\n        Object.keys(options).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        function (key) { return ((/** @type {?} */ (options)))[key] === undefined && delete ((/** @type {?} */ (options)))[key]; })); // Remove all undefined properties\n        return options;\n    };\n    /**\n     * UpdateValue\n     *\n     * @param value\n     */\n    /**\n     * UpdateValue\n     *\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.updateValue = /**\n     * UpdateValue\n     *\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // this.value = value;\n        this._value = value;\n        this.valueChange.emit(value);\n        this.onChangeCallback(value);\n    };\n    /**\n     * UpdateValue\n     *\n     * @param value\n     */\n    /**\n     * UpdateValue\n     *\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.updateValueToCompare = /**\n     * UpdateValue\n     *\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // this.valueToCompare = value;\n        this._valueToCompare = value;\n        this.valueToCompareChange.emit(value);\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.getOriginalModel = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._editor) {\n            /** @type {?} */\n            var model = this._editor.getModel();\n            return model.original ? model.original : model;\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaMonacoEditorComponent.prototype.getModifiedModel = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._editor) {\n            /** @type {?} */\n            var model = this._editor.getModel();\n            return model.modified ? model.modified : null;\n        }\n    };\n    DejaMonacoEditorComponent.decorators = [\n        { type: Component, args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'deja-monaco-editor',\n                    template: \"<div #editor resize-listener (sizeChanged)=\\\"onResize()\\\" class='monaco-editor'></div>\",\n                    styles: [\"deja-monaco-editor{width:100%;display:flex;flex:1 1 auto}deja-monaco-editor .monaco-editor{flex:1 1 auto}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaMonacoEditorComponent.ctorParameters = function () { return [\n        { type: MonacoEditorService },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n    ]; };\n    DejaMonacoEditorComponent.propDecorators = {\n        experimentalScreenReader: [{ type: Input }],\n        ariaLabel: [{ type: Input }],\n        rulers: [{ type: Input }],\n        wordSeparators: [{ type: Input }],\n        selectionClipboard: [{ type: Input }],\n        lineNumbers: [{ type: Input }],\n        selectOnLineNumbers: [{ type: Input }],\n        lineNumbersMinChars: [{ type: Input }],\n        glyphMargin: [{ type: Input }],\n        lineDecorationsWidth: [{ type: Input }],\n        revealHorizontalRightPadding: [{ type: Input }],\n        roundedSelection: [{ type: Input }],\n        theme: [{ type: Input }],\n        readOnly: [{ type: Input }],\n        scrollbar: [{ type: Input }],\n        fixedOverflowWidgets: [{ type: Input }],\n        overviewRulerLanes: [{ type: Input }],\n        cursorBlinking: [{ type: Input }],\n        mouseWheelZoom: [{ type: Input }],\n        cursorStyle: [{ type: Input }],\n        fontLigatures: [{ type: Input }],\n        disableTranslate3d: [{ type: Input }],\n        disableMonospaceOptimizations: [{ type: Input }],\n        hideCursorInOverviewRuler: [{ type: Input }],\n        scrollBeyondLastLine: [{ type: Input }],\n        automaticLayout: [{ type: Input }],\n        wrappingColumn: [{ type: Input }],\n        wordWrap: [{ type: Input }],\n        wrappingIndent: [{ type: Input }],\n        wordWrapBreakBeforeCharacters: [{ type: Input }],\n        wordWrapBreakAfterCharacters: [{ type: Input }],\n        wordWrapBreakObtrusiveCharacters: [{ type: Input }],\n        stopRenderingLineAfter: [{ type: Input }],\n        hover: [{ type: Input }],\n        contextmenu: [{ type: Input }],\n        mouseWheelScrollSensitivity: [{ type: Input }],\n        quickSuggestions: [{ type: Input }],\n        quickSuggestionsDelay: [{ type: Input }],\n        parameterHints: [{ type: Input }],\n        iconsInSuggestions: [{ type: Input }],\n        autoClosingBrackets: [{ type: Input }],\n        formatOnType: [{ type: Input }],\n        formatOnPaste: [{ type: Input }],\n        suggestOnTriggerCharacters: [{ type: Input }],\n        acceptSuggestionOnEnter: [{ type: Input }],\n        acceptSuggestionOnCommitCharacter: [{ type: Input }],\n        snippetSuggestions: [{ type: Input }],\n        emptySelectionClipboard: [{ type: Input }],\n        tabCompletion: [{ type: Input }],\n        wordBasedSuggestions: [{ type: Input }],\n        suggestFontSize: [{ type: Input }],\n        suggestLineHeight: [{ type: Input }],\n        selectionHighlight: [{ type: Input }],\n        codeLens: [{ type: Input }],\n        folding: [{ type: Input }],\n        renderWhitespace: [{ type: Input }],\n        renderControlCharacters: [{ type: Input }],\n        renderIndentGuides: [{ type: Input }],\n        renderLineHighlight: [{ type: Input }],\n        useTabStops: [{ type: Input }],\n        fontFamily: [{ type: Input }],\n        fontWeight: [{ type: Input }],\n        fontSize: [{ type: Input }],\n        lineHeight: [{ type: Input }],\n        isDiffEditor: [{ type: Input }],\n        language: [{ type: Input }],\n        valueToCompare: [{ type: Input }],\n        value: [{ type: Input }],\n        valueChange: [{ type: Output }],\n        valueToCompareChange: [{ type: Output }],\n        onInit: [{ type: Output }],\n        editorContent: [{ type: ViewChild, args: ['editor',] }],\n        onResize: [{ type: HostListener, args: ['window:resize', [],] }]\n    };\n    return DejaMonacoEditorComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaMonacoEditorModule = /** @class */ (function () {\n    function DejaMonacoEditorModule() {\n    }\n    DejaMonacoEditorModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaMonacoEditorComponent],\n                    exports: [DejaMonacoEditorComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ResizeListenerModule\n                    ],\n                    providers: [MonacoEditorService],\n                },] }\n    ];\n    return DejaMonacoEditorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaMonacoEditorModule, EditorOptions, EditorScrollbarOptions, DejaMonacoEditorComponent, MonacoEditorService as ɵa };\n\n//# sourceMappingURL=deja-js-component-monaco-editor.js.map","module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">>\\n    <!--<mat-tab label=\\\"OVERVIEW\\\">-->\\n    <!--<mat-card class=\\\"demo-card demo-basic\\\">-->\\n    <!--TODO-->\\n    <!--</mat-card>-->\\n    <!--</mat-tab>-->\\n    <mat-tab label=\\\"API REFERENCE\\\"></mat-tab>\\n    <mat-tab label=\\\"EXAMPLES\\\"></mat-tab>\\n    <mat-tab label=\\\"AUTO RESIZE\\\"></mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n    <deja-markdown [url]=\\\"'https://raw.githubusercontent.com/DSI-HUG/dejajs-components/dev/src/component/monaco-editor/readme.md'\\\"></deja-markdown>\\n</mat-card>\\n\\n<div *ngIf=\\\"tabIndex === 1\\\">\\n      <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">\\n            Modification d'un fichier XML\\n            <span flex></span>\\n            <mat-checkbox [(ngModel)]=\\\"readOnly\\\">Read only</mat-checkbox>\\n        </mat-toolbar>\\n        <mat-card-content>\\n            <div class=\\\"viewer\\\">\\n                <deja-monaco-editor [(value)]=\\\"xmlContent\\\" language=\\\"xml\\\" [readOnly]=\\\"readOnly\\\" [folding]=\\\"true\\\" theme=\\\"vs\\\" (valueChange)=\\\"onValueChange()\\\"></deja-monaco-editor>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">Comparaison d'un fichier XML</mat-toolbar>\\n        <mat-card-content>\\n            <div class=\\\"viewer\\\">\\n                <deja-monaco-editor [(value)]=\\\"xmlContent\\\" [(valueToCompare)]=\\\"xmlContentToCompare\\\" [isDiffEditor]=\\\"true\\\" [folding]=\\\"true\\\" language=\\\"xml\\\" (valueToCompareChange)=\\\"onValueToCompareChange()\\\"></deja-monaco-editor>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">Modification d'un fichier JSON</mat-toolbar>\\n        <mat-card-content>\\n            <div class=\\\"viewer\\\">\\n                <deja-monaco-editor [(value)]=\\\"jsonContent\\\" [folding]=\\\"true\\\" language=\\\"json\\\"></deja-monaco-editor>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">Comparaison d'un fichier JSON</mat-toolbar>\\n        <mat-card-content>\\n            <div class=\\\"viewer\\\">\\n                <deja-monaco-editor [(value)]=\\\"jsonContent\\\" [valueToCompare]=\\\"jsonContentToCompare\\\" [isDiffEditor]=\\\"true\\\" [folding]=\\\"true\\\" language=\\\"json\\\"></deja-monaco-editor>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>  \\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 2\\\">\\n     <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">\\n            Resize auto\\n        </mat-toolbar>\\n        <mat-card-content style=\\\"height: 500px;\\\">\\n            <deja-splitter direction=\\\"vertical\\\">\\n                <split-area [size]=\\\"75\\\">\\n                    <deja-splitter direction=\\\"horizontal\\\">\\n                        <split-area [size]=\\\"75\\\">\\n                            <deja-monaco-editor style=\\\"height: 100%;\\\" [(value)]=\\\"xmlContent\\\" language=\\\"xml\\\" [readOnly]=\\\"readOnly\\\" [folding]=\\\"true\\\" theme=\\\"vs\\\" (valueChange)=\\\"onValueChange()\\\"></deja-monaco-editor>\\n                        </split-area>\\n                        <split-area>\\n                            <p>Sed ut perspiciatis unde omnis iste natus erro...</p>\\n                        </split-area>\\n                    </deja-splitter>\\n                </split-area>\\n                <split-area>\\n                    <p>Sed ut perspiciatis unde omnis iste natus erro...</p>\\n                </split-area>\\n            </deja-splitter>\\n        </mat-card-content>\\n    </mat-card> \\n\\n     <mat-card class=\\\"demo-card demo-basic\\\">\\n        <mat-toolbar color=\\\"primary\\\">\\n            Modification du text et du language\\n        </mat-toolbar>\\n        <mat-card-content>\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Language\\\" [ngModel]=\\\"dynamicLanguage\\\" (ngModelChange)=\\\"updateLanguage($event)\\\">\\n                    <mat-option value=\\\"xml\\\">XML</mat-option>\\n                    <mat-option value=\\\"json\\\">JSON</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <div class=\\\"viewer\\\">\\n                <deja-monaco-editor [(value)]=\\\"dynamicContent\\\" [folding]=\\\"true\\\" [language]=\\\"dynamicLanguage\\\"></deja-monaco-editor>\\n            </div>\\n        </mat-card-content>\\n    </mat-card> \\n</div>\"","module.exports = \":host .viewer {\\n  height: 500px;\\n  display: flex;\\n  flex: 1 1 100%; }\\n  :host .viewer deja-monaco-editor {\\n    display: flex;\\n    flex: 1 1 100%; }\\n  :host span[flex] {\\n  flex: 1 1 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9EU0ktSFVHL2RlamFqcy1jb21wb25lbnRzL3NyYy9hcHAvbW9uYWNvLWVkaXRvci9tb25hY28tZWRpdG9yLWRlbW8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxhQUFhO0VBQ2IsYUFBYTtFQUNiLGNBQWMsRUFBQTtFQUp0QjtJQU9ZLGFBQWE7SUFDYixjQUFjLEVBQUE7RUFSMUI7RUFhWSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb25hY28tZWRpdG9yL21vbmFjby1lZGl0b3ItZGVtby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICAudmlld2VyIHtcbiAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleDogMSAxIDEwMCU7XG5cbiAgICAgICAgZGVqYS1tb25hY28tZWRpdG9yIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4OiAxIDEgMTAwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNwYW5bZmxleF0ge1xuICAgICAgICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgfVxufSJdfQ== */\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { MonacoEditorDemoService } from './monaco-editor-demo.service';\n\n@Component({\n    providers: [MonacoEditorDemoService],\n    selector: 'deja-monaco-editor-demo',\n    templateUrl: './monaco-editor-demo.component.html',\n    styleUrls: ['./monaco-editor-demo.component.scss'],\n})\nexport class DejaMonacoEditorDemoComponent implements OnInit {\n    public tabIndex = 1;\n\n    public xmlContent: string;\n    public xmlContentToCompare: string;\n    public jsonContent: string;\n    public jsonContentToCompare: string;\n\n    public dynamicContent: string;\n    public dynamicLanguage: string;\n\n    constructor(\n        private fileService: MonacoEditorDemoService\n    ) { }\n\n    public ngOnInit() {\n        this.fileService.getFile$('xmlFile.xml').subscribe((val) => this.xmlContent = val);\n        this.fileService.getFile$('xmlFileToCompare.xml').subscribe((val) => this.xmlContentToCompare = val);\n        this.fileService.getFile$('jsonFile.json').subscribe((val) => this.jsonContent = val);\n        this.fileService.getFile$('jsonFileToCompare.json').subscribe((val) => this.jsonContentToCompare = val);\n\n        this.updateLanguage('xml');\n    }\n\n    public onValueChange() {\n        // console.log('Value changed');\n    }\n\n    public onValueToCompareChange() {\n        // console.log('ValueToCompare changed');\n    }\n\n    public updateLanguage(lang: string) {\n        switch (lang) {\n            case 'json':\n                this.dynamicLanguage = lang;\n                this.dynamicContent = this.jsonContent;\n                break;\n            default:\n                this.dynamicLanguage = 'xml';\n                this.dynamicContent = this.xmlContent;\n                break;\n        }\n    }\n}\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DejaMonacoEditorModule } from '@deja-js/component/monaco-editor';\nimport { DejaSplitterModule } from '@deja-js/component/splitter';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { DejaMonacoEditorDemoComponent } from './monaco-editor-demo.component';\nimport { MonacoEditorDemoService } from './monaco-editor-demo.service';\n\nconst routes: Routes = [\n    { path: '', component: DejaMonacoEditorDemoComponent },\n];\n\n@NgModule({\n    imports: [\n        DejaMonacoEditorModule,\n        CommonModule,\n        FormsModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatTabsModule,\n        MatToolbarModule,\n        DejaSplitterModule,\n        DejaMarkdownModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [DejaMonacoEditorDemoComponent],\n    providers: [\n        MonacoEditorDemoService\n    ],\n})\nexport class MonacoEditorDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class MonacoEditorDemoService {\n\n    constructor(protected httpClient: HttpClient) {\n\n    }\n\n    public getFile$(filename: string): Observable<string> {\n        return this.httpClient.get(`assets/datas/monaco/${filename}`, { observe: 'body', responseType: 'text' }).pipe(\n            map((response) => response));\n    }\n}\n"],"sourceRoot":""}