{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-color-selector.js"],"names":[],"mappings":"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A,2BAA2B,yBAAyB,EAAE;AACtD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC,uBAAuB,EAAE;AACzB,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,sDAAS,wBAAwB,gEAAS;AAClD,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE,IAAI,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,yBAAyB,EAAE;AACtD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC;AACA,8BAA8B,mDAAK;AACnC;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,4BAA4B,mDAAK;AACjC;AACA,uBAAuB,EAAE;AACzB,8DAA8D,mDAAK;AACnE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,qCAAqC,qCAAqC,EAAE;AAC5E;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,qCAAqC,qCAAqC,EAAE;AAC5E;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,mDAAK;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC,gDAAgD,EAAE;AAClD,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,yCAAyC,QAAQ,mDAAK,yBAAyB,EAAE;AACjF;AACA;AACA,wBAAwB,kDAAK,SAAS,4DAAK;AAC3C,oCAAoC;AACpC;AACA,qCAAqC,+CAA+C,EAAE;AACtF;AACA;AACA;AACA,6BAA6B,mDAAK;AAClC;AACA,wBAAwB,kDAAK,SAAS,4DAAK;AAC3C,oCAAoC;AACpC;AACA,qCAAqC,wCAAwC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oBAAoB,kDAAK,SAAS,4DAAK;AACvC,gCAAgC;AAChC;AACA,iCAAiC,wCAAwC,EAAE;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iBAAiB,mDAAK;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6JAA6J,iNAAiN;AAC9W,oCAAoC,aAAa,sBAAsB,sBAAsB,aAAa,mBAAmB,mBAAmB,uBAAuB,eAAe,kBAAkB,qCAAqC,WAAW,gDAAgD,UAAU,uDAAuD,UAAU,6BAA6B,qBAAqB,aAAa,gBAAgB,eAAe,kBAAkB;AACne,iBAAiB;AACjB;AACA;AACA,6DAA6D;AAC7D,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAC1E,MAAM;AACN;AACA,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAa;AACrC,wBAAwB,iEAAe;AACvC;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEoG;;AAEpG,4D","file":"default~circular-picker-circular-picker-demo-module~color-selector-color-selector-demo-module~conten~eec3f76e.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatIconModule } from '@angular/material';\nimport { __read, __spread } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ElementRef, Input, EventEmitter, Optional, Output, Self, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { Color } from '@deja-js/core';\nimport { BehaviorSubject, combineLatest, from, fromEvent, merge, Subject, timer } from 'rxjs';\nimport { map, debounce, debounceTime, distinctUntilChanged, filter, first, takeWhile, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaColorFab = /** @class */ (function () {\n    function DejaColorFab(_color, _disabled, _active) {\n        if (_disabled === void 0) { _disabled = false; }\n        if (_active === void 0) { _active = false; }\n        this._color = _color;\n        this._disabled = _disabled;\n        this._active = _active;\n        this.color$ = new BehaviorSubject(_color);\n        this.disabled$ = new BehaviorSubject(_disabled);\n        this.active$ = new BehaviorSubject(_active);\n    }\n    Object.defineProperty(DejaColorFab.prototype, \"color\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._color;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.color$.next(this._color = value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorFab.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.disabled$.next(this._disabled = value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorFab.prototype, \"active\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._active;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.active$.next(this._active = value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DejaColorFab;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaColorFabComponent = /** @class */ (function () {\n    function DejaColorFabComponent(el) {\n        this.subscriptions = (/** @type {?} */ ([]));\n        this.element = (/** @type {?} */ (el.nativeElement));\n    }\n    Object.defineProperty(DejaColorFabComponent.prototype, \"color\", {\n        set: /**\n         * @param {?} colorFab\n         * @return {?}\n         */\n        function (colorFab) {\n            var _this = this;\n            this._colorFab = colorFab;\n            if (colorFab) {\n                /** @type {?} */\n                var toogleAttribute_1 = (/**\n                 * @param {?} attribute\n                 * @param {?} value\n                 * @return {?}\n                 */\n                function (attribute, value) {\n                    if (value) {\n                        _this.element.setAttribute(attribute, value.toString());\n                    }\n                    else {\n                        _this.element.removeAttribute(attribute);\n                    }\n                });\n                this.subscriptions.push(from(colorFab.active$)\n                    .subscribe((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                function (value) { return toogleAttribute_1('active', value); })));\n                this.subscriptions.push(combineLatest(colorFab.color$, colorFab.disabled$).pipe(map((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                function (_a) {\n                    var _b = __read(_a, 2), color = _b[0], disabled = _b[1];\n                    return color && disabled ? color.grayScale : color;\n                })))\n                    .subscribe((/**\n                 * @param {?} color\n                 * @return {?}\n                 */\n                function (color) { return _this.element.style.backgroundColor = color ? color.toHex() : ''; })));\n            }\n            else {\n                this.subscriptions.forEach((/**\n                 * @param {?} subscription\n                 * @return {?}\n                 */\n                function (subscription) { return subscription.unsubscribe(); }));\n                this.subscriptions = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorFabComponent.prototype, \"tile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._colorFab;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaColorFabComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        function (subscription) { return subscription.unsubscribe(); }));\n    };\n    DejaColorFabComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'deja-color-fab',\n                    template: '<ng-content></ng-content>',\n                    styles: [\":host{border-radius:50%;cursor:pointer;transition:.2s linear;width:2.5rem;height:2.5rem;display:flex;align-items:center;justify-content:space-around;margin:.45rem}:host[small]{width:1.65rem;height:1.65rem;margin:.3rem}:host[active]{-webkit-transform:scale(1.4,1.4);transform:scale(1.4,1.4);transition:transform .2s linear!important;transition:transform .2s linear,-webkit-transform .2s linear!important}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaColorFabComponent.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DejaColorFabComponent.propDecorators = {\n        color: [{ type: Input }]\n    };\n    return DejaColorFabComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\n/**\n * Composant de selection d'une couleur.\n */\nvar DejaColorSelectorComponent = /** @class */ (function () {\n    function DejaColorSelectorComponent(elementRef, _control) {\n        var _this = this;\n        this._control = _control;\n        /**\n         * Evénement déclenché lorsqu'une couleur est survolée par la souris.\n         */\n        this.colorhover = new EventEmitter();\n        // ngModel\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this._colors$ = new BehaviorSubject([]);\n        this._resetcolor$ = new BehaviorSubject(null);\n        this._colorFabs = (/** @type {?} */ ([]));\n        this._subColorFabs = (/** @type {?} */ ([]));\n        this._selectedBaseIndex = 0;\n        this._disabled = false;\n        this.selectedBaseIndex$ = new BehaviorSubject(0);\n        this.selectedSubIndex$ = new BehaviorSubject(0);\n        this.hilightedBaseIndex$ = new Subject();\n        this.hilightedSubIndex$ = new Subject();\n        this.isAlive = true;\n        /** @type {?} */\n        var element = (/** @type {?} */ (elementRef.nativeElement));\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n        this._colorFabs$ = from(this._colors$).pipe(map((/**\n         * @param {?} colors\n         * @return {?}\n         */\n        function (colors) { return colors.map((/**\n         * @param {?} color\n         * @param {?} index\n         * @return {?}\n         */\n        function (color, index) { return new DejaColorFab(color, _this._disabled, index === _this._selectedBaseIndex); })); })), tap((/**\n         * @param {?} colorFabs\n         * @return {?}\n         */\n        function (colorFabs) { return _this._colorFabs = colorFabs; })));\n        combineLatest(this._colors$, this._resetcolor$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 2), colors = _b[0], resetcolor = _b[1];\n            if (!colors || !colors.length || !resetcolor) {\n                _this._resetcolor = undefined;\n                return;\n            }\n            /** @type {?} */\n            var allColors = colors.reduce((/**\n             * @param {?} acc\n             * @param {?} color\n             * @return {?}\n             */\n            function (acc, color) {\n                /** @type {?} */\n                var materialColor = (/** @type {?} */ (color));\n                if (materialColor.subColors) {\n                    acc = __spread(acc, materialColor.subColors);\n                }\n                else {\n                    acc.push(color);\n                }\n                return acc;\n            }), []);\n            /** @type {?} */\n            var bestColor;\n            allColors.reduce((/**\n             * @param {?} bestDiff\n             * @param {?} color\n             * @return {?}\n             */\n            function (bestDiff, color) {\n                // The best formula we found for our eye\n                /** @type {?} */\n                var diff = 0.3 * Math.abs(color.r - resetcolor.r) + 0.4 * Math.abs(color.g - resetcolor.g) + 0.25 * Math.abs(color.b - resetcolor.b);\n                if (diff < bestDiff) {\n                    bestColor = color;\n                    return bestDiff = diff;\n                }\n                return bestDiff;\n            }), 3 * 255);\n            _this._resetcolor = bestColor;\n        }));\n        /** @type {?} */\n        var hilightedBaseIndex$ = from(this.hilightedBaseIndex$).pipe(distinctUntilChanged(), debounce((/**\n         * @param {?} colorIndex\n         * @return {?}\n         */\n        function (colorIndex) { return timer(colorIndex !== undefined ? 100 : 1000); })), tap((/**\n         * @param {?} colorIndex\n         * @return {?}\n         */\n        function (colorIndex) {\n            _this.hilightedBaseIndex = colorIndex;\n            /** @type {?} */\n            var event = (/** @type {?} */ (new CustomEvent('ColorEvent', {})));\n            event.color = colorIndex ? _this._colorFabs && _this._colorFabs[colorIndex] && _this._colorFabs[colorIndex].color : _this.value;\n            _this.colorhover.emit(event);\n        })), map((/**\n         * @param {?} colorIndex\n         * @return {?}\n         */\n        function (colorIndex) { return colorIndex !== undefined ? colorIndex : _this._selectedBaseIndex || 0; })));\n        /** @type {?} */\n        var selectedBaseIndex$ = from(this.selectedBaseIndex$).pipe(tap((/**\n         * @param {?} colorIndex\n         * @return {?}\n         */\n        function (colorIndex) { return _this._selectedBaseIndex = colorIndex; })));\n        this._subColorFabs$ = merge(hilightedBaseIndex$, selectedBaseIndex$).pipe(distinctUntilChanged(), tap((/**\n         * @param {?} colorIndex\n         * @return {?}\n         */\n        function (colorIndex) {\n            if (_this._colorFabs) {\n                _this._colorFabs.forEach((/**\n                 * @param {?} colorFab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (colorFab, index) { return colorFab.active = index === colorIndex; }));\n            }\n        })), debounceTime(100), tap((/**\n         * @return {?}\n         */\n        function () { return element.setAttribute('sub-tr', ''); })), map((/**\n         * @param {?} baseIndex\n         * @return {?}\n         */\n        function (baseIndex) { return _this._colorFabs && _this._colorFabs[baseIndex] && ((/** @type {?} */ (_this._colorFabs[baseIndex].color))).subColors; })), map((/**\n         * @param {?} colors\n         * @return {?}\n         */\n        function (colors) { return colors && colors.map((/**\n         * @param {?} color\n         * @param {?} index\n         * @return {?}\n         */\n        function (color, index) { return new DejaColorFab(color, _this._disabled, index === _this._selectedSubIndex); })); })), tap((/**\n         * @param {?} subColorFabs\n         * @return {?}\n         */\n        function (subColorFabs) {\n            _this._subColorFabs = subColorFabs;\n            timer(100).pipe(first()).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                element.removeAttribute('sub-tr');\n            }));\n        })));\n        /** @type {?} */\n        var hilightedSubIndex$ = from(this.hilightedSubIndex$).pipe(distinctUntilChanged(), debounce((/**\n         * @param {?} subColorIndex\n         * @return {?}\n         */\n        function (subColorIndex) { return timer(subColorIndex !== undefined ? 200 : 1100); })), tap((/**\n         * @param {?} subColorIndex\n         * @return {?}\n         */\n        function (subColorIndex) {\n            _this.hilightedSubIndex = subColorIndex;\n            /** @type {?} */\n            var event = (/** @type {?} */ (new CustomEvent('ColorEvent', {})));\n            event.color = subColorIndex !== undefined ? _this._subColorFabs && _this._subColorFabs[subColorIndex] && _this._subColorFabs[subColorIndex].color : _this.value;\n            _this.colorhover.emit(event);\n        })), map((/**\n         * @param {?} subColorIndex\n         * @return {?}\n         */\n        function (subColorIndex) { return subColorIndex !== undefined ? subColorIndex : _this._selectedSubIndex || 0; })));\n        /** @type {?} */\n        var selectedSubIndex$ = from(this.selectedSubIndex$).pipe(distinctUntilChanged(), tap((/**\n         * @param {?} subColorIndex\n         * @return {?}\n         */\n        function (subColorIndex) { return _this._selectedSubIndex = subColorIndex; })));\n        merge(hilightedSubIndex$, selectedSubIndex$).pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} subColorIndex\n         * @return {?}\n         */\n        function (subColorIndex) {\n            if (_this._subColorFabs) {\n                _this._subColorFabs.forEach((/**\n                 * @param {?} colorFab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (colorFab, index) { return colorFab.active = index === subColorIndex; }));\n            }\n        }));\n        fromEvent(element, 'mousemove').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), filter((/**\n         * @param {?} _event\n         * @return {?}\n         */\n        function (_event) { return !_this._disabled; })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            /** @type {?} */\n            var target = (/** @type {?} */ (event.target));\n            /** @type {?} */\n            var targetIndex = ((/** @type {?} */ (target.attributes)))[DejaColorSelectorComponent.indexAttribute];\n            if (target.hasAttribute('basecolor')) {\n                _this.hilightedBaseIndex$.next(+targetIndex.value);\n                _this.hilightedSubIndex$.next(_this.hilightedSubIndex);\n            }\n            else if (target.hasAttribute('subcolor')) {\n                _this.hilightedBaseIndex$.next(_this.hilightedBaseIndex);\n                _this.hilightedSubIndex$.next(+targetIndex.value);\n            }\n            else {\n                _this.hilightedBaseIndex$.next();\n                _this.hilightedSubIndex$.next();\n            }\n        }));\n        fromEvent(element, 'click').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })), filter((/**\n         * @param {?} _event\n         * @return {?}\n         */\n        function (_event) { return !_this._disabled; })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            /** @type {?} */\n            var target = (/** @type {?} */ (event.target));\n            if (target.hasAttribute('basecolor') || target.hasAttribute('subcolor')) {\n                _this.value = Color.parse(target.style.backgroundColor);\n            }\n        }));\n    }\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"subColorFabs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._subColorFabs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"subColorFabs$\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._subColorFabs$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"colorFabs$\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._colorFabs$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"resetcolor\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value === '') {\n                value = new Color();\n            }\n            /** @type {?} */\n            var color = value && (typeof value === 'string' ? Color.parse(value) : value);\n            this._resetcolor$.next(color || null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._disabled;\n        },\n        /** Retourne ou definit si le selecteur est desactivé. */\n        set: /**\n         * Retourne ou definit si le selecteur est desactivé.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var disabled = coerceBooleanProperty(value);\n            if (this._colorFabs) {\n                this._colorFabs.forEach((/**\n                 * @param {?} colorFab\n                 * @return {?}\n                 */\n                function (colorFab) { return colorFab.disabled = disabled; }));\n            }\n            if (this._subColorFabs) {\n                this._subColorFabs.forEach((/**\n                 * @param {?} colorFab\n                 * @return {?}\n                 */\n                function (colorFab) { return colorFab.disabled = disabled; }));\n            }\n            this._disabled = disabled || null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retourne la meilleure couleur d'affichage pour une couleur donnée\n     */\n    /**\n     * Retourne la meilleure couleur d'affichage pour une couleur donnée\n     * @param {?} value\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.getBestTextColor = /**\n     * Retourne la meilleure couleur d'affichage pour une couleur donnée\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var backColor = Color.fromHex(value);\n        return backColor.bestTextColor.toHex();\n    };\n    /**\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.resetDefaultColor = /**\n     * @return {?}\n     */\n    function () {\n        this.value = this._resetcolor;\n    };\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"colors\", {\n        /**\n         * Definit les couleurs selectionables affichées.\n         *\n         * @param colors Structure hierarchique des couleurs selectionablea suivant le modele MaterialColor.\n         */\n        set: /**\n         * Definit les couleurs selectionables affichées.\n         *\n         * @param {?} colors Structure hierarchique des couleurs selectionablea suivant le modele MaterialColor.\n         * @return {?}\n         */\n        function (colors) {\n            this._colors$.next(colors || []);\n            this.selectedBaseIndex$.next(0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"selectedColor\", {\n        set: /**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) {\n            var _this = this;\n            if (this._colorFabs) {\n                /** @type {?} */\n                var find = this._colorFabs.find((/**\n                 * @param {?} colorFab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (colorFab, index) {\n                    /** @type {?} */\n                    var baseColor = (/** @type {?} */ (colorFab.color));\n                    /** @type {?} */\n                    var subIndex = baseColor.subColors && baseColor.subColors.findIndex((/**\n                     * @param {?} subColor\n                     * @return {?}\n                     */\n                    function (subColor) { return Color.equals(subColor, color); }));\n                    if (subIndex !== undefined && subIndex >= 0) {\n                        _this.selectedBaseIndex$.next(index);\n                        timer(1).pipe(first()).subscribe((/**\n                         * @return {?}\n                         */\n                        function () { return _this.selectedSubIndex$.next(subIndex); }));\n                        // Break\n                        return true;\n                    }\n                    else if (Color.equals(baseColor, color)) {\n                        _this.selectedBaseIndex$.next(index);\n                        timer(1).pipe(first()).subscribe((/**\n                         * @return {?}\n                         */\n                        function () { return _this.selectedSubIndex$.next(0); }));\n                        // Break\n                        return true;\n                    }\n                    // Continue\n                    return false;\n                }));\n                if (!find) {\n                    this.selectedBaseIndex$.next(0);\n                    timer(1).pipe(first()).subscribe((/**\n                     * @return {?}\n                     */\n                    function () { return _this.selectedSubIndex$.next(0); }));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaColorSelectorComponent.prototype, \"value\", {\n        // get accessor\n        get: \n        // get accessor\n        /**\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        set: \n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!Color.equals(value, this._value)) {\n                this.writeValue(value);\n                this.onChangeCallback(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.writeValue = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._value = value;\n        this.selectedColor = value;\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.registerOnChange = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.registerOnTouched = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    // ************* End of ControlValueAccessor Implementation **************\n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    DejaColorSelectorComponent.prototype.ngOnDestroy = \n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    DejaColorSelectorComponent.indexAttribute = 'index';\n    DejaColorSelectorComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'deja-color-selector',\n                    template: \"<div class=\\\"colors-wrapper\\\" id=\\\"basecolors\\\">\\n\\t<deja-color-fab basecolor small *ngFor=\\\"let clrfab of colorFabs$ | async; let index=index\\\" [attr.index]=\\\"index\\\" [color]=\\\"clrfab\\\"></deja-color-fab>\\n</div>\\n<div class=\\\"colors-wrapper\\\" id=\\\"subcolors\\\">\\n\\t<deja-color-fab subcolor *ngFor=\\\"let clrfab of subColorFabs$ | async; let index=index\\\" [attr.index]=\\\"index\\\" [style.transition-duration]=\\\"(100*index)+'ms'\\\" [color]=\\\"clrfab\\\"></deja-color-fab>\\n</div>\\n<div id=\\\"reset\\\" *ngIf=\\\"!!_resetcolor\\\" (click)=\\\"resetDefaultColor()\\\" [style.background-color]=\\\"_resetcolor.toHex()\\\">\\n\\t<mat-icon [style.color]=\\\"getBestTextColor(_resetcolor.toHex())\\\">undo</mat-icon>\\n</div>\",\n                    styles: [\":host{display:flex;flex-direction:column}:host .colors-wrapper{display:flex;flex-direction:row;align-items:center;justify-content:center;flex-wrap:wrap;margin:1rem .5rem}:host .colors-wrapper deja-color-fab{float:left}:host .colors-wrapper #subcolors deja-color-fab{opacity:1}:host[sub-tr] #subcolors.colors-wrapper deja-color-fab{opacity:0;-webkit-transform:scale(0,0);transform:scale(0,0)}:host #reset{padding:.5rem 0;cursor:pointer;text-align:center}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaColorSelectorComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n    ]; };\n    DejaColorSelectorComponent.propDecorators = {\n        colorhover: [{ type: Output }],\n        resetcolor: [{ type: Input }],\n        disabled: [{ type: Input }],\n        colors: [{ type: Input }]\n    };\n    return DejaColorSelectorComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaColorSelectorModule = /** @class */ (function () {\n    function DejaColorSelectorModule() {\n    }\n    DejaColorSelectorModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaColorSelectorComponent, DejaColorFabComponent],\n                    exports: [DejaColorSelectorComponent, DejaColorFabComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        MatIconModule,\n                        MatButtonModule\n                    ],\n                },] }\n    ];\n    return DejaColorSelectorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaColorSelectorModule, DejaColorFab, DejaColorFabComponent, DejaColorSelectorComponent };\n\n//# sourceMappingURL=deja-js-component-color-selector.js.map"],"sourceRoot":""}