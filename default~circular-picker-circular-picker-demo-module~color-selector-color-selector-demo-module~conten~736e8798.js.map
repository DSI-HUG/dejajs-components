{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-overlay.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACe;AACgD;AACyD;AACjF;AACzD;AACqB;;AAElD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,0BAA0B,wEAA0B;AACpD;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,EAAE;AAC7C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,gEAAS;AAC7C,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,mFAAqB;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,+CAA+C,EAAE;AACjD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,mFAAqB;AACrD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wEAA0B;AACjD;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0DAA0D,wEAA0B;AACpF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mEAAmE,wEAA0B;AAC7F,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,EAAE;AAC9B,mBAAmB,EAAE;AACrB;AACA,iCAAiC,qEAAgB,KAAK,wDAAU;AAChE;AACA;AACA,QAAQ,kDAAK,SAAS,4DAAK;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,qEAAgB,KAAK,wDAAU;AAChE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD;AACA;AACA,2CAA2C,wBAAwB,cAAc;AACjF,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,qEAAgB,EAAE;AAClC,SAAS,OAAO,0DAAY;AAC5B,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,uDAAS,SAAS,wEAAmB,IAAI;AACnE,qBAAqB,OAAO,mDAAK,EAAE;AACnC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,kEAAa;AACrC,wBAAwB,yDAAW;AACnC;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmD;;AAEnD,qD","file":"default~circular-picker-circular-picker-demo-module~color-selector-color-selector-demo-module~conten~736e8798.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { DejaConnectionPositionPair, MediaService, MediaModule } from '@deja-js/core';\nimport { timer } from 'rxjs';\nimport { first, takeWhile } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// providers: [ MediaService ],\nvar DejaOverlayComponent = /** @class */ (function () {\n    function DejaOverlayComponent(changeDetectorRef, elementRef, overlayContainer, mediaService) {\n        var _this = this;\n        this.changeDetectorRef = changeDetectorRef;\n        this.elementRef = elementRef;\n        this.overlayContainer = overlayContainer;\n        /**\n         * Renvoie une valeur qui indique si le dialog est affiché.\n         */\n        this._isVisible = false;\n        this.overlayBackdropClass = 'cdk-overlay-transparent-backdrop';\n        this._hasBackdrop = true;\n        this._width = null;\n        this._widthForMobile = '100%';\n        /**\n         * Déclenché lorsque la visibilité du dialog change.\n         */\n        this.visibleChange = new EventEmitter();\n        /**\n         * Déclenché lorsque l'overlay est fermé.\n         */\n        this.closed = new EventEmitter();\n        this.overlayOffsetX = 0;\n        this.overlayOffsetY = 0;\n        this._positions = DejaConnectionPositionPair.default;\n        this._isMobile = false;\n        this.isAlive = true;\n        /** @type {?} */\n        var containerElement = (/** @type {?} */ (this.overlayContainer.getContainerElement()));\n        containerElement.classList.add('deja-overlay-container');\n        containerElement.addEventListener('contextmenu', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            event.preventDefault();\n            return false;\n        }));\n        mediaService.isMobile$.pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _this.isMobile = value;\n            _this.changeDetectorRef.markForCheck();\n        }));\n    }\n    Object.defineProperty(DejaOverlayComponent.prototype, \"isVisible\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isVisible;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var isVisible = coerceBooleanProperty(value);\n            if (this._isVisible !== isVisible) {\n                this._isVisible = isVisible;\n                this.changeDetectorRef.markForCheck();\n                this.visibleChange.emit(this.isVisible);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"overlayContainerClass\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var containerElement = (/** @type {?} */ (this.overlayContainer.getContainerElement()));\n            containerElement.classList.add(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"hasBackdrop\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._hasBackdrop;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hasBackdrop = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"ownerElement\", {\n        /** Renvoie ou définit l'élement sur lequel le menu devra s'aligner */\n        set: /**\n         * Renvoie ou définit l'élement sur lequel le menu devra s'aligner\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._ownerElement = value;\n            this.updateOriginOverlay();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"positions\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.isMobile) {\n                return this._positions;\n            }\n            else if (this._positionsForMobile) {\n                return this._positionsForMobile;\n            }\n            else {\n                return DejaConnectionPositionPair.parse('start top start top');\n            }\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._positions = typeof value === 'string' ? DejaConnectionPositionPair.parse(value) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"positionsForMobile\", {\n        /** Si pas null, sera utilisé quand isMobile est vrai. Si null et si isMobile est vrai,\n         *  alors c'est la valeur 'start top start top' qui est utilisée.\n         * */\n        set: /**\n         * Si pas null, sera utilisé quand isMobile est vrai. Si null et si isMobile est vrai,\n         *  alors c'est la valeur 'start top start top' qui est utilisée.\n         *\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._positionsForMobile = typeof value === 'string' ? DejaConnectionPositionPair.parse(value) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"isMobile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isMobile;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._isMobile = coerceBooleanProperty(value);\n            this.updateOriginOverlay();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"width\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._width;\n        },\n        set: /**\n         * @param {?} width\n         * @return {?}\n         */\n        function (width) {\n            this._width = width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"widthForMobile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._widthForMobile;\n        },\n        set: /**\n         * @param {?} widthForMobile\n         * @return {?}\n         */\n        function (widthForMobile) {\n            this._widthForMobile = widthForMobile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaOverlayComponent.prototype, \"overlayWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.isMobile) {\n                return this._width;\n            }\n            else {\n                return this._widthForMobile;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DejaOverlayComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    /**\n     * @return {?}\n     */\n    DejaOverlayComponent.prototype.updatePosition = /**\n     * @return {?}\n     */\n    function () {\n        if (this.overlay && this.overlay.overlayRef) {\n            this.overlay.overlayRef.updatePosition();\n        }\n    };\n    /** Affiche le dialog. */\n    /**\n     * Affiche le dialog.\n     * @param {?} eventOrOffsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    DejaOverlayComponent.prototype.show = /**\n     * Affiche le dialog.\n     * @param {?} eventOrOffsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    function (eventOrOffsetX, offsetY) {\n        var _this = this;\n        this.overlayOffsetX = offsetY !== undefined ? +eventOrOffsetX : 0;\n        this.overlayOffsetY = offsetY || 0;\n        /** @type {?} */\n        var e = (/** @type {?} */ (eventOrOffsetX));\n        /** @type {?} */\n        var target = e && e.target;\n        this.overlayOrigin = new CdkOverlayOrigin(new ElementRef((this.isMobile && document.body) || target || this.ownerElement || this.elementRef.nativeElement));\n        this.isVisible = true;\n        this.changeDetectorRef.markForCheck();\n        timer(1).pipe(first())\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.updatePosition();\n        }));\n    };\n    /** Ferme le dialog. */\n    /**\n     * Ferme le dialog.\n     * @return {?}\n     */\n    DejaOverlayComponent.prototype.close = /**\n     * Ferme le dialog.\n     * @return {?}\n     */\n    function () {\n        this.isVisible = false;\n        this.closed.emit(true);\n        this.changeDetectorRef.markForCheck();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaOverlayComponent.prototype.updateOriginOverlay = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.overlayOrigin = new CdkOverlayOrigin(new ElementRef((this.isMobile && document.body) || this._ownerElement || this.elementRef.nativeElement));\n    };\n    DejaOverlayComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'deja-overlay',\n                    template: \"<ng-template #overlayCmp cdk-connected-overlay [cdkConnectedOverlayHasBackdrop]=\\\"hasBackdrop || null\\\" [cdkConnectedOverlayBackdropClass]=\\\"overlayBackdropClass\\\" [cdkConnectedOverlayOpen]=\\\"isVisible\\\" [cdkConnectedOverlayOffsetY]=\\\"overlayOffsetY\\\" [cdkConnectedOverlayOffsetX]=\\\"overlayOffsetX\\\" [cdkConnectedOverlayOrigin]=\\\"overlayOrigin\\\" (backdropClick)=\\\"close()\\\" (detach)=\\\"close()\\\" [cdkConnectedOverlayPositions]=\\\"positions\\\" [cdkConnectedOverlayWidth]=\\\"overlayWidth\\\">\\n    <ng-content></ng-content>\\n</ng-template>\\n\",\n                    styles: [\"@media print{.deja-overlay-container{display:none}}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaOverlayComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: OverlayContainer },\n        { type: MediaService }\n    ]; };\n    DejaOverlayComponent.propDecorators = {\n        isVisible: [{ type: Input }],\n        overlayBackdropClass: [{ type: Input }],\n        overlayContainerClass: [{ type: Input }],\n        hasBackdrop: [{ type: Input }],\n        ownerElement: [{ type: Input }],\n        visibleChange: [{ type: Output }],\n        closed: [{ type: Output }],\n        overlayOffsetX: [{ type: Input }],\n        overlayOffsetY: [{ type: Input }],\n        overlay: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n        positions: [{ type: Input }],\n        positionsForMobile: [{ type: Input }],\n        isMobile: [{ type: Input }],\n        width: [{ type: Input }],\n        widthForMobile: [{ type: Input }]\n    };\n    return DejaOverlayComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaOverlayModule = /** @class */ (function () {\n    function DejaOverlayModule() {\n    }\n    DejaOverlayModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaOverlayComponent],\n                    exports: [DejaOverlayComponent],\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MediaModule,\n                    ],\n                },] }\n    ];\n    return DejaOverlayModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaOverlayModule, DejaOverlayComponent };\n\n//# sourceMappingURL=deja-js-component-overlay.js.map"],"sourceRoot":""}