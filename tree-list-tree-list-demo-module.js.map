{"version":3,"sources":["webpack:///./src/app/tree-list/tree-list-demo.html","webpack:///./src/app/tree-list/tree-list-demo.module.ts","webpack:///./src/app/tree-list/tree-list-demo.routes.ts","webpack:///./src/app/tree-list/tree-list-demo.scss","webpack:///./src/app/tree-list/tree-list-demo.ts"],"names":[],"mappings":"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","file":"tree-list-tree-list-demo-module.js","sourcesContent":["module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">\\n\\t<!--<mat-tab label=\\\"OVERVIEW\\\">-->\\n\\t<!--<mat-card class=\\\"demo-card demo-basic\\\">-->\\n\\t<!--TODO-->\\n\\t<!--</mat-card>-->\\n\\t<!--</mat-tab>-->\\n\\t<mat-tab label=\\\"API REFERENCE\\\"></mat-tab>\\n\\t<mat-tab label=\\\"SIMPLE EXAMPLES\\\"></mat-tab>\\n\\t<mat-tab label=\\\"ADVANCED EXAMPLES\\\"></mat-tab>\\n\\t<mat-tab label=\\\"TEMPLATING\\\"></mat-tab>\\n\\t<mat-tab label=\\\"PRE-SELECTIONS\\\"></mat-tab>\\n\\t<mat-tab label=\\\"PRE-EVENTS AND ON_DEMAND\\\"></mat-tab>\\n\\t<mat-tab label=\\\"PERFORMANCES\\\"></mat-tab>\\n</mat-tab-group>\\n\\n<deja-dialog *ngIf=\\\"dialogVisible\\\">\\n\\t<deja-message-box type=\\\"primary\\\" title=\\\"Confirm\\\">\\n\\t\\tPlease confirm your operation!\\n\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t<button id=\\\"cancelbtn\\\" mat-raised-button (click)=\\\"dialogResponse$.next('cancel')\\\">Cancel</button>\\n\\t\\t\\t<button id=\\\"okbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"dialogResponse$.next('ok')\\\">Ok</button>\\n\\t\\t</ng-template>\\n\\t</deja-message-box>\\n</deja-dialog>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n\\t<deja-markdown [url]=\\\"'https://raw.githubusercontent.com/DSI-HUG/dejajs-components/dev/projects/deja-js/component/tree-list/readme.md'\\\"></deja-markdown>\\n</mat-card>\\n\\n<div *ngIf=\\\"tabIndex === 1\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Simple Usage</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Just passing an array of objects</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list fxFlex=\\\"0 0 400px\\\" [(ngModel)]=\\\"country\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<h4>Selected country model :</h4>\\n\\t\\t\\t\\t\\t<pre>{{country | json}}</pre>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Keyboard Navigation</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>deja-tree-list has some keyboard navigation feature</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list fxFlex=\\\"0 0 400px\\\" [(ngModel)]=\\\"country\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\"></deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<ul fxFlex=\\\"0 0 50%\\\" fxFlexOffset=\\\"5%\\\" id=\\\"shortcut-list\\\">\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to select the previous item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to select the next item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Ctrl</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to change the current item to the previous</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Ctrl</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to change the current item to the next</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Shift</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to change the current item to the previous</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Shift</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to change the current item to the next</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">PageUp</span> to select the next page item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">PageDown</span> to select the previous page item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Home</span> to select the first item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">End</span> to select the last item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Space</span> to collapse/expand a group header or to select/unselect the current item</li>\\n\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">A</span>..\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Z</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">0</span>..\\n\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">9</span> to select the next item started with the pressed key</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Treelist with options</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>These treelists has a list coming from html options</div>\\n\\t\\t\\t<span fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<deja-tree-list fxFlex=\\\"0 0 45%\\\" class=\\\"demo-half-width optionstl\\\" [(ngModel)]=\\\"fruct\\\">\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Apricots\\\" text=\\\"My preferred fruct is Apricots\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Banana\\\" text=\\\"My preferred fruct is Banana\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Cantaloupe\\\" text=\\\"My preferred fruct is Cantaloupe\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Cherries\\\" text=\\\"My preferred fruct is Cherries\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Coconut\\\" text=\\\"My preferred fruct is Coconut\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Cranberries\\\" text=\\\"My preferred fruct is Cranberries\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Durian\\\" text=\\\"My preferred fruct is Durian\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Grapes\\\" text=\\\"My preferred fruct is Grapes\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Lemon\\\" text=\\\"My preferred fruct is Lemon\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Mango\\\" text=\\\"My preferred fruct is Mango\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Pineapple\\\" text=\\\"My preferred fruct is Pineapple\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"Watermelon\\\" text=\\\"My preferred fruct is Watermelon\\\"></deja-item>\\n\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t<deja-tree-list fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" class=\\\"demo-half-width optionstl\\\" multiSelect=\\\"true\\\" selectedModels=\\\"mango, apricots, coconut\\\">\\n\\t\\t\\t\\t\\t<deja-item value=\\\"apricots\\\" text=\\\"Apricots\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"banana\\\" text=\\\"Banana\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"cantaloupe\\\" text=\\\"Cantaloupe\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"cherries\\\" text=\\\"Cherries\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"coconut\\\" text=\\\"Coconut\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"cranberries\\\" text=\\\"Cranberries\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"durian\\\" text=\\\"Durian\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"grapes\\\" text=\\\"Grapes\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"lemon\\\" text=\\\"Lemon\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"mango\\\" text=\\\"Mango\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"pineapple\\\" text=\\\"Pineapple\\\"></deja-item>\\n\\t\\t\\t\\t\\t<deja-item value=\\\"watermelon\\\" text=\\\"Watermelon\\\"></deja-item>\\n\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">String Array Model</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t<deja-tree-list class=\\\"demo-half-width\\\" [(ngModel)]=\\\"fruct\\\" [models]=\\\"fructs\\\"></deja-tree-list>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 50%\\\" fxFlexOffset=\\\"5%\\\">Selected fruct model is: {{ fruct }}</span>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Disabled tree-list</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"disabled\\\" color=\\\"primary\\\">Check me to disable tree-list below</mat-checkbox>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list searchArea nodataholder=\\\"No record to display\\\" maxHeight=\\\"auto\\\" [disabled]=\\\"disabled\\\" selectionClearable [(ngModel)]=\\\"deepCountry\\\" textField=\\\"l1.l2.name\\\" valueField=\\\"l1.l2.value\\\" [models]=\\\"deepCountries\\\"></deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<h4>Selected deep country model :</h4>\\n\\t\\t\\t\\t\\t<pre>{{deepCountry | json}}</pre>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Multi level</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list nodataholder=\\\"No record to display\\\" maxHeight=\\\"auto\\\" [models]=\\\"folders\\\" textField=\\\"label\\\" childrenField=\\\"children\\\"></deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 2\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Multi selection</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Multi selection example</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list sortable multiSelect textField=\\\"naqme\\\" valueField=\\\"code\\\" [selectedItems]=\\\"multiselectModel\\\" (itemDragStart)=\\\"onItemDragStart($event)\\\" (selectedChange)=\\\"multiselectModelChange($event.items)\\\" [items]=\\\"countriesForMultiselect\\\">\\n\\t\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<h4>Multi selection shortcuts :</h4>\\n\\t\\t\\t\\t\\t<ul id=\\\"shortcut-list\\\">\\n\\t\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Ctrl</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Space</span> to add/remove the current item to the selection</li>\\n\\t\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Shift</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↑</span> to select a range orf items</li>\\n\\t\\t\\t\\t\\t\\t<li>Press\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">Shift</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"keyboard-key\\\">↓</span> to select a range orf items</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t<h4>Selected country model :</h4>\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let item of multiselectModel\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>{{ item.naqme }}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Grouping and Drag Drop</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Grouping example</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"groupedCountries\\\" [deja-mouse-draggable]=\\\"getDragContext()\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #itemTemplate let-item let-flatindex=\\\"flatindex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span [attr.ddid]=\\\"item.model.code\\\">{{ item.model.naqme }}</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #parentItemTemplate let-item>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon id=\\\"placeholder-icon\\\">public</mat-icon>&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<span>{{ item.groupName }}</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<div>You can drag and drop items the the area bellow (That will display a JSON representation of the dropped model) :</div>\\n\\t\\t\\t\\t\\t<div #dropArea [deja-mouse-droppable]=\\\"getDropContext(dropArea)\\\" [deja-droppable]=\\\"{dragovercallback: onDivDragOver, dragentercallback:onDivDragOver, dropcallback:onDivDropEvent}\\\" style=\\\"border:1px solid red;min-height:150px;\\\"></div>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Autocomplete</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Autocomplete 2 characters minimum</div>\\n\\t\\t\\t<deja-tree-list class=\\\"demo-half-width\\\" nodataholder=\\\"No record to display\\\" [itemListService]=\\\"countriesListService\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" min-search-length=\\\"2\\\"></deja-tree-list>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Variable Row Size</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>Variable Row height example</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list [items]=\\\"loremList\\\" multiSelect viewportMode=\\\"variable\\\" searchArea sortable></deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 3\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Templating Examples</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>Item Template</h1>\\n\\t\\t\\t<div>An exemple with auto sized item template</div>\\n\\t\\t\\t<deja-tree-list #news class=\\\"news\\\" viewportMode=\\\"auto\\\" textField=\\\"title\\\" searchField=\\\"description\\\" [models]=\\\"news$\\\">\\n\\t\\t\\t\\t<ng-template #itemTemplate let-item let-flatindex=\\\"flatindex\\\">\\n\\t\\t\\t\\t\\t<news-card [item]=\\\"item.model\\\" (imageLoaded)=\\\"imageLoaded(item)\\\"></news-card>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t<h1>Header Template and Group Template</h1>\\n\\t\\t\\t<div>Treelist with an header template</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list #headertreelist textField=\\\"naqme\\\" valueField=\\\"code\\\" [models]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #headerTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<span id=\\\"headerTemplateContent\\\" (click)=\\\"headertreelist.sort()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span id=\\\"title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThis is a header template, click to sort the list.\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<deja-sort-indicator [sort-infos]=\\\"headertreelist.sortInfos\\\"></deja-sort-indicator>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list textField=\\\"naqme\\\" [items]=\\\"groupedCountries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #parentItemTemplate let-item>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon id=\\\"placeholder-icon\\\">public</mat-icon>&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<span>{{ item.groupName }}</span>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<h1>Search Prefix and Suffix Templates</h1>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<deja-tree-list searchArea textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"countries\\\">\\n\\t\\t\\t\\t\\t\\t<ng-template #searchPrefixTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon (click)=\\\"onFilterTemplateClicked('Prefix')\\\">public</mat-icon>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #searchSuffixTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon (click)=\\\"onFilterTemplateClicked('Suffix')\\\">more_vert</mat-icon>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</deja-tree-list>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 4\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Pre-Selections from html inputs</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"40\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<div>Preselection with the input selectedModel</div>\\n\\t\\t\\t\\t\\t<deja-tree-list class=\\\"fixed-height\\\" selectedModel=\\\"Mango\\\" [models]=\\\"fructs\\\"></deja-tree-list>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"40\\\" fxFlexOffset=\\\"15\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<div>Preselections with the input selectedModels</div>\\n\\t\\t\\t\\t\\t<deja-tree-list class=\\\"fixed-height\\\" multiSelect=\\\"true\\\" selectedModels=\\\"Mango, Apricots, Coconut\\\" [models]=\\\"fructs\\\"></deja-tree-list>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"40\\\" fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<div>Preselection with the input selectedItem</div>\\n\\t\\t\\t\\t\\t<deja-tree-list class=\\\"fixed-height\\\" selectedItem=\\\"mango\\\" [items]=\\\"fructItems\\\"></deja-tree-list>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"40\\\" fxFlexOffset=\\\"15\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Pre-Selections from javascript</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div>The collection fructItemsWithPreSelection has a pre-selected item</div>\\n\\t\\t\\t<deja-tree-list class=\\\"fixed-height\\\" [items]=\\\"fructItemsWithPreSelection\\\"></deja-tree-list>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n\\n<div *ngIf=\\\"tabIndex === 5\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Pre-Events and on Demand</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>On Demand Loading </h1>\\n\\t\\t\\t<div>The items are loaded from the loading event</div>\\n\\t\\t\\t<deja-tree-list #ondemand class=\\\"demo-half-width fixed-height\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [loadingItems]=\\\"loadingItems()\\\"></deja-tree-list>\\n\\t\\t\\t<h1>Confirm Selection</h1>\\n\\t\\t\\t<div>A dialog will confirm the selection of an item</div>\\n\\t\\t\\t<deja-tree-list class=\\\"demo-half-width fixed-height\\\" multiSelect textField=\\\"naqme\\\" valueField=\\\"code\\\" [selectingItem]=\\\"confirmDialog()\\\" [items]=\\\"countries\\\"> </deja-tree-list>\\n\\t\\t\\t<h1>Confirm Expand and Collapse </h1>\\n\\t\\t\\t<div>A dialog will confirm the expand and collapse or an item if the children are not loaded. The children will be loaded asynchronously after the item expansion.</div>\\n\\t\\t\\t<deja-tree-list #onexpand class=\\\"demo-half-width fixed-height\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\" [items]=\\\"onDemandGroupedCountries\\\" [expandingItem]=\\\"expandingItems()\\\" [collapsingItem]=\\\"collapsingItems()\\\"></deja-tree-list>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"tabIndex === 6\\\">\\n\\t<mat-card class=\\\"deja-treelist-demo demo-card demo-basic\\\">\\n\\t\\t<mat-toolbar color=\\\"primary\\\">Performance Examples</mat-toolbar>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<h1>10K items with Item Template </h1>\\n\\t\\t\\t<div class=\\\"flexContainer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"1rem\\\">\\n\\t\\t\\t\\t<span fxFlex=\\\"1 1 auto\\\">An exemple with 10000 auto sized templatized items</span>\\n\\t\\t\\t\\t<mat-form-field fxFlex=\\\"0 0 5rem\\\">\\n\\t\\t\\t\\t\\t<input matInput type=\\\"number\\\" [(ngModel)]=\\\"ensureIndex\\\" autocomplete=\\\"off\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<button fxFlex=\\\"0 0 auto\\\" mat-button (click)=\\\"news.ensureItemVisible(ensureIndex)\\\">Ensure index</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<deja-tree-list #news class=\\\"news\\\" viewportMode=\\\"auto\\\" textField=\\\"title\\\" searchField=\\\"description\\\" [models]=\\\"bigNews$\\\">\\n\\t\\t\\t\\t<ng-template #itemTemplate let-item let-flatindex=\\\"flatindex\\\">\\n\\t\\t\\t\\t\\t<news-card [item]=\\\"item.model\\\" (imageLoaded)=\\\"imageLoaded(item)\\\"></news-card>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</deja-tree-list>\\n\\n\\t\\t\\t<h1>Fixed size rows 100K items</h1>\\n\\t\\t\\t<div>An exemple with 100000 fixed size items</div>\\n\\t\\t\\t<span fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t<deja-tree-list #bigCountries id=\\\"bigCountries\\\" fxFlex=\\\"0 0 45%\\\" [items]=\\\"bigCountries$\\\" textField=\\\"naqme\\\" valueField=\\\"code\\\"></deja-tree-list>\\n\\t\\t\\t\\t<span fxFlex=\\\"0 0 45%\\\" fxFlexOffset=\\\"5%\\\" fxFlexOffset=\\\"5%\\\">\\n\\t\\t\\t\\t\\t<h4 id=\\\"vptitle\\\">Viewport Infos:</h4>\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let info of viewPortInfos\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"vpinfoname\\\">{{info.name}}</span>\\n\\t\\t\\t\\t\\t\\t<span>{{info.value}}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</span>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatCheckboxModule, MatIconModule, MatInputModule, MatTabsModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DejaDialogModule } from '@deja-js/component/dialog';\nimport { DejaDragDropModule } from '@deja-js/component/dragdrop';\nimport { DejaItemModule, DejaSortingModule, GroupingService } from '@deja-js/core';\nimport { DejaMessageBoxModule } from '@deja-js/component/message-box';\nimport { DejaMouseDragDropModule } from '@deja-js/component/mouse-dragdrop';\nimport { DejaTreeListModule } from '@deja-js/component/tree-list';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { NewsCardModule } from '../common/news-card.module';\nimport { DejaTreeListDemoComponent } from './tree-list-demo';\nimport { routing } from './tree-list-demo.routes';\n\n@NgModule({\n    declarations: [\n        DejaTreeListDemoComponent\n    ],\n    exports: [\n        DejaTreeListDemoComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCardModule,\n        MatTabsModule,\n        MatToolbarModule,\n        DejaTreeListModule,\n        DejaMarkdownModule,\n        DejaMessageBoxModule,\n        DejaDialogModule,\n        DejaItemModule,\n        DejaMouseDragDropModule.forRoot(),\n        DejaDragDropModule,\n        DejaSortingModule,\n        NewsCardModule,\n        routing,\n    ],\n    providers: [\n        GroupingService,\n    ],\n})\nexport class DejaTreeListDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DejaTreeListDemoComponent } from './tree-list-demo';\n\nconst routes: Routes = [\n    { path: '', component: DejaTreeListDemoComponent },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \"deja-tree-list-demo .demo-card {\\n  margin: 16px; }\\n  deja-tree-list-demo .demo-card mat-card-content {\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: column; }\\n  deja-tree-list-demo .demo-card mat-card-content deja-tree-list {\\n      max-height: 400px;\\n      position: relative;\\n      margin: 1rem 0; }\\n  deja-tree-list-demo .demo-card mat-card-content deja-tree-list.fixed-height {\\n        height: 400px; }\\n  deja-tree-list-demo .demo-card mat-card-content deja-tree-list.news {\\n        max-height: 600px; }\\n  deja-tree-list-demo .demo-basic {\\n  padding: 0; }\\n  deja-tree-list-demo .demo-full-width {\\n  width: 100%; }\\n  deja-tree-list-demo .demo-half-width {\\n  width: 45%; }\\n  deja-tree-list-demo .demo-icons {\\n  font-size: 100%;\\n  height: inherit;\\n  vertical-align: top;\\n  width: inherit; }\\n  deja-tree-list-demo #flight {\\n  display: flex;\\n  align-items: center; }\\n  deja-tree-list-demo news-card {\\n  width: 100%; }\\n  deja-tree-list-demo news-card .text {\\n    overflow-x: hidden; }\\n  deja-tree-list-demo .vpinfoname {\\n  display: inline-block;\\n  width: 7rem; }\\n  deja-tree-list-demo #bigCountries {\\n  height: 400px; }\\n  deja-tree-list-demo #headerTemplateContent {\\n  padding: 0.4rem;\\n  display: block;\\n  background-color: #aaa;\\n  cursor: pointer;\\n  display: flex; }\\n  deja-tree-list-demo #headerTemplateContent #title {\\n    flex: 1 0 auto; }\\n  deja-tree-list-demo #headerTemplateContent step-indicator {\\n    flex: 0 0 auto; }\\n  deja-tree-list-demo [matPrefix] {\\n  cursor: default;\\n  padding: 4px; }\\n  deja-tree-list-demo [matSuffix] {\\n  padding: 4px;\\n  display: flex;\\n  justify-content: flex-end;\\n  cursor: pointer; }\\n  deja-tree-list-demo [ddid] {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-items: center; }\\n  deja-tree-list-demo .optionstl {\\n  overflow: visible; }\\n  .item-base-cursor #content,\\n.country-target-cursor #content {\\n  background-color: #222 !important;\\n  color: #fff;\\n  opacity: 0.8;\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer; }\\n  .item-base-cursor #content::before,\\n  .country-target-cursor #content::before {\\n    display: block;\\n    width: 0.5rem;\\n    content: \\\" \\\"; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9EU0ktSFVHL2RlamFqcy1jb21wb25lbnRzL3NyYy9hcHAvdHJlZS1saXN0L3RyZWUtbGlzdC1kZW1vLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxZQUFZLEVBQUE7RUFGcEI7SUFJWSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQixFQUFBO0VBTmxDO01BUWdCLGlCQUFpQjtNQUNqQixrQkFBa0I7TUFDbEIsY0FBYyxFQUFBO0VBVjlCO1FBWW9CLGFBQWEsRUFBQTtFQVpqQztRQWVvQixpQkFBaUIsRUFBQTtFQWZyQztFQXFCUSxVQUFVLEVBQUE7RUFyQmxCO0VBd0JRLFdBQVcsRUFBQTtFQXhCbkI7RUEyQlEsVUFBVSxFQUFBO0VBM0JsQjtFQThCUSxlQUFlO0VBQ2YsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixjQUFjLEVBQUE7RUFqQ3RCO0VBb0NRLGFBQWE7RUFDYixtQkFBbUIsRUFBQTtFQXJDM0I7RUF3Q1EsV0FBVyxFQUFBO0VBeENuQjtJQTBDWSxrQkFBa0IsRUFBQTtFQTFDOUI7RUE4Q1EscUJBQXFCO0VBQ3JCLFdBQVcsRUFBQTtFQS9DbkI7RUFrRFEsYUFBYSxFQUFBO0VBbERyQjtFQXFEUSxlQUFlO0VBQ2YsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsYUFBYSxFQUFBO0VBekRyQjtJQTJEWSxjQUFjLEVBQUE7RUEzRDFCO0lBOERZLGNBQWMsRUFBQTtFQTlEMUI7RUFrRVEsZUFBZTtFQUNmLFlBQVksRUFBQTtFQW5FcEI7RUFzRVEsWUFBWTtFQUNaLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsZUFBZSxFQUFBO0VBekV2QjtFQTRFUSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUIsRUFBQTtFQS9FM0I7RUFrRlEsaUJBQWlCLEVBQUE7RUFJekI7O0VBR1EsaUNBQWlDO0VBQ2pDLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlLEVBQUE7RUFSdkI7O0lBVVksY0FBYztJQUNkLGFBQWE7SUFDYixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90cmVlLWxpc3QvdHJlZS1saXN0LWRlbW8uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRlamEtdHJlZS1saXN0LWRlbW8ge1xuICAgIC5kZW1vLWNhcmQge1xuICAgICAgICBtYXJnaW46IDE2cHg7XG4gICAgICAgIG1hdC1jYXJkLWNvbnRlbnQge1xuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZGVqYS10cmVlLWxpc3Qge1xuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICAgICAgICAgICAgICAmLmZpeGVkLWhlaWdodCB7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDAwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICYubmV3cyB7XG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDYwMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAuZGVtby1iYXNpYyB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICAgIC5kZW1vLWZ1bGwtd2lkdGgge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgLmRlbW8taGFsZi13aWR0aCB7XG4gICAgICAgIHdpZHRoOiA0NSU7XG4gICAgfVxuICAgIC5kZW1vLWljb25zIHtcbiAgICAgICAgZm9udC1zaXplOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIH1cbiAgICAjZmxpZ2h0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgbmV3cy1jYXJkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudnBpbmZvbmFtZSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IDdyZW07XG4gICAgfVxuICAgICNiaWdDb3VudHJpZXMge1xuICAgICAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIH1cbiAgICAjaGVhZGVyVGVtcGxhdGVDb250ZW50IHtcbiAgICAgICAgcGFkZGluZzogMC40cmVtO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAjdGl0bGUge1xuICAgICAgICAgICAgZmxleDogMSAwIGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgc3RlcC1pbmRpY2F0b3Ige1xuICAgICAgICAgICAgZmxleDogMCAwIGF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgW21hdFByZWZpeF0ge1xuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICAgIHBhZGRpbmc6IDRweDtcbiAgICB9XG4gICAgW21hdFN1ZmZpeF0ge1xuICAgICAgICBwYWRkaW5nOiA0cHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgW2RkaWRdIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLm9wdGlvbnN0bCB7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIH1cbn1cblxuLml0ZW0tYmFzZS1jdXJzb3IsXG4uY291bnRyeS10YXJnZXQtY3Vyc29yIHtcbiAgICAjY29udGVudCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjIgIWltcG9ydGFudDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogMC41cmVtO1xuICAgICAgICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICAgIH1cbiAgICB9XG59Il19 */\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { IDejaDragEvent } from '@deja-js/component';\nimport { IViewPortItem } from '@deja-js/core';\nimport { DejaTreeListComponent } from '@deja-js/component/tree-list';\nimport { IDejaMouseDroppableContext, IDejaMouseDraggableContext } from '@deja-js/component/mouse-dragdrop';\nimport { IDropCursorInfos } from '@deja-js/component/mouse-dragdrop';\nimport { IItemBase, IItemTree, GroupingService } from '@deja-js/core';\nimport { from as observableFrom, Observable, of as observableOf, Subject, Subscription } from 'rxjs';\nimport { delay, first, map, reduce, switchMap, tap } from 'rxjs/operators';\nimport { News } from '../common/news.model';\nimport { CountriesListService } from '../services/countries-list.service';\nimport { CountriesService, Country } from '../services/countries.service';\nimport { Folder, FoldersService } from '../services/folders.service';\nimport { NewsService } from '../services/news.service';\n\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    selector: 'deja-tree-list-demo',\n    styleUrls: ['./tree-list-demo.scss'],\n    templateUrl: './tree-list-demo.html',\n})\nexport class DejaTreeListDemoComponent implements OnDestroy {\n    public fruct = 'apricots';\n    public fructs = [] as string[];\n    public fructItems = [] as IItemBase[];\n    public fructItemsWithPreSelection = [] as IItemBase[];\n    public folders: Folder[];\n\n    protected disabled: boolean;\n    protected country: Country;\n    protected deepCountry = {\n        l1: {\n            l2: {\n                name: 'Switzerland',\n                value: 'CH',\n            }\n        }\n    };\n    public tabIndex = 1;\n    protected news$: Observable<News[]>;\n    protected bigNews$: Observable<News[]>;\n    protected bigCountries$: Observable<Country[]>;\n    protected viewPortInfos: {\n        name: string;\n        value: string;\n    }[];\n    protected viewPortInfos$: Subscription;\n    protected dialogResponse$: Subject<string> = new Subject<string>();\n    protected loremList: IItemTree[] = [];\n\n    private countries: Observable<Country[]>;\n    public deepCountries: Observable<any>;\n    private countriesForMultiselect: Country[];\n    private groupedCountries: ICountryGroup[];\n    public onDemandGroupedCountries: ICountryGroup[];\n    public multiselectModel: IItemTree[];\n    private _dialogVisible = false;\n    private subscriptions = [] as Subscription[];\n\n    @ViewChild('news') private newsList: DejaTreeListComponent;\n    @ViewChild('onexpand') private onExpandList: DejaTreeListComponent;\n\n    public set dialogVisible(value: boolean) {\n        this._dialogVisible = value;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    public get dialogVisible() {\n        return this._dialogVisible;\n    }\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private countriesService: CountriesService,\n        private folderService: FoldersService,\n        protected countriesListService: CountriesListService,\n        public newsService: NewsService,\n        public groupingService: GroupingService\n    ) {\n        this.multiselectModel = JSON.parse('[{\"naqme\":\"ÅlandIslands\",\"code\":\"AX\",\"displayName\":\"ÅlandIslands\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"AmericanSamoa\",\"code\":\"AS\",\"displayName\":\"AmericanSamoa\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Argentina\",\"code\":\"AR\",\"displayName\":\"Argentina\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"ChristmasIsland\",\"code\":\"CX\",\"displayName\":\"ChristmasIsland\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Egypt\",\"code\":\"EG\",\"displayName\":\"Egypt\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"Dominica\",\"code\":\"DM\",\"displayName\":\"Dominica\",\"depth\":0,\"odd\":false,\"selected\":true}]');\n        this.news$ = newsService.getNews$(50);\n        this.bigNews$ = newsService.getNews$(10000);\n        this.bigCountries$ = countriesService.getCountries$(null, 100000);\n\n        for (let i = 0; i < 50; i++) {\n            const rand = Math.floor(Math.random() * (70 - 33 + 1)) + 33; // random de 33 à 70\n            this.loremList[i] = {} as IItemTree;\n            this.loremList[i].size = rand;\n            this.loremList[i].displayName = `${i} - Une ligne de test avec une taille de : ${rand}`;\n        }\n\n        groupingService.group(this.loremList, [{ groupByField: 'height' }]).then((groupedResult) => {\n            this.loremList = groupedResult;\n        });\n\n        this.country = new Country();\n        this.country.code = 'CH';\n        this.country.displayName = 'Switzerland';\n        this.country.naqme = 'Switzerland';\n        this.country.color = 'rgb(211, 47, 47)';\n\n        this.countries = this.countriesService.getCountries$();\n\n        this.folders = this.folderService.getFolders();\n\n        this.deepCountries = this.countriesService.getCountries$().pipe(\n            switchMap((countries) => countries),\n            map((country) => ({\n                l1: {\n                    l2: {\n                        name: country.naqme,\n                        value: country.code,\n                    }\n                }\n            })),\n            reduce((acc: any[], cur: any) => [...acc, cur], []));\n\n        this.fructs = [\n            'Apricots',\n            'Banana',\n            'Cantaloupe',\n            'Cherries',\n            'Coconut',\n            'Cranberries',\n            'Durian',\n            'Grapes',\n            'Lemon',\n            'Mango',\n            'Pineapple',\n            'Watermelon',\n        ];\n\n        this.fructItems = this.fructs.map((fruct) => ({\n            displayName: fruct,\n            value: fruct.toLowerCase(),\n        } as IItemBase));\n\n        this.fructItemsWithPreSelection = this.fructs.map((fruct, index) => ({\n            displayName: fruct,\n            value: fruct.toLowerCase(),\n            selected: index === 1,\n        } as IItemBase));\n\n        this.subscriptions.push(this.countries.pipe(\n            tap((value) => this.countriesForMultiselect = value),\n            delay(1))\n            .subscribe(() => {\n                this.multiselectModel = JSON.parse('[{\"naqme\":\"ÅlandIslands\",\"code\":\"AX\",\"displayName\":\"ÅlandIslands\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"AmericanSamoa\",\"code\":\"AS\",\"displayName\":\"AmericanSamoa\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Argentina\",\"code\":\"AR\",\"displayName\":\"Argentina\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"ChristmasIsland\",\"code\":\"CX\",\"displayName\":\"ChristmasIsland\",\"depth\":0,\"odd\":false,\"selected\":true},{\"naqme\":\"Egypt\",\"code\":\"EG\",\"displayName\":\"Egypt\",\"depth\":0,\"odd\":true,\"selected\":true},{\"naqme\":\"Dominica\",\"code\":\"DM\",\"displayName\":\"Dominica\",\"depth\":0,\"odd\":false,\"selected\":true}]');\n            }));\n\n        this.subscriptions.push(this.countries.subscribe((value: Country[]) => {\n            const result = [] as ICountryGroup[];\n            const onDemandResult = [] as ICountryGroup[];\n            const countryMap = {} as { [groupName: string]: ISelectCountry[] };\n\n            result.push({\n                collapsible: true,\n                collapsed: true,\n                groupName: 'EmptyGroup',\n                items: [],\n                displayName: 'Empty Group',\n                selectable: false,\n            } as ICountryGroup);\n\n            value.map((country) => {\n                const groupName = `Group ${country.naqme[0]}`;\n                if (!countryMap[groupName]) {\n                    countryMap[groupName] = [] as ICountryGroup[];\n                    result.push({\n                        collapsible: true,\n                        groupName: groupName,\n                        items: countryMap[groupName],\n                        displayName: groupName,\n                        selectable: false,\n                    } as ICountryGroup);\n\n                    onDemandResult.push({\n                        collapsible: true,\n                        collapsed: true,\n                        groupName: groupName,\n                        items: [{\n                            displayName: 'loading...',\n                            selectable: false,\n                        }],\n                        displayName: groupName,\n                        selectable: false,\n                        loaded: false,\n                    } as ICountryGroup);\n                }\n\n                countryMap[groupName].push({ model: country });\n            });\n\n            this.groupedCountries = result;\n            this.onDemandGroupedCountries = onDemandResult;\n        }));\n    }\n\n    public ngOnDestroy() {\n        this.subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    }\n\n    protected loadingItems() {\n        const self = this;\n        return (_query: string | RegExp, _selectedItems: IItemBase[]) => self.countriesService.getCountries$().pipe(delay(3000));\n    }\n\n    protected collapsingItems() {\n        const self = this;\n        return (item: IItemBase) => {\n            const country = item as ICountryGroup;\n            return country.loaded ? observableOf(item) : self.confirmDialog()(item);\n        };\n    }\n\n    protected expandingItems() {\n        const self = this;\n        return (item: IItemBase) => {\n            const group = item as ICountryGroup;\n            if (group.loaded) {\n                return observableOf(item);\n            } else {\n                return self.confirmDialog()(item).pipe(\n                    switchMap((itm) => {\n                        if (!itm) {\n                            return observableOf(null);\n                        }\n\n                        observableOf(group).pipe(\n                            delay(2000),\n                            first())\n                            .subscribe((grp) => {\n                                // Simulate asynchronous load\n                                const original = this.groupedCountries.find((c) => c.displayName === grp.displayName);\n                                grp.items = original.items;\n                                grp.loaded = true;\n                                this.onExpandList.refresh();\n                            });\n\n                        return observableOf(itm);\n                    }));\n            }\n        };\n    }\n\n    protected confirmDialog() {\n        const self = this;\n        return (item: IItemBase) => {\n            self.dialogVisible = true;\n            return observableFrom(this.dialogResponse$).pipe(\n                first(),\n                map((response) => {\n                    self.dialogVisible = false;\n                    return response === 'ok' ? item : null;\n                }));\n        };\n    }\n\n    @ViewChild('bigCountries')\n    protected set bigCountriesList(treelist: DejaTreeListComponent) {\n        if (this.viewPortInfos$) {\n            this.viewPortInfos$.unsubscribe();\n            this.viewPortInfos = [];\n            delete this.viewPortInfos$;\n        }\n\n        this.viewPortInfos$ = treelist && treelist.viewPort.viewPort$.subscribe((viewPort) => {\n            this.viewPortInfos = [\n                { name: 'beforeSize', value: String(viewPort.beforeSize), },\n                { name: 'startIndex', value: String(viewPort.startIndex), },\n                { name: 'viewPortSize', value: String(viewPort.viewPortSize), },\n                { name: 'visibleCount', value: String(viewPort.visibleItems && viewPort.visibleItems.length), },\n                { name: 'endIndex', value: String(viewPort.endIndex), },\n                { name: 'afterSize', value: String(viewPort.afterSize), },\n                { name: 'itemsCount', value: String(viewPort.items && viewPort.items.length), }\n            ];\n        });\n    }\n\n    protected imageLoaded(item: IViewPortItem) {\n        const itemExt = item as IExtendedViewPortItem;\n        if (!itemExt.loaded) {\n            itemExt.loaded = true;\n            this.newsList.refreshViewPort(itemExt);\n        }\n    }\n\n    protected multiselectModelChange(countries: Country[]) {\n        this.multiselectModel = countries ? countries : null;\n    }\n\n    protected onFilterTemplateClicked(where: string) {\n        alert(`${where} clicked`);\n    }\n\n    protected onItemDragStart(event: IDejaDragEvent) {\n        event.dragInfo.country = event.dragObject;\n    }\n\n    protected onDivDragOver(event: IDejaDragEvent) {\n        if (event.dragInfo.hasOwnProperty('country')) {\n            event.preventDefault();\n        }\n    }\n\n    protected onDivDropEvent(event: IDejaDragEvent) {\n        if (event.dragInfo.hasOwnProperty('country')) {\n            const country = event.dragInfo.country as Country;\n            (event.target as HTMLElement).innerText = `The dropped country is ${country.naqme} - the code is: ${country.code}`;\n            event.preventDefault();\n        }\n    }\n\n    protected getDragContext() {\n        return {\n            target: '[ddid]',\n            className: 'item-base-cursor',\n            dragStart: (target: HTMLElement) => {\n                const id = target && target.getAttribute('ddid');\n                return id && this.countriesService.getCountryByCode$(id);\n            },\n        } as IDejaMouseDraggableContext;\n    }\n\n    protected getDropContext(dropArea: HTMLElement) {\n        return {\n            dragEnter: (_dragContext) => {\n                return {\n                    width: 200,\n                    height: 60,\n                    className: 'country-target-cursor',\n                } as IDropCursorInfos;\n            },\n            drop: (dragContext) => {\n                const country = dragContext as Country;\n                dropArea.innerText = `The dropped country is ${country.naqme} - the code is: ${country.code}`;\n            },\n        } as IDejaMouseDroppableContext;\n    }\n}\n\ninterface ISelectCountry extends IItemTree {\n    items?: IItemTree[];\n}\n\ninterface ICountryGroup extends ISelectCountry {\n    groupName?: string;\n    items: IItemBase[];\n    loaded?: boolean;\n}\n\nexport interface IExtendedViewPortItem extends IViewPortItem {\n    loaded: boolean;\n}\n"],"sourceRoot":""}