{"version":3,"sources":["webpack:///./src/app/snackbar/message.class.ts","webpack:///./src/app/snackbar/snackbar-demo.html","webpack:///./src/app/snackbar/snackbar-demo.module.ts","webpack:///./src/app/snackbar/snackbar-demo.routes.ts","webpack:///./src/app/snackbar/snackbar-demo.scss","webpack:///./src/app/snackbar/snackbar-demo.ts"],"names":[],"mappings":"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","file":"snackbar-snackbar-demo-module.js","sourcesContent":["/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nexport class Message {\n  constructor(public content = `Some snackbar`, public gate = true) { }\n}\n","module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">\\n\\t<!--<mat-tab label=\\\"OVERVIEW\\\">-->\\n\\t<!--<mat-card class=\\\"demo-card demo-basic\\\">-->\\n\\t<!--TODO-->\\n\\t<!--</mat-card>-->\\n\\t<!--</mat-tab>-->\\n\\t<mat-tab label=\\\"API REFERENCE\\\"></mat-tab>\\n\\t<mat-tab label=\\\"EXAMPLES\\\"></mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n\\t<deja-markdown [url]=\\\"'https://raw.githubusercontent.com/DSI-HUG/dejajs-components/dev/src/component/snackbar/readme.md'\\\"></deja-markdown>\\n</mat-card>\\n\\n<div class=\\\"demo-card\\\" *ngIf=\\\"tabIndex === 1\\\">\\n\\t<!--\\n\\t\\t\\timportant:\\n\\n\\t\\t\\tusing web-animations-js polyfill is mandatory for IE & Safari because\\n\\t\\t\\tthey don't implement the Web Animation API natively\\n\\n\\t\\t\\tnote:\\n\\t\\t\\tthe graphic representation of the snackbar has no link with it's implementation beside it's size (see impl)\\n\\t\\t\\tthe graphic impl proposed here may be impl in the future as a separate component\\n\\t\\t\\tit may be something that looks like a mat-card but with context property defining the context (danger, warning, success, info, simple)\\n\\t\\t\\twhich will be translated to it's color and z index\\n\\t\\t\\t-->\\n\\n\\t<!--\\n\\t\\t\\ttodo\\n\\t\\t\\tcheck body position if scrollHeight > viewportHeight\\n\\t\\t\\tcheck if html container but !outerContainerElement => position on viewport\\n\\t\\t-->\\n\\n\\t<div id=\\\"btnContainer\\\">\\n\\t\\t<button mat-raised-button [style.background]=\\\"danger\\\" (click)=\\\"push.emit('danger')\\\">Danger</button>\\n\\t\\t<button mat-raised-button [style.background]=\\\"warning\\\" (click)=\\\"push.emit('warning')\\\">Warning</button>\\n\\t\\t<button mat-raised-button [style.background]=\\\"success\\\" (click)=\\\"push.emit('success')\\\">Success</button>\\n\\t\\t<button mat-raised-button [style.background]=\\\"info\\\" (click)=\\\"push.emit('info')\\\">Info</button>\\n\\t\\t<button mat-raised-button (click)=\\\"simpleGate = true\\\">Simple</button>\\n\\t</div>\\n\\n\\t<!-- simple use case, single snackbar -->\\n\\t<deja-snackbar *ngIf=\\\"simpleGate\\\" alignment=\\\"top left\\\" [duration]=\\\"2000\\\" (onAnimationDone)=\\\"simpleGate = false\\\">\\n\\t\\t<deja-message-box type=\\\"primary\\\" horizontal>\\n\\t\\t\\tHello world ! I'm a simple snackbar.\\n\\t\\t</deja-message-box>\\n\\t</deja-snackbar>\\n\\n\\t<!-- event driven from UI -->\\n\\t<!-- this behavior is to be used to react to user behavior on the UI, snackbars MUST be disposed using user interraction -->\\n\\n\\t<!--inside a container-->\\n\\t<section #containerEl id=\\\"container\\\" [style.position]=\\\"'relative'\\\">\\n\\t\\t<ng-template ngFor let-message [ngForOf]=\\\"infos | async\\\">\\n\\t\\t\\t<deja-snackbar *ngIf=\\\"message.gate\\\" alignment=\\\"right\\\" [outerContainerElement]=\\\"containerEl\\\">\\n\\t\\t\\t\\t<deja-message-box type=\\\"primary\\\" horizontal>\\n\\t\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t\\t\\t\\t<button mat-mini-fab class=\\\"action-button\\\" [color]=\\\"'blank'\\\" (click)=\\\"message.gate = false\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</deja-message-box>\\n\\t\\t\\t</deja-snackbar>\\n\\t\\t</ng-template>\\n\\t</section>\\n\\n\\t<!--on the viewport-->\\n\\t<ng-template ngFor let-message [ngForOf]=\\\"successes | async\\\">\\n\\t\\t<deja-snackbar *ngIf=\\\"message.gate\\\" alignment=\\\"bottom left\\\">\\n\\t\\t\\t<deja-message-box type=\\\"success\\\" horizontal>\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t\\t\\t<button mat-mini-fab class=\\\"action-button\\\" [color]=\\\"'blank'\\\" (click)=\\\"message.gate = false\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</deja-message-box>\\n\\t\\t</deja-snackbar>\\n\\t</ng-template>\\n\\n\\t<ng-template ngFor let-message [ngForOf]=\\\"warnings | async\\\">\\n\\t\\t<deja-snackbar *ngIf=\\\"message.gate\\\" alignment=\\\"bottom\\\">\\n\\t\\t\\t<deja-message-box type=\\\"warn\\\" horizontal>\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t\\t\\t<button mat-mini-fab class=\\\"action-button\\\" [color]=\\\"'blank'\\\" (click)=\\\"message.gate = false\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</deja-message-box>\\n\\t\\t</deja-snackbar>\\n\\t</ng-template>\\n\\n\\t<ng-template ngFor let-message [ngForOf]=\\\"dangers | async\\\">\\n\\t\\t<deja-snackbar *ngIf=\\\"message.gate\\\" alignment=\\\"bottom right\\\">\\n\\t\\t\\t<deja-message-box type=\\\"danger\\\" horizontal>\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t<ng-template #actionsTemplate>\\n\\t\\t\\t\\t\\t<button mat-mini-fab class=\\\"action-button\\\" [color]=\\\"'blank'\\\" (click)=\\\"message.gate = false\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</deja-message-box>\\n\\t\\t</deja-snackbar>\\n\\t</ng-template>\\n\\n\\t<section style=\\\"width: 400px; height: 4000px; border: red solid 1px;\\\">\\n\\t\\t<!-- server push like feed -->\\n\\t\\t<!-- this behavior is to be used to push message to the client for example, snackbars MUST be displosed by themself -->\\n\\t\\t<!-- to do so, define duration @Input and negate flag used for disposal using the onAnimationDone @Output -->\\n\\t\\t<ng-template ngFor let-message [ngForOf]=\\\"messages | async\\\">\\n\\t\\t\\t<deja-snackbar *ngIf=\\\"message.gate\\\" alignment=\\\"left\\\" [duration]=\\\"5000\\\" (onAnimationDone)=\\\"message.gate = false\\\">\\n\\t\\t\\t\\t<deja-message-box type=\\\"primary\\\" horizontal>\\n\\t\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t</deja-message-box>\\n\\t\\t\\t</deja-snackbar>\\n\\t\\t</ng-template>\\n\\t</section>\\n</div>\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatIconModule, MatTabsModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DejaMessageBoxModule } from '@deja-js/component/message-box';\nimport { DejaSnackbarModule } from '@deja-js/component/snackbar';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { DejaSnackbarDemoComponent } from './snackbar-demo';\nimport { routing } from './snackbar-demo.routes';\n\n@NgModule({\n    declarations: [DejaSnackbarDemoComponent],\n    exports: [DejaSnackbarDemoComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCardModule,\n        MatTabsModule,\n        MatToolbarModule,\n        DejaSnackbarModule,\n        DejaMarkdownModule,\n        DejaMessageBoxModule,\n        routing,\n    ],\n    providers: [\n    ],\n})\nexport class DejaSnackbarDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DejaSnackbarDemoComponent } from './snackbar-demo';\n\nconst routes: Routes = [\n    { path: '', component: DejaSnackbarDemoComponent },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \"/* These styles are used for demo purposes only, you don't need to use them at all. */\\n:host #container {\\n  display: block;\\n  margin: auto;\\n  max-width: 800px;\\n  max-height: 800px;\\n  min-height: 400px;\\n  box-sizing: border-box;\\n  border: solid black 1px; }\\n:host .snackbarContent {\\n  display: flex;\\n  justify-content: space-between;\\n  border-radius: 1px;\\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4); }\\n:host .snackbarContent span {\\n    margin: 12px 0px 12px 12px; }\\n:host #btnContainer {\\n  width: 500px;\\n  margin: auto;\\n  margin-bottom: 12px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9EU0ktSFVHL2RlamFqcy1jb21wb25lbnRzL3NyYy9hcHAvc25hY2tiYXIvc25hY2tiYXItZGVtby5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFGQUFBO0FBRUE7RUFFUSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0Qix1QkFBa0MsRUFBQTtBQVIxQztFQWFRLGFBQWE7RUFHYiw4QkFBOEI7RUFDOUIsa0JBQWtCO0VBQ2xCLGlIQUFpSCxFQUFBO0FBbEJ6SDtJQXFCWSwwQkFBMEIsRUFBQTtBQXJCdEM7RUF5QlEsWUFBWTtFQUNaLFlBQVk7RUFDWixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NuYWNrYmFyL3NuYWNrYmFyLWRlbW8uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFRoZXNlIHN0eWxlcyBhcmUgdXNlZCBmb3IgZGVtbyBwdXJwb3NlcyBvbmx5LCB5b3UgZG9uJ3QgbmVlZCB0byB1c2UgdGhlbSBhdCBhbGwuICovXG5cbjpob3N0IHtcbiAgICAjY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAgICAgbWF4LWhlaWdodDogODAwcHg7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXI6IHNvbGlkIHJnYmEoMCwgMCwgMCwgMSkgMXB4O1xuICAgIH1cbiAgICAuc25hY2tiYXJDb250ZW50IHtcbiAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgICAgICAgYm94LXNoYWRvdzogMCA2cHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDE4cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG5cbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICBtYXJnaW46IDEycHggMHB4IDEycHggMTJweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAjYnRuQ29udGFpbmVyIHtcbiAgICAgICAgd2lkdGg6IDUwMHB4O1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgfVxufSJdfQ== */\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { Component, EventEmitter, OnInit } from '@angular/core';\nimport { MaterialColors } from '@deja-js/core';\nimport { from as observableFrom, interval as observableInterval,  Observable } from 'rxjs';\nimport { defaultIfEmpty, filter, map, scan } from 'rxjs/operators';\nimport { Message } from './message.class';\n\n@Component({\n  selector: 'deja-snackbar-demo',\n  styleUrls: ['./snackbar-demo.scss'],\n  templateUrl: './snackbar-demo.html',\n})\nexport class DejaSnackbarDemoComponent implements OnInit {\n    public tabIndex = 1;\n\n  /*\n   The example below demonstrate how you can dynamically add snackbars using *ngFor structural directive.\n   Here the Observable simulate items being push from the server\n   */\n  private messages: Observable<any[]>;\n\n  private dangers: Observable<any[]>;\n  private warnings: Observable<any[]>;\n  private successes: Observable<any[]>;\n  private infos: Observable<any[]>;\n\n  private push = new EventEmitter();\n\n  private colors: any;\n  private danger: string;\n  private warning: string;\n  private success: string;\n  private info: string;\n  private default: string;\n\n  public ngOnInit() {\n    // tslint:disable-next-line:no-string-literal\n    this.colors = new MaterialColors()['palet'];\n    this.danger = this.colors['mat-red']['500'];\n    this.warning = this.colors['mat-orange']['500'];\n    this.success = this.colors['mat-green']['500'];\n    this.info = this.colors['mat-blue']['500'];\n    this.default = this.colors['mat-grey']['900'];\n\n    this.dangers = observableFrom(this.push).pipe(\n        filter((type: string) => type === 'danger'),\n        map(() => new Message('Danger snackbar')),\n        scan((acc: any[], curr: any) => [...acc, curr], []),\n        defaultIfEmpty([]), );\n\n    this.warnings = observableFrom(this.push).pipe(\n        filter((type: string) => type === 'warning'),\n        map(() => new Message('Warning snackbar')),\n        scan((acc: any[], curr: any) => [...acc, curr], []),\n        defaultIfEmpty([]), );\n\n    this.successes = observableFrom(this.push).pipe(\n        filter((type: string) => type === 'success'),\n        map(() => new Message('Success snackbar')),\n        scan((acc: any[], curr: any) => [...acc, curr], []),\n        defaultIfEmpty([]), );\n\n    this.infos = observableFrom(this.push).pipe(\n        filter((type: string) => type === 'info'),\n        map(() => new Message('Info snackbar')),\n        scan((acc: any[], curr: any) => [...acc, curr], []),\n        defaultIfEmpty([]), );\n\n    this.messages = observableInterval(2000).pipe(\n        map(() => new Message('Server push snackbar')),\n        scan((acc: any[], curr: any) => [...acc, curr], []),\n        defaultIfEmpty([]), );\n  }\n}\n"],"sourceRoot":""}