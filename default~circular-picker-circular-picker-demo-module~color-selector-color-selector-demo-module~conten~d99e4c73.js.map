{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-content-editable.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAChB;AAC+B;AACsC;AAC5C;AACf;AACsB;AACgB;;AAE/E;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,QAAQ,sDAAS,iCAAiC,gEAAS;AAC3D,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,yBAAyB,iDAAI,kBAAkB,6DAAM;AACrD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA,SAAS,IAAI,0DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA,gBAAgB,kDAAK,UAAU,4DAAK;AACpC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS,IAAI,0DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oCAAoC,6DAAM;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,eAAe,EAAE;AAC3C,wBAAwB,6DAAM;AAC9B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,cAAc,EAAE;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,sDAAS,gDAAgD,4DAAK,IAAI,gEAAS,SAAS,6DAAM;AACtG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,0CAA0C,EAAE,qBAAqB,EAAE;AACjG;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAS,gCAAgC,4DAAK,IAAI,gEAAS;AACvE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ;AAC1C,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAQ;AAC/C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,mFAAqB;AACnD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,mFAAqB;AACnD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAC1E,MAAM;AACN;AACA,qBAAqB,OAAO,yDAAW,4BAA4B;AACnE,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,4BAA4B;AAC5D,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqD;;AAErD,8D","file":"default~circular-picker-circular-picker-demo-module~color-selector-color-selector-demo-module~conten~d99e4c73.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { __read } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, HostBinding, Input, Optional, Self, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { KeyCodes } from '@deja-js/core';\nimport { BehaviorSubject, from, fromEvent, timer } from 'rxjs';\nimport { filter, first, map, takeUntil, takeWhile, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\nvar DejaEditableDirective = /** @class */ (function () {\n    function DejaEditableDirective(elementRef, _control) {\n        var _this = this;\n        this._control = _control;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this._inEdition = false;\n        this._editMode = false;\n        this._mandatory = false;\n        this._multiline = false;\n        this.edit$ = new BehaviorSubject([false, false]);\n        this.isAlive = true;\n        this._disabled = null;\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n        this.element = (/** @type {?} */ (elementRef.nativeElement));\n        fromEvent(this.element, 'mousedown').pipe(takeWhile((/**\n         * @return {?}\n         */\n        function () { return _this.isAlive; })))\n            .subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        function (e) {\n            if (_this.inEdition || _this.disabled) {\n                e.cancelBubble = true;\n                return false;\n            }\n            else if (_this.editMode) {\n                _this.edit$.next([true, true]);\n                e.cancelBubble = true;\n                return false;\n            }\n        }));\n        /** @type {?} */\n        var inEdition$ = from(this.edit$).pipe(filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 1), value = _b[0];\n            return value !== _this._inEdition;\n        })), map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 2), value = _b[0], selectOnFocus = _b[1];\n            if (selectOnFocus !== false) {\n                timer(10).pipe(first())\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.selectAll();\n                    _this.focus();\n                }));\n            }\n            return value;\n        })), tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _this._inEdition = value;\n            if (value) {\n                _this.element.setAttribute('contenteditable', 'true');\n            }\n            else {\n                _this.element.removeAttribute('contenteditable');\n            }\n            _this.refreshView();\n        })));\n        /** @type {?} */\n        var kill$ = inEdition$.pipe(filter((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return !value; })));\n        inEdition$.pipe(filter((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return value; })))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            fromEvent(_this.element.ownerDocument, 'mousedown').pipe(first(), takeUntil(kill$), filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) { return !_this.isChildElement((/** @type {?} */ (event.target))); })))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var text = _this.element.innerText.replace(/\\n/g, '<br />').replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n                _this.onTouchedCallback();\n                if (text || !_this.mandatory) {\n                    _this.value = text;\n                }\n                _this.inEdition = false;\n            }));\n            fromEvent(_this.element, 'keydown').pipe(first(), takeUntil(kill$))\n                .subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) {\n                e.cancelBubble = true;\n                e.stopPropagation();\n                if (e.keyCode === KeyCodes.Enter && !_this.multiline) {\n                    /** @type {?} */\n                    var text = _this.element.innerText;\n                    if (text || !_this.mandatory) {\n                        _this.value = text;\n                    }\n                    _this.inEdition = false;\n                    return false;\n                }\n                else if (e.keyCode === KeyCodes.Escape) {\n                    _this.inEdition = false;\n                    return false;\n                }\n                return false;\n            }));\n        }));\n    }\n    Object.defineProperty(DejaEditableDirective.prototype, \"mandatory\", {\n        /** Retourne une valeur indiquant si le contenu édité est obligatoire. Si la valeur est 'true' la sortie du mode édition ne sera pas possible tant qu'un contenu n'est pas ajouté. */\n        get: /**\n         * Retourne une valeur indiquant si le contenu édité est obligatoire. Si la valeur est 'true' la sortie du mode édition ne sera pas possible tant qu'un contenu n'est pas ajouté.\n         * @return {?}\n         */\n        function () {\n            return this._mandatory;\n        },\n        /** Définit une valeur indiquant si le contenu édité est obligatoire. Si la valeur est 'true' la sortie du mode édition ne sera pas possible tant qu'un contenu n'est pas ajouté. */\n        set: /**\n         * Définit une valeur indiquant si le contenu édité est obligatoire. Si la valeur est 'true' la sortie du mode édition ne sera pas possible tant qu'un contenu n'est pas ajouté.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._mandatory = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaEditableDirective.prototype, \"multiline\", {\n        /** Retourne une valeur indiquant si le contenu édité est multiligne */\n        get: /**\n         * Retourne une valeur indiquant si le contenu édité est multiligne\n         * @return {?}\n         */\n        function () {\n            return this._multiline;\n        },\n        /** Définit une valeur indiquant si le contenu édité est multiligne */\n        set: /**\n         * Définit une valeur indiquant si le contenu édité est multiligne\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._multiline = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaEditableDirective.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this._control && this._control.disabled) || this._disabled;\n        },\n        /** Permet de désactiver le controle */\n        set: /**\n         * Permet de désactiver le controle\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var disabled = coerceBooleanProperty(value);\n            this._disabled = disabled || null;\n            if (this.disabled) {\n                this.edit$.next([false, false]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaEditableDirective.prototype, \"editMode\", {\n        /** Retourne une valeur indiquant si l'édition est activée. */\n        get: /**\n         * Retourne une valeur indiquant si l'édition est activée.\n         * @return {?}\n         */\n        function () {\n            return this._editMode;\n        },\n        /** Définit une valeur indiquant si l'édition est activée. */\n        set: /**\n         * Définit une valeur indiquant si l'édition est activée.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._editMode = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaEditableDirective.prototype, \"inEdition\", {\n        /** Retourne une valeur indiquant si l'élément est en édition. */\n        get: /**\n         * Retourne une valeur indiquant si l'élément est en édition.\n         * @return {?}\n         */\n        function () {\n            return this._inEdition;\n        },\n        /** Définit une valeur indiquant si l'élément est en édition. */\n        set: /**\n         * Définit une valeur indiquant si l'élément est en édition.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this.disabled) {\n                return;\n            }\n            this.edit$.next([coerceBooleanProperty(value), false]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaEditableDirective.prototype, \"value\", {\n        // get accessor\n        get: \n        // get accessor\n        /**\n         * @return {?}\n         */\n        function () {\n            return this.model;\n        },\n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        set: \n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        /**\n         * @param {?} model\n         * @return {?}\n         */\n        function (model) {\n            if (model !== this.model) {\n                this.writeValue(model);\n                this.onChangeCallback(model);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.writeValue = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.model = value;\n        this.refreshView();\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.registerOnChange = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.registerOnTouched = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    // ************* End of ControlValueAccessor Implementation **************\n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.ngOnInit = \n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * @return {?}\n     */\n    function () {\n        this.model = this.element.innerHTML;\n    };\n    /**\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.isAlive = false;\n    };\n    /** Donne le focus à la zone d'édition. */\n    /**\n     * Donne le focus à la zone d'édition.\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.focus = /**\n     * Donne le focus à la zone d'édition.\n     * @return {?}\n     */\n    function () {\n        this.element.focus();\n    };\n    /** Place toute la zone d'édition en selectioné. */\n    /**\n     * Place toute la zone d'édition en selectioné.\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.selectAll = /**\n     * Place toute la zone d'édition en selectioné.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var range = document.createRange();\n        range.selectNodeContents(this.element);\n        /** @type {?} */\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    };\n    /** Active la zone d'édition. */\n    /**\n     * Active la zone d'édition.\n     * @param {?=} selectOnFocus\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.edit = /**\n     * Active la zone d'édition.\n     * @param {?=} selectOnFocus\n     * @return {?}\n     */\n    function (selectOnFocus) {\n        this.edit$.next([!this.disabled, selectOnFocus]);\n    };\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.isChildElement = /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var parentElement = element;\n        while (parentElement && parentElement !== this.element) {\n            parentElement = parentElement.parentElement;\n        }\n        return parentElement === this.element;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DejaEditableDirective.prototype.refreshView = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.model) {\n            return;\n        }\n        if (this.inEdition) {\n            this.element.innerText = this.model.replace(/<br\\s*[\\/]?>/gi, '\\n');\n        }\n        else {\n            this.element.innerHTML = this.model.replace(/\\n/g, '<br />');\n        }\n    };\n    DejaEditableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[deja-editable]',\n                },] }\n    ];\n    /** @nocollapse */\n    DejaEditableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n    ]; };\n    DejaEditableDirective.propDecorators = {\n        _disabled: [{ type: HostBinding, args: ['attr.disabled',] }],\n        mandatory: [{ type: Input }],\n        multiline: [{ type: Input }],\n        disabled: [{ type: Input }],\n        editMode: [{ type: Input, args: ['deja-editable',] }],\n        inEdition: [{ type: Input }]\n    };\n    return DejaEditableDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaEditableModule = /** @class */ (function () {\n    function DejaEditableModule() {\n    }\n    DejaEditableModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaEditableDirective],\n                    exports: [DejaEditableDirective],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                    ],\n                },] }\n    ];\n    return DejaEditableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaEditableModule, DejaEditableDirective };\n\n//# sourceMappingURL=deja-js-component-content-editable.js.map"],"sourceRoot":""}