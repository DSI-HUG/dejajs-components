{"version":3,"sources":["webpack:///./dist/deja-js/component/fesm5/deja-js-component-chips.js","webpack:///./dist/deja-js/component/fesm5/deja-js-component-tag.js","webpack:///./src/app/tag/tag-demo.component.html","webpack:///./src/app/tag/tag-demo.component.ts","webpack:///./src/app/tag/tag-demo.module.ts","webpack:///./src/app/tag/tag-demo.routes.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACG;AACY;AAC8D;AACpE;;AAExD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,EAAE,8CAA8C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qFAAqF,yDAAyD,sBAAsB,4HAA4H,gCAAgC,oSAAoS,EAAE;AACtmB,oCAAoC,SAAS,UAAU,gBAAgB,aAAa,eAAe,mBAAmB,qCAAqC,kBAAkB,uBAAuB,cAAc,sBAAsB,aAAa,eAAe,cAAc,qBAAqB,aAAa,mBAAmB,qBAAqB,eAAe,eAAe,oCAAoC,SAAS,UAAU,eAAe;AAChc,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAC1E,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,kCAAkC,OAAO,mDAAK,EAAE;AAChD,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,qBAAqB,OAAO,yDAAW,4BAA4B;AACnE,gCAAgC,OAAO,0DAAY,2BAA2B;AAC9E,kCAAkC,OAAO,0DAAY,6BAA6B;AAClF,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAa;AACrC;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+C;;AAE/C,mD;;;;;;;;;;;;AChRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACQ;AACE;AACE;AACG;AAC0B;AAChC;AACf;;AAEzC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,sDAAQ;AAClC,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oDAAoD,cAAc,WAAW,8BAA8B,eAAe;AAC1H,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAC1E,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,yDAAW,4BAA4B;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,oEAAa;AACrC,wBAAwB,sEAAc;AACtC,wBAAwB,wEAAe;AACvC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE2C;;AAE3C,iD;;;;;;;;;;;ACrOA,imBAAimB,eAAe,6D;;;;;;;;;;;;;;;;;ACAhnB;;;;;;GAMG;AACuC;AAM1C;IAMI;QAJO,aAAQ,GAAG,CAAC,CAAC;QAEb,WAAM,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAErB,CAAC;IANR,oBAAoB;QAJhC,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,uGAAsC;SACzC,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;;ACbjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;GAMG;;AAE4C;AACN;AACI;AACK;AACK;AACM;AACN;AACa;AACR;AAChB;AAkB5C;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAhB7B,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,wEAAoB,CAAC;YACpC,OAAO,EAAE,CAAC,wEAAoB,CAAC;YAC/B,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,oEAAa;gBACb,+DAAa;gBACb,0EAAgB;gBAChB,oEAAa;gBACb,4EAAkB;gBAClB,yDAAO;aACV;YACD,SAAS,EAAE,EACV;SACJ,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnC9B;AAAA;AAAA;AAAA;AAAA;;;;;;GAMG;AAGoD;AACK;AAE5D,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAoB,EAAE;IAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC","file":"tag-tag-demo-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ContentChild, EventEmitter, HostBinding, Input, Optional, Output, Self, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\nvar DejaChipsComponent = /** @class */ (function () {\n    function DejaChipsComponent(_control) {\n        this._control = _control;\n        /**\n         * Lecture seule\n         */\n        this.readonly = false;\n        this.close = new EventEmitter();\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this._disabled = null;\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n    }\n    Object.defineProperty(DejaChipsComponent.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._disabled;\n        },\n        /** Retourne ou definit si le selecteur est desactivé. */\n        set: /**\n         * Retourne ou definit si le selecteur est desactivé.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value) || null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaChipsComponent.prototype, \"items\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._items;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaChipsComponent.prototype, \"value\", {\n        // get accessor\n        get: \n        // get accessor\n        /**\n         * @return {?}\n         */\n        function () {\n            return this._items;\n        },\n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        set: \n        // ************* ControlValueAccessor Implementation **************\n        // set accessor including call the onchange callback\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.writeValue(value);\n            this.onChangeCallback(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.writeValue = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._items = value;\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.registerOnChange = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    // From ControlValueAccessor interface\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.registerOnTouched = \n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    Object.defineProperty(DejaChipsComponent.prototype, \"itemTemplate\", {\n        // ************* End of ControlValueAccessor Implementation **************\n        get: \n        // ************* End of ControlValueAccessor Implementation **************\n        /**\n         * @return {?}\n         */\n        function () {\n            return this.itemTemplateExternal || this.itemTemplateInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaChipsComponent.prototype, \"insertTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.insertTemplateExternal || this.insertTemplateInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.getTextValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!value) {\n            return '';\n        }\n        else {\n            if (this.textField && value.model && value.model[this.textField] !== undefined) {\n                return value.model[this.textField];\n            }\n            else if (this.textField && value[this.textField] !== undefined) {\n                return value[this.textField];\n            }\n            else if (value.displayName) {\n                return typeof value.displayName === 'string' ? value.displayName : value.displayName();\n            }\n            else if (typeof value.toString === 'function') {\n                return value.toString();\n            }\n        }\n    };\n    /**\n     * @param {?} item\n     * @param {?} index\n     * @return {?}\n     */\n    DejaChipsComponent.prototype.onClose = /**\n     * @param {?} item\n     * @param {?} index\n     * @return {?}\n     */\n    function (item, index) {\n        /** @type {?} */\n        var event = (/** @type {?} */ (new CustomEvent('DejaChipsCloseEvent', {})));\n        event.item = item;\n        event.index = index;\n        this.items.splice(index, 1);\n        this.onChangeCallback(this.items);\n        this.close.emit(event);\n    };\n    DejaChipsComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'deja-chips',\n                    template: \"<span class=\\\"chips-item\\\" *ngFor=\\\"let item of items; let index = index\\\">\\n\\t<span *ngIf=\\\"!itemTemplate\\\">{{ getTextValue(item) }}</span>\\n\\t<span *ngIf=\\\"itemTemplate\\\">\\n\\t\\t<ng-template [ngTemplateOutlet]=\\\"itemTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, index: index }\\\"></ng-template>\\n\\t</span>\\n\\t<mat-icon id=\\\"close-button\\\" *ngIf=\\\"!readonly && !disabled\\\" (click)=\\\"onClose(item, index)\\\">close</mat-icon>\\n</span>\\n<span class=\\\"insert-item\\\" *ngIf=\\\"insertTemplate\\\">\\n\\t<ng-template [ngTemplateOutlet]=\\\"insertTemplate\\\" [ngTemplateOutletContext]=\\\"{ }\\\"></ng-template>\\n</span>\",\n                    styles: [\":host{margin:0;padding:0;overflow:hidden;display:flex;flex-wrap:wrap;align-items:center}:host[disabled]>span.chips-item>span{font-style:italic}:host>span.insert-item{flex:1 1 auto}:host>span.chips-item{margin:.1rem;padding:.38rem;flex:0 0 auto;border-radius:.88rem;display:flex;align-items:center;text-decoration:none;transition:.3s;cursor:default}:host>span.chips-item #close-button{zoom:72%;z-index:3;cursor:pointer}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaChipsComponent.ctorParameters = function () { return [\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n    ]; };\n    DejaChipsComponent.propDecorators = {\n        _items: [{ type: Input }],\n        textField: [{ type: Input }],\n        itemTemplateExternal: [{ type: Input }],\n        insertTemplateExternal: [{ type: Input }],\n        readonly: [{ type: Input }],\n        close: [{ type: Output }],\n        _disabled: [{ type: HostBinding, args: ['attr.disabled',] }],\n        itemTemplateInternal: [{ type: ContentChild, args: ['itemTemplate',] }],\n        insertTemplateInternal: [{ type: ContentChild, args: ['insertTemplate',] }],\n        disabled: [{ type: Input }],\n        items: [{ type: Input }]\n    };\n    return DejaChipsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaChipsModule = /** @class */ (function () {\n    function DejaChipsModule() {\n    }\n    DejaChipsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaChipsComponent],\n                    exports: [DejaChipsComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        MatIconModule,\n                    ],\n                },] }\n    ];\n    return DejaChipsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaChipsModule, DejaChipsComponent };\n\n//# sourceMappingURL=deja-js-component-chips.js.map","import { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { DejaChipsModule } from '@deja-js/component/chips';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, HostBinding, Input, Optional, Self, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { KeyCodes } from '@deja-js/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\n/**\n * Deja Tag Component for Angular\n *\n * This component allow you to manage element into an array of string\n */\nvar DejaTagComponent = /** @class */ (function () {\n    function DejaTagComponent(_control) {\n        this._control = _control;\n        /**\n         * Current value into the input\n         */\n        this.text = '';\n        /**\n         * Current value of the array of string\n         */\n        this.items = [];\n        this._disabled = null;\n        // NgModel implementation\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.onValidatorChangeCallback = noop;\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n    }\n    Object.defineProperty(DejaTagComponent.prototype, \"disabled\", {\n        /**\n         * Get disable value\n         */\n        get: /**\n         * Get disable value\n         * @return {?}\n         */\n        function () {\n            return this._control ? this._control.disabled : this._disabled;\n        },\n        /** Allow to disabled the component */\n        set: /**\n         * Allow to disabled the component\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var disabled = coerceBooleanProperty(value);\n            this._disabled = disabled || null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DejaTagComponent.prototype, \"value\", {\n        // ************* ControlValueAccessor Implementation **************\n        get: \n        // ************* ControlValueAccessor Implementation **************\n        /**\n         * @return {?}\n         */\n        function () {\n            return this.items;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this.writeValue(val);\n            this.onChangeCallback(val);\n            this.onTouchedCallback();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DejaTagComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.items = value ? value : [];\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaTagComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DejaTagComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DejaTagComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * Trigerred when user press key into the component\n     */\n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * Trigerred when user press key into the component\n     * @param {?} e\n     * @return {?}\n     */\n    DejaTagComponent.prototype.onKeyDown = \n    // ************* End of ControlValueAccessor Implementation **************\n    /**\n     * Trigerred when user press key into the component\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (e.keyCode === KeyCodes.Enter) {\n            /** @type {?} */\n            var target = (/** @type {?} */ (e.target));\n            this.onAddItem(target.value);\n        }\n    };\n    /**\n     * Add item into the the list\n     * @param val : Value of the text to add\n     */\n    /**\n     * Add item into the the list\n     * @param {?} val : Value of the text to add\n     * @return {?}\n     */\n    DejaTagComponent.prototype.onAddItem = /**\n     * Add item into the the list\n     * @param {?} val : Value of the text to add\n     * @return {?}\n     */\n    function (val) {\n        if (val) {\n            this.items.push(val);\n            this.value = this.items;\n            this.text = '';\n        }\n    };\n    DejaTagComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'deja-tag',\n                    template: \"<deja-chips [items]=\\\"items\\\" [disabled]=\\\"disabled\\\"></deja-chips>\\n<mat-form-field>\\n    <input matInput [(ngModel)]=\\\"text\\\" matInput (keydown)=\\\"onKeyDown($event)\\\" [placeholder]=\\\"placeholder\\\" [disabled]=\\\"disabled\\\" autocomplete=\\\"off\\\">\\n    <div (click)=\\\"onAddItem(text)\\\" matSuffix><mat-icon class=\\\"matSuffix\\\">add</mat-icon></div>\\n</mat-form-field>\",\n                    styles: [\":host .mat-form-field{display:block;width:100%}:host .mat-form-field i:hover{cursor:pointer}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DejaTagComponent.ctorParameters = function () { return [\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n    ]; };\n    DejaTagComponent.propDecorators = {\n        placeholder: [{ type: Input }],\n        disabled: [{ type: Input }],\n        _disabled: [{ type: HostBinding, args: ['attr.disabled',] }]\n    };\n    return DejaTagComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DejaTagModule = /** @class */ (function () {\n    function DejaTagModule() {\n    }\n    DejaTagModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DejaTagComponent],\n                    exports: [DejaTagComponent],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        MatIconModule,\n                        MatInputModule,\n                        DejaChipsModule,\n                    ],\n                    providers: [],\n                },] }\n    ];\n    return DejaTagModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DejaTagModule, DejaTagComponent };\n\n//# sourceMappingURL=deja-js-component-tag.js.map","module.exports = \"<mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedTabChange)=\\\"tabIndex = $event.index\\\">\\n    <mat-tab label=\\\"API REFERENCE\\\"></mat-tab>\\n    <mat-tab label=\\\"EXAMPLES\\\"></mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 0\\\">\\n    TODO\\n</mat-card>\\n<mat-card class=\\\"demo-card demo-basic\\\" *ngIf=\\\"tabIndex === 1\\\">\\n    <mat-toolbar color=\\\"primary\\\">Tag Component</mat-toolbar>\\n    <mat-card-content>\\n        <deja-tag [(ngModel)]=\\\"values\\\" placeholder=\\\"Add tags\\\"></deja-tag>\\n\\n        <div>\\n            Model : \\n            <pre>{{values | json}}</pre>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'tag-demo',\n    templateUrl: 'tag-demo.component.html'\n})\nexport class DejaTagDemoComponent {\n\n    public tabIndex = 1;\n\n    public values = ['HTML5', 'ANGULAR'];\n\n    constructor() { }\n}\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatTabsModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DejaTagModule } from '@deja-js/component/tag';\nimport { DejaMarkdownModule } from '../../component/markdown/index';\nimport { DejaTagDemoComponent } from './tag-demo.component';\nimport { routing } from './tag-demo.routes';\n\n@NgModule({\n    declarations: [DejaTagDemoComponent],\n    exports: [DejaTagDemoComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatCardModule,\n        MatTabsModule,\n        MatToolbarModule,\n        DejaTagModule,\n        DejaMarkdownModule,\n        routing,\n    ],\n    providers: [\n    ],\n})\nexport class DejaTagDemoModule { }\n","/*\n *  @license\n *  Copyright Hôpitaux Universitaires de Genève. All Rights Reserved.\n *\n *  Use of this source code is governed by an Apache-2.0 license that can be\n *  found in the LICENSE file at https://github.com/DSI-HUG/dejajs-components/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DejaTagDemoComponent } from './tag-demo.component';\n\nconst routes: Routes = [\n    { path: '', component: DejaTagDemoComponent },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n"],"sourceRoot":""}